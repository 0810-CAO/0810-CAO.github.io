<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue(4.1)</title>
    <url>/2020/10/17/vue-4-1/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;vue创建项目并在本地运行</span><br><span class="line">vue init webpack vue_first</span><br><span class="line">cd vue_first</span><br><span class="line">&#x2F;&#x2F;运行项目</span><br><span class="line">npm run dev</span><br><span class="line">http:&#x2F;&#x2F;localhost:8080</span><br><span class="line">&#x2F;&#x2F;静态环境打包发布</span><br><span class="line">npm run build&#x2F;&#x2F;打包</span><br><span class="line">npm install -g serve</span><br><span class="line">serve dist</span><br><span class="line">http:&#x2F;&#x2F;localhost:5000</span><br><span class="line">&#x2F;&#x2F;服务器打包发布</span><br><span class="line">在webpack.prod.conf.js中的output中添加类似的项目名称</span><br><span class="line">publicPath: &#39;&#x2F;vue_first&#x2F;&#39;</span><br><span class="line">将打包后的文件移动复制到tomcat&#x2F;webapps文件夹中</span><br><span class="line">安装tomcat</span><br><span class="line">cd &#x2F;Library&#x2F;tomcat&#x2F;bin </span><br><span class="line">sudo chmod 755 *.sh</span><br><span class="line">sudo sh .&#x2F;startup.sh&#x2F;&#x2F;开启</span><br><span class="line">sh .&#x2F;shutdown.sh&#x2F;&#x2F;关闭</span><br><span class="line">在.eslintignore中添加</span><br><span class="line">*.js</span><br><span class="line">*.vue  即可忽略eslint校验</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index.html</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width,initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;vue_first&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- built files will be auto injected --&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">App.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;img class&#x3D;&quot;logo&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot; alt&#x3D;&quot;logo&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- 使用组件标签 --&gt;</span><br><span class="line">    &lt;HelloWord&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; 1、引入组件</span><br><span class="line">import HelloWord from &quot;.&#x2F;components&#x2F;HelloWord.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F;2、映射组件标签</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWord,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.logo&#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p class&#x3D;&quot;msg&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">HelloWord.vue</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F;配置对象</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &quot;Hello Vue Component&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.msg &#123;</span><br><span class="line">  color: red;</span><br><span class="line">  font-size: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">main.js</span><br><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import App from &#39;.&#x2F;App&#39;</span><br><span class="line">&#x2F;&#x2F; 创建vue实例</span><br><span class="line">&#x2F;* eslint-disable no-new *&#x2F;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &#39;#app&#39;,</span><br><span class="line">    components: &#123; App &#125;,</span><br><span class="line">    template: &#39;&lt;App&#x2F;&gt;&#39;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>Vue.demo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--App.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;header class&#x3D;&quot;site-header jumbotron&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-xs-12&quot;&gt;</span><br><span class="line">            &lt;h1&gt;请发表对Vue的评论&lt;&#x2F;h1&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;header&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">    &lt;!--将方法传递给组件--&gt;</span><br><span class="line">      &lt;Add :addcomment&#x3D;&quot;addcomment&quot;&#x2F;&gt;</span><br><span class="line">      &lt;!--传递数据到组件 方法到组件需要逐层传递--&gt;</span><br><span class="line">      &lt;List :comments&#x3D;&quot;comments&quot; :deletecomment&#x3D;&quot;deletecomment&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Add from &quot;.&#x2F;components&#x2F;Add.vue&quot;;</span><br><span class="line">import List from &quot;.&#x2F;components&#x2F;List.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">      return&#123;</span><br><span class="line">          comments:[&#x2F;&#x2F;数据在哪个组件，更新数据的方法就应该定义在哪个组件</span><br><span class="line">              &#123;</span><br><span class="line">                  name:&#39;AAA&#39;,</span><br><span class="line">                  content:&quot;good&quot;</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                  name:&#39;BBB&#39;,</span><br><span class="line">                  content:&quot;better&quot;</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                  name:&#39;CCC&#39;,</span><br><span class="line">                  content:&quot;best&quot;</span><br><span class="line">              &#125;</span><br><span class="line">          ]</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F; 添加评论</span><br><span class="line">    addcomment(comment)&#123;</span><br><span class="line">      this.comments.unshift(comment)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 删除指定下标</span><br><span class="line">    deletecomment(index)&#123;</span><br><span class="line">      this.comments.splice(index,1)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Add,</span><br><span class="line">    List,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--Add.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;col-md-4&quot;&gt;</span><br><span class="line">    &lt;form class&#x3D;&quot;form-horizontal&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">        &lt;label&gt;用户名&lt;&#x2F;label&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; placeholder&#x3D;&quot;用户名&quot; v-model&#x3D;&quot;name&quot; &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">        &lt;label&gt;评论内容&lt;&#x2F;label&gt;</span><br><span class="line">        &lt;textarea class&#x3D;&quot;form-control&quot; rows&#x3D;&quot;6&quot; placeholder&#x3D;&quot;评论内容&quot; v-model&#x3D;&quot;content&quot;&gt;&lt;&#x2F;textarea&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;col-sm-offset-2 col-sm-10&quot;&gt;</span><br><span class="line">          &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-default pull-right&quot; @click&#x3D;&quot;add&quot;&gt;提交&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:&#123;</span><br><span class="line">    addcomment:&#123;&#x2F;&#x2F;指定属性名、属性值的类型</span><br><span class="line">      type:Function,</span><br><span class="line">      required:true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      name: &#39;&#39;,</span><br><span class="line">      content: &#39;&#39;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    add() &#123;</span><br><span class="line">      &#x2F;&#x2F;1、检查输入的合法性</span><br><span class="line">      const name &#x3D; this.name.trim();</span><br><span class="line">      const content &#x3D; this.content.trim();</span><br><span class="line">      if (!name || !content) &#123;</span><br><span class="line">        alert(&#39;姓名或内容不能为空&#39;)</span><br><span class="line">        return</span><br><span class="line">      &#125;</span><br><span class="line">      &#x2F;&#x2F;2、根据输入的数据封装成一个comment对象</span><br><span class="line">      const comment&#x3D;&#123;</span><br><span class="line">        name,</span><br><span class="line">        content</span><br><span class="line">      &#125;</span><br><span class="line">      &#x2F;&#x2F;3、添加带comments中</span><br><span class="line">      this.addcomment(comment)</span><br><span class="line">      &#x2F;&#x2F;4、清除输入</span><br><span class="line">      this.name&#x3D;&#39;&#39;</span><br><span class="line">      this.content&#x3D;&#39;&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--List.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;col-md-8&quot;&gt;</span><br><span class="line">    &lt;h3 class&#x3D;&quot;reply&quot;&gt;评论回复:&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;h2 v-show&#x3D;&quot;comments.length&#x3D;&#x3D;&#x3D;0&quot;&gt;暂无评论，点击左侧添加评论&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;list-group&quot;&gt;</span><br><span class="line">      &lt;Item v-for&#x3D;&quot;(comment,index) in comments&quot; :key&#x3D;&quot;index&quot; :comment&#x3D;&quot;comment&quot; </span><br><span class="line">      :deletecomment&#x3D;&quot;deletecomment&quot; :index&#x3D;&quot;index&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Item from &#39;.&#x2F;Item.vue&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F; 声明接受属性 该属性就会成为组件对象的属性</span><br><span class="line">  &#x2F;&#x2F;仅仅指定属性名</span><br><span class="line">  props: [&#39;comments&#39;,&#39;deletecomment&#39;],&#x2F;&#x2F;props用于接收来自父组件的数据</span><br><span class="line">  components: &#123;</span><br><span class="line">    Item,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.reply &#123;</span><br><span class="line">  margin-top: 0px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--Item.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;li class&#x3D;&quot;list-group-item&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;handle&quot;&gt;</span><br><span class="line">      &lt;a href&#x3D;&quot;javascript:;&quot; @click&#x3D;&quot;deleteItem&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;p class&#x3D;&quot;user&quot;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123;comment.name&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;span&gt;说：&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p class&#x3D;&quot;centence&quot;&gt;&#123;&#123;comment.content&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    &#x2F;&#x2F;指定属性名和属性值</span><br><span class="line">    comment: Object,</span><br><span class="line">    deletecomment: Function,</span><br><span class="line">    index: Number,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    deleteItem() &#123;</span><br><span class="line">      const &#123; comment, index, deletecomment &#125; &#x3D; this;</span><br><span class="line">      if (window.confirm(&#96;确定删除$&#123;comment.name&#125;的评论吗&#96;)) &#123;</span><br><span class="line">        deletecomment(index);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">li &#123;</span><br><span class="line">  transition: 0.5s;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.handle &#123;</span><br><span class="line">  width: 40px;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">  background: #fff;</span><br><span class="line">  position: absolute;</span><br><span class="line">  right: 10px;</span><br><span class="line">  top: 1px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.handle a &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">.list-group-item .centence &#123;</span><br><span class="line">  padding: 0px 50px;</span><br><span class="line">&#125;</span><br><span class="line">.user &#123;</span><br><span class="line">  font-size: 22px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>渗透测试</title>
    <url>/2020/10/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p><a href="http://www.pentest-standard.org/index.php/Main_Page" target="_blank" rel="noopener">PETS</a></p>
<p>前期交互阶段</p>
<p>情报收集阶段</p>
<p>威胁建模阶段</p>
<p>漏洞分析阶段</p>
<p>渗透攻击阶段</p>
<p>后渗透测试阶段</p>
<p>渗透测试报告</p>
]]></content>
      <categories>
        <category>白帽</category>
      </categories>
  </entry>
  <entry>
    <title>电商管理后台 API 接口（2）</title>
    <url>/2020/10/07/%E7%94%B5%E5%95%86%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0-API-%E6%8E%A5%E5%8F%A3%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<h2 id="1-7-分类参数管理"><a href="#1-7-分类参数管理" class="headerlink" title="1.7. 分类参数管理"></a>1.7. 分类参数管理</h2><h3 id="1-7-1-参数列表"><a href="#1-7-1-参数列表" class="headerlink" title="1.7.1. 参数列表"></a>1.7.1. 参数列表</h3><ul>
<li>请求路径：categories/:id/attributes</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>sel</td>
<td>[only,many]</td>
<td>不能为空,通过 only 或 many 来获取分类静态参数还是动态参数</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>attr_id</td>
<td>分类参数 ID</td>
<td></td>
</tr>
<tr>
<td>attr_name</td>
<td>分类参数名称</td>
<td></td>
</tr>
<tr>
<td>cat_id</td>
<td>分类参数所属分类</td>
<td></td>
</tr>
<tr>
<td>attr_sel</td>
<td>only:输入框(唯一) many:后台下拉列表/前台单选框</td>
<td></td>
</tr>
<tr>
<td>attr_write</td>
<td>manual:手工录入 list:从列表选择</td>
<td></td>
</tr>
<tr>
<td>attr_vals</td>
<td>如果 attr_write:list,那么有值，该值以逗号分隔</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;attr_id&quot;: 1,</span><br><span class="line">            &quot;attr_name&quot;: &quot;cpu&quot;,</span><br><span class="line">            &quot;cat_id&quot;: 22,</span><br><span class="line">            &quot;attr_sel&quot;: &quot;only&quot;,</span><br><span class="line">            &quot;attr_write&quot;: &quot;manual&quot;,</span><br><span class="line">            &quot;attr_vals&quot;: &quot;ffff&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-7-2-添加动态参数或者静态属性"><a href="#1-7-2-添加动态参数或者静态属性" class="headerlink" title="1.7.2. 添加动态参数或者静态属性"></a>1.7.2. 添加动态参数或者静态属性</h3><ul>
<li>请求路径：categories/:id/attributes</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>attr_name</td>
<td>参数名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>attr_sel</td>
<td>[only,many]</td>
<td>不能为空</td>
</tr>
<tr>
<td>attr_vals</td>
<td>如果是 many 就需要填写值的选项，以逗号分隔</td>
<td>【可选参数】</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;attr_id&quot;: 44,</span><br><span class="line">        &quot;attr_name&quot;: &quot;测试参数&quot;,</span><br><span class="line">        &quot;cat_id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">        &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">        &quot;attr_vals&quot;: &quot;a,b,c&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;创建成功&quot;,</span><br><span class="line">        &quot;status&quot;: 201</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-7-3-删除参数"><a href="#1-7-3-删除参数" class="headerlink" title="1.7.3. 删除参数"></a>1.7.3. 删除参数</h3><ul>
<li>请求路径： categories/:id/attributes/:attrid</li>
<li>请求方法：delete</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>:attrid</td>
<td>参数 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: null,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;删除成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-7-4-根据-ID-查询参数"><a href="#1-7-4-根据-ID-查询参数" class="headerlink" title="1.7.4. 根据 ID 查询参数"></a>1.7.4. 根据 ID 查询参数</h3><ul>
<li>请求路径：categories/:id/attributes/:attrId</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>:attrId</td>
<td>属性 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>attr_sel</td>
<td>[only,many]</td>
<td>不能为空</td>
</tr>
<tr>
<td>attr_vals</td>
<td>如果是 many 就需要填写值的选项，以逗号分隔</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;attr_id&quot;: 1,</span><br><span class="line">        &quot;attr_name&quot;: &quot;cpu&quot;,</span><br><span class="line">        &quot;cat_id&quot;: 22,</span><br><span class="line">        &quot;attr_sel&quot;: &quot;only&quot;,</span><br><span class="line">        &quot;attr_write&quot;: &quot;manual&quot;,</span><br><span class="line">        &quot;attr_vals&quot;: &quot;ffff&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-7-5-编辑提交参数"><a href="#1-7-5-编辑提交参数" class="headerlink" title="1.7.5. 编辑提交参数"></a>1.7.5. 编辑提交参数</h3><ul>
<li>请求路径：categories/:id/attributes/:attrId</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>:attrId</td>
<td>属性 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>attr_name</td>
<td>新属性的名字</td>
<td>不能为空，携带在<code>请求体</code>中</td>
</tr>
<tr>
<td>attr_sel</td>
<td>属性的类型[many或only]</td>
<td>不能为空，携带在<code>请求体</code>中</td>
</tr>
<tr>
<td>attr_vals</td>
<td>参数的属性值</td>
<td>可选参数，携带在<code>请求体</code>中</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;attr_id&quot;: 9,</span><br><span class="line">        &quot;attr_name&quot;: &quot;测试更新&quot;,</span><br><span class="line">        &quot;cat_id&quot;: &quot;43&quot;,</span><br><span class="line">        &quot;attr_sel&quot;: &quot;only&quot;,</span><br><span class="line">        &quot;attr_write&quot;: &quot;manual&quot;,</span><br><span class="line">        &quot;attr_vals&quot;: &quot;abc&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;更新成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-8-商品管理"><a href="#1-8-商品管理" class="headerlink" title="1.8. 商品管理"></a>1.8. 商品管理</h2><h3 id="1-8-1-商品列表数据"><a href="#1-8-1-商品列表数据" class="headerlink" title="1.8.1. 商品列表数据"></a>1.8.1. 商品列表数据</h3><ul>
<li>请求路径：goods</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>query</td>
<td>查询参数</td>
<td>可以为空</td>
</tr>
<tr>
<td>pagenum</td>
<td>当前页码</td>
<td>不能为空</td>
</tr>
<tr>
<td>pagesize</td>
<td>每页显示条数</td>
<td>不能为空</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>total</td>
<td>总共商品条数</td>
<td></td>
</tr>
<tr>
<td>pagenum</td>
<td>当前商品页数</td>
<td></td>
</tr>
<tr>
<td>goods_id</td>
<td>商品 ID</td>
<td></td>
</tr>
<tr>
<td>goods_name</td>
<td>商品名称</td>
<td></td>
</tr>
<tr>
<td>goods_price</td>
<td>价格</td>
<td></td>
</tr>
<tr>
<td>goods_number</td>
<td>数量</td>
<td></td>
</tr>
<tr>
<td>goods_weight</td>
<td>重量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_state</td>
<td>商品状态</td>
<td>商品状态 0: 未通过 1: 审核中 2: 已审核</td>
</tr>
<tr>
<td>add_time</td>
<td>添加时间</td>
<td></td>
</tr>
<tr>
<td>upd_time</td>
<td>更新时间</td>
<td></td>
</tr>
<tr>
<td>hot_mumber</td>
<td>热销品数量</td>
<td></td>
</tr>
<tr>
<td>is_promote</td>
<td>是否是热销品</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;total&quot;: 50,</span><br><span class="line">        &quot;pagenum&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;goods&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 144,</span><br><span class="line">                &quot;goods_name&quot;: &quot;asfdsd&quot;,</span><br><span class="line">                &quot;goods_price&quot;: 1,</span><br><span class="line">                &quot;goods_number&quot;: 1,</span><br><span class="line">                &quot;goods_weight&quot;: 1,</span><br><span class="line">                &quot;goods_state&quot;: null,</span><br><span class="line">                &quot;add_time&quot;: 1512954923,</span><br><span class="line">                &quot;upd_time&quot;: 1512954923,</span><br><span class="line">                &quot;hot_mumber&quot;: 0,</span><br><span class="line">                &quot;is_promote&quot;: false</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-8-2-添加商品"><a href="#1-8-2-添加商品" class="headerlink" title="1.8.2. 添加商品"></a>1.8.2. 添加商品</h3><ul>
<li>请求路径：goods</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>goods_name</td>
<td>商品名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_cat</td>
<td>以为’,’分割的分类列表</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_price</td>
<td>价格</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_number</td>
<td>数量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_weight</td>
<td>重量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_introduce</td>
<td>介绍</td>
<td>可以为空</td>
</tr>
<tr>
<td>pics</td>
<td>上传的图片临时路径（对象）</td>
<td>可以为空</td>
</tr>
<tr>
<td>attrs</td>
<td>商品的参数（数组），包含 <code>动态参数</code> 和 <code>静态属性</code></td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>请求数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"goods_name"</span>:<span class="string">"test_goods_name2"</span>,</span><br><span class="line">  <span class="attr">"goods_cat"</span>: <span class="string">"1,2,3"</span>,</span><br><span class="line">  <span class="attr">"goods_price"</span>:<span class="number">20</span>,</span><br><span class="line">  <span class="attr">"goods_number"</span>:<span class="number">30</span>,</span><br><span class="line">  <span class="attr">"goods_weight"</span>:<span class="number">40</span>,</span><br><span class="line">  <span class="attr">"goods_introduce"</span>:<span class="string">"abc"</span>,</span><br><span class="line">  <span class="attr">"pics"</span>:[</span><br><span class="line">    &#123;<span class="attr">"pic"</span>:<span class="string">"/tmp_uploads/30f08d52c551ecb447277eae232304b8"</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">  <span class="attr">"attrs"</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attr_id"</span>:<span class="number">15</span>,</span><br><span class="line">      <span class="attr">"attr_value"</span>:<span class="string">"ddd"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attr_id"</span>:<span class="number">15</span>,</span><br><span class="line">      <span class="attr">"attr_value"</span>:<span class="string">"eee"</span></span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>total</td>
<td>总共商品条数</td>
<td></td>
</tr>
<tr>
<td>pagenum</td>
<td>当前商品页数</td>
<td></td>
</tr>
<tr>
<td>goods_id</td>
<td>商品 ID</td>
<td></td>
</tr>
<tr>
<td>goods_cat</td>
<td>以为’,’分割的分类列表</td>
<td></td>
</tr>
<tr>
<td>goods_name</td>
<td>商品名称</td>
<td></td>
</tr>
<tr>
<td>goods_price</td>
<td>价格</td>
<td></td>
</tr>
<tr>
<td>goods_number</td>
<td>数量</td>
<td></td>
</tr>
<tr>
<td>goods_weight</td>
<td>重量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_state</td>
<td>商品状态</td>
<td>商品状态 0: 未通过 1: 审核中 2: 已审核</td>
</tr>
<tr>
<td>add_time</td>
<td>添加时间</td>
<td></td>
</tr>
<tr>
<td>upd_time</td>
<td>更新时间</td>
<td></td>
</tr>
<tr>
<td>hot_mumber</td>
<td>热销品数量</td>
<td></td>
</tr>
<tr>
<td>is_promote</td>
<td>是否是热销品</td>
<td></td>
</tr>
<tr>
<td>pics</td>
<td>上传的图片临时路径（对象）</td>
<td>pics_id:图片 ID,goods_id:商品 ID,pics_big:大图,pics_mid:中图,pics_sma:小图</td>
</tr>
<tr>
<td>attrs</td>
<td>商品的参数（数组）</td>
<td>goods_id:商品 ID,attr_value:当前商品的参数值,add_price:浮动价格,attr_vals:预定义的参数值,attr_sel:手动输入，还是单选,</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"goods_id"</span>: <span class="number">145</span>,</span><br><span class="line">        <span class="attr">"goods_name"</span>: <span class="string">"test_goods_name2"</span>,</span><br><span class="line">        <span class="attr">"goods_price"</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">"cat_id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"goods_number"</span>: <span class="number">30</span>,</span><br><span class="line">        <span class="attr">"goods_weight"</span>: <span class="number">40</span>,</span><br><span class="line">        <span class="attr">"goods_introduce"</span>: <span class="string">"abc"</span>,</span><br><span class="line">        <span class="attr">"goods_big_logo"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"goods_small_logo"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"goods_state"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"add_time"</span>: <span class="number">1512962370</span>,</span><br><span class="line">        <span class="attr">"upd_time"</span>: <span class="number">1512962370</span>,</span><br><span class="line">        <span class="attr">"hot_mumber"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"is_promote"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"pics"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"pics_id"</span>: <span class="number">397</span>,</span><br><span class="line">                <span class="attr">"goods_id"</span>: <span class="number">145</span>,</span><br><span class="line">                <span class="attr">"pics_big"</span>: <span class="string">"uploads/goodspics/big_30f08d52c551ecb447277eae232304b8"</span>,</span><br><span class="line">                <span class="attr">"pics_mid"</span>: <span class="string">"uploads/goodspics/mid_30f08d52c551ecb447277eae232304b8"</span>,</span><br><span class="line">                <span class="attr">"pics_sma"</span>: <span class="string">"uploads/goodspics/sma_30f08d52c551ecb447277eae232304b8"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"attrs"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"goods_id"</span>: <span class="number">145</span>,</span><br><span class="line">                <span class="attr">"attr_id"</span>: <span class="number">15</span>,</span><br><span class="line">                <span class="attr">"attr_value"</span>: <span class="string">"ddd"</span>,</span><br><span class="line">                <span class="attr">"add_price"</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">"attr_name"</span>: <span class="string">"fffffff"</span>,</span><br><span class="line">                <span class="attr">"attr_sel"</span>: <span class="string">"many"</span>,</span><br><span class="line">                <span class="attr">"attr_write"</span>: <span class="string">"list"</span>,</span><br><span class="line">                <span class="attr">"attr_vals"</span>: <span class="string">""</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"goods_id"</span>: <span class="number">145</span>,</span><br><span class="line">                <span class="attr">"attr_id"</span>: <span class="number">15</span>,</span><br><span class="line">                <span class="attr">"attr_value"</span>: <span class="string">"eee"</span>,</span><br><span class="line">                <span class="attr">"add_price"</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">"attr_name"</span>: <span class="string">"fffffff"</span>,</span><br><span class="line">                <span class="attr">"attr_sel"</span>: <span class="string">"many"</span>,</span><br><span class="line">                <span class="attr">"attr_write"</span>: <span class="string">"list"</span>,</span><br><span class="line">                <span class="attr">"attr_vals"</span>: <span class="string">""</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"创建商品成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">201</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-8-3-根据-ID-查询商品"><a href="#1-8-3-根据-ID-查询商品" class="headerlink" title="1.8.3. 根据 ID 查询商品"></a>1.8.3. 根据 ID 查询商品</h3><ul>
<li>请求路径：goods/:id</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>商品 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>total</td>
<td>总共商品条数</td>
<td></td>
</tr>
<tr>
<td>pagenum</td>
<td>当前商品页数</td>
<td></td>
</tr>
<tr>
<td>goods_id</td>
<td>商品 ID</td>
<td></td>
</tr>
<tr>
<td>goods_name</td>
<td>商品名称</td>
<td></td>
</tr>
<tr>
<td>goods_price</td>
<td>价格</td>
<td></td>
</tr>
<tr>
<td>goods_number</td>
<td>数量</td>
<td></td>
</tr>
<tr>
<td>goods_weight</td>
<td>重量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_state</td>
<td>商品状态</td>
<td>商品状态 0: 未通过 1: 审核中 2: 已审核</td>
</tr>
<tr>
<td>add_time</td>
<td>添加时间</td>
<td></td>
</tr>
<tr>
<td>upd_time</td>
<td>更新时间</td>
<td></td>
</tr>
<tr>
<td>hot_mumber</td>
<td>热销品数量</td>
<td></td>
</tr>
<tr>
<td>is_promote</td>
<td>是否是热销品</td>
<td></td>
</tr>
<tr>
<td>pics</td>
<td>上传的图片临时路径（对象）</td>
<td>pics_id:图片 ID,goods_id:商品 ID,pics_big:大图,pics_mid:中图,pics_sma:小图</td>
</tr>
<tr>
<td>attrs</td>
<td>商品的参数（数组）</td>
<td>goods_id:商品 ID,attr_value:当前商品的参数值,add_price:浮动价格,attr_vals:预定义的参数值,attr_sel:手动输入，还是单选,</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;goods_id&quot;: 145,</span><br><span class="line">        &quot;goods_name&quot;: &quot;test_goods_name2&quot;,</span><br><span class="line">        &quot;goods_price&quot;: 20,</span><br><span class="line">        &quot;goods_number&quot;: 30,</span><br><span class="line">        &quot;goods_weight&quot;: 40,</span><br><span class="line">        &quot;goods_introduce&quot;: &quot;abc&quot;,</span><br><span class="line">        &quot;goods_big_logo&quot;: &quot;&quot;,</span><br><span class="line">        &quot;goods_small_logo&quot;: &quot;&quot;,</span><br><span class="line">        &quot;goods_state&quot;: 1,</span><br><span class="line">        &quot;add_time&quot;: 1512962370,</span><br><span class="line">        &quot;upd_time&quot;: 1512962370,</span><br><span class="line">        &quot;hot_mumber&quot;: 0,</span><br><span class="line">        &quot;is_promote&quot;: false,</span><br><span class="line">        &quot;pics&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;pics_id&quot;: 397,</span><br><span class="line">                &quot;goods_id&quot;: 145,</span><br><span class="line">                &quot;pics_big&quot;: &quot;uploads&#x2F;goodspics&#x2F;big_30f08d52c551ecb447277eae232304b8&quot;,</span><br><span class="line">                &quot;pics_mid&quot;: &quot;uploads&#x2F;goodspics&#x2F;mid_30f08d52c551ecb447277eae232304b8&quot;,</span><br><span class="line">                &quot;pics_sma&quot;: &quot;uploads&#x2F;goodspics&#x2F;sma_30f08d52c551ecb447277eae232304b8&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;attrs&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 145,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;ddd&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 145,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;eee&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;创建商品成功&quot;,</span><br><span class="line">        &quot;status&quot;: 201</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-8-4-编辑提交商品"><a href="#1-8-4-编辑提交商品" class="headerlink" title="1.8.4. 编辑提交商品"></a>1.8.4. 编辑提交商品</h3><ul>
<li>请求路径：goods/:id</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>商品 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>goods_name</td>
<td>商品名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_price</td>
<td>价格</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_number</td>
<td>数量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_weight</td>
<td>重量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_introduce</td>
<td>介绍</td>
<td>可以为空</td>
</tr>
<tr>
<td>pics</td>
<td>上传的图片临时路径（对象）</td>
<td>可以为空</td>
</tr>
<tr>
<td>attrs</td>
<td>商品的参数（数组）</td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>请求数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;goods_name&quot;:&quot;test_goods_name2&quot;,</span><br><span class="line">  &quot;goods_price&quot;:20,</span><br><span class="line">  &quot;goods_number&quot;:30,</span><br><span class="line">  &quot;goods_weight&quot;:40,</span><br><span class="line">  &quot;goods_introduce&quot;:&quot;abc&quot;,</span><br><span class="line">  &quot;pics&quot;:[</span><br><span class="line">    &#123;&quot;pic&quot;:&quot;&#x2F;tmp_uploads&#x2F;30f08d52c551ecb447277eae232304b8&quot;&#125;</span><br><span class="line">    ],</span><br><span class="line">  &quot;attrs&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;attr_id&quot;:15,</span><br><span class="line">      &quot;attr_value&quot;:&quot;ddd&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;attr_id&quot;:15,</span><br><span class="line">      &quot;attr_value&quot;:&quot;eee&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>total</td>
<td>总共商品条数</td>
<td></td>
</tr>
<tr>
<td>pagenum</td>
<td>当前商品页数</td>
<td></td>
</tr>
<tr>
<td>goods_id</td>
<td>商品 ID</td>
<td></td>
</tr>
<tr>
<td>goods_name</td>
<td>商品名称</td>
<td></td>
</tr>
<tr>
<td>goods_price</td>
<td>价格</td>
<td></td>
</tr>
<tr>
<td>goods_number</td>
<td>数量</td>
<td></td>
</tr>
<tr>
<td>goods_weight</td>
<td>重量</td>
<td>不能为空</td>
</tr>
<tr>
<td>goods_state</td>
<td>商品状态</td>
<td>商品状态 0: 未通过 1: 审核中 2: 已审核</td>
</tr>
<tr>
<td>add_time</td>
<td>添加时间</td>
<td></td>
</tr>
<tr>
<td>upd_time</td>
<td>更新时间</td>
<td></td>
</tr>
<tr>
<td>hot_mumber</td>
<td>热销品数量</td>
<td></td>
</tr>
<tr>
<td>is_promote</td>
<td>是否是热销品</td>
<td></td>
</tr>
<tr>
<td>pics</td>
<td>上传的图片临时路径（对象）</td>
<td>pics_id:图片 ID,goods_id:商品 ID,pics_big:大图,pics_mid:中图,pics_sma:小图</td>
</tr>
<tr>
<td>attrs</td>
<td>商品的参数（数组）</td>
<td>goods_id:商品 ID,attr_value:当前商品的参数值,add_price:浮动价格,attr_vals:预定义的参数值,attr_sel:手动输入，还是单选,</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;goods_id&quot;: 145,</span><br><span class="line">        &quot;goods_name&quot;: &quot;test_goods_name2&quot;,</span><br><span class="line">        &quot;goods_price&quot;: 20,</span><br><span class="line">        &quot;goods_number&quot;: 30,</span><br><span class="line">        &quot;goods_weight&quot;: 40,</span><br><span class="line">        &quot;goods_introduce&quot;: &quot;abc&quot;,</span><br><span class="line">        &quot;goods_big_logo&quot;: &quot;&quot;,</span><br><span class="line">        &quot;goods_small_logo&quot;: &quot;&quot;,</span><br><span class="line">        &quot;goods_state&quot;: 1,</span><br><span class="line">        &quot;add_time&quot;: 1512962370,</span><br><span class="line">        &quot;upd_time&quot;: 1512962370,</span><br><span class="line">        &quot;hot_mumber&quot;: 0,</span><br><span class="line">        &quot;is_promote&quot;: false,</span><br><span class="line">        &quot;pics&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;pics_id&quot;: 397,</span><br><span class="line">                &quot;goods_id&quot;: 145,</span><br><span class="line">                &quot;pics_big&quot;: &quot;uploads&#x2F;goodspics&#x2F;big_30f08d52c551ecb447277eae232304b8&quot;,</span><br><span class="line">                &quot;pics_mid&quot;: &quot;uploads&#x2F;goodspics&#x2F;mid_30f08d52c551ecb447277eae232304b8&quot;,</span><br><span class="line">                &quot;pics_sma&quot;: &quot;uploads&#x2F;goodspics&#x2F;sma_30f08d52c551ecb447277eae232304b8&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;attrs&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 145,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;ddd&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 145,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;eee&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;创建商品成功&quot;,</span><br><span class="line">        &quot;status&quot;: 201</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-8-5-删除商品"><a href="#1-8-5-删除商品" class="headerlink" title="1.8.5. 删除商品"></a>1.8.5. 删除商品</h3><ul>
<li>请求路径：goods/:id</li>
<li>请求方法：delete</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>商品 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: null,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;删除成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>###同步商品图片</p>
<ul>
<li>请求路径：goods/:id/pics</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>商品 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>pics</td>
<td>商品图片集合</td>
<td>如果有 pics_id 字段会保留该图片，如果没有 pics_id 但是有 pic 字段就会新生成图片数据</td>
</tr>
</tbody></table>
<ul>
<li>请求数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;[</span><br><span class="line">  &#123; pic: &#39;tmp_uploads&#x2F;db28f6316835836e97653b5c75e418be.png&#39; &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    pics_id: 397,</span><br><span class="line">    goods_id: 145,</span><br><span class="line">    pics_big: &#39;uploads&#x2F;goodspics&#x2F;big_30f08d52c551ecb447277eae232304b8&#39;,</span><br><span class="line">    pics_mid: &#39;uploads&#x2F;goodspics&#x2F;mid_30f08d52c551ecb447277eae232304b8&#39;,</span><br><span class="line">    pics_sma: &#39;uploads&#x2F;goodspics&#x2F;sma_30f08d52c551ecb447277eae232304b8&#39;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;goods_id&quot;: 96,</span><br><span class="line">        &quot;goods_name&quot;: &quot;iphoneXX&quot;,</span><br><span class="line">        &quot;goods_price&quot;: 2,</span><br><span class="line">        &quot;goods_number&quot;: 22,</span><br><span class="line">        &quot;goods_weight&quot;: 22,</span><br><span class="line">        &quot;goods_introduce&quot;: null,</span><br><span class="line">        &quot;goods_big_logo&quot;: &quot;.&#x2F;uploads&#x2F;goods&#x2F;20171113&#x2F;483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;,</span><br><span class="line">        &quot;goods_small_logo&quot;: &quot;.&#x2F;uploads&#x2F;goods&#x2F;20171113&#x2F;small_483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;,</span><br><span class="line">        &quot;goods_state&quot;: 0,</span><br><span class="line">        &quot;is_del&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;add_time&quot;: 1510045904,</span><br><span class="line">        &quot;upd_time&quot;: 1512635159,</span><br><span class="line">        &quot;delete_time&quot;: 1512635159,</span><br><span class="line">        &quot;hot_mumber&quot;: 0,</span><br><span class="line">        &quot;is_promote&quot;: false,</span><br><span class="line">        &quot;pics&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;pics_id&quot;: 383,</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;pics_big&quot;: &quot;uploads&#x2F;goodspics&#x2F;big_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;,</span><br><span class="line">                &quot;pics_mid&quot;: &quot;uploads&#x2F;goodspics&#x2F;mid_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;,</span><br><span class="line">                &quot;pics_sma&quot;: &quot;uploads&#x2F;goodspics&#x2F;sma_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;attrs&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;eee&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;ddd&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;更新成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>###同步商品属性</p>
<ul>
<li>请求路径：goods/:id/attributes</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>商品 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>请求数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;[</span><br><span class="line">  &#123;</span><br><span class="line">    attr_id: 15,</span><br><span class="line">    attr_value: &#39;ddd&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    attr_id: 15,</span><br><span class="line">    attr_value: &#39;eee&#39;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;goods_id&quot;: 96,</span><br><span class="line">        &quot;goods_name&quot;: &quot;iphoneXX&quot;,</span><br><span class="line">        &quot;goods_price&quot;: 2,</span><br><span class="line">        &quot;goods_number&quot;: 22,</span><br><span class="line">        &quot;goods_weight&quot;: 22,</span><br><span class="line">        &quot;goods_introduce&quot;: null,</span><br><span class="line">        &quot;goods_big_logo&quot;: &quot;.&#x2F;uploads&#x2F;goods&#x2F;20171113&#x2F;483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;,</span><br><span class="line">        &quot;goods_small_logo&quot;: &quot;.&#x2F;uploads&#x2F;goods&#x2F;20171113&#x2F;small_483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;,</span><br><span class="line">        &quot;goods_state&quot;: 0,</span><br><span class="line">        &quot;is_del&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;add_time&quot;: 1510045904,</span><br><span class="line">        &quot;upd_time&quot;: 1512635159,</span><br><span class="line">        &quot;delete_time&quot;: 1512635159,</span><br><span class="line">        &quot;hot_mumber&quot;: 0,</span><br><span class="line">        &quot;is_promote&quot;: false,</span><br><span class="line">        &quot;pics&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;pics_id&quot;: 383,</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;pics_big&quot;: &quot;uploads&#x2F;goodspics&#x2F;big_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;,</span><br><span class="line">                &quot;pics_mid&quot;: &quot;uploads&#x2F;goodspics&#x2F;mid_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;,</span><br><span class="line">                &quot;pics_sma&quot;: &quot;uploads&#x2F;goodspics&#x2F;sma_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;attrs&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;eee&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;attr_id&quot;: 15,</span><br><span class="line">                &quot;attr_value&quot;: &quot;ddd&quot;,</span><br><span class="line">                &quot;add_price&quot;: null,</span><br><span class="line">                &quot;attr_name&quot;: &quot;fffffff&quot;,</span><br><span class="line">                &quot;attr_sel&quot;: &quot;many&quot;,</span><br><span class="line">                &quot;attr_write&quot;: &quot;list&quot;,</span><br><span class="line">                &quot;attr_vals&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;更新成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>###商品图片处理必须安装 GraphicsMagick</p>
<ul>
<li>linux</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install GraphicsMagick</span><br></pre></td></tr></table></figure>

<ul>
<li>Mac OS X</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install GraphicsMagick</span><br></pre></td></tr></table></figure>

<ul>
<li>Windows <a href="https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick-binaries/1.3.27/GraphicsMagick-1.3.27-Q8-win64-dll.exe/download" target="_blank" rel="noopener">点击下载</a></li>
</ul>
<h2 id="1-9-图片上传"><a href="#1-9-图片上传" class="headerlink" title="1.9. 图片上传"></a>1.9. 图片上传</h2><ul>
<li>请求路径：upload</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>file</td>
<td>上传文件</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;tmp_path&quot;: &quot;tmp_uploads&#x2F;ccfc5179a914e94506bcbb7377e8985f.png&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;http:&#x2F;&#x2F;127.0.0.1:8888tmp_uploads&#x2F;ccfc5179a914e94506bcbb7377e8985f.png&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;上传成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-10-订单管理"><a href="#1-10-订单管理" class="headerlink" title="1.10. 订单管理"></a>1.10. 订单管理</h2><h3 id="1-10-1-订单数据列表"><a href="#1-10-1-订单数据列表" class="headerlink" title="1.10.1. 订单数据列表"></a>1.10.1. 订单数据列表</h3><ul>
<li>请求路径：orders</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>query</td>
<td>查询参数</td>
<td>可以为空</td>
</tr>
<tr>
<td>pagenum</td>
<td>当前页码</td>
<td>不能为空</td>
</tr>
<tr>
<td>pagesize</td>
<td>每页显示条数</td>
<td>不能为空</td>
</tr>
<tr>
<td>user_id</td>
<td>用户 ID</td>
<td>可以为空</td>
</tr>
<tr>
<td>pay_status</td>
<td>支付状态</td>
<td>可以为空</td>
</tr>
<tr>
<td>is_send</td>
<td>是否发货</td>
<td>可以为空</td>
</tr>
<tr>
<td>order_fapiao_title</td>
<td>[‘个人’,’公司’]</td>
<td>可以为空</td>
</tr>
<tr>
<td>order_fapiao_company</td>
<td>公司名称</td>
<td>可以为空</td>
</tr>
<tr>
<td>order_fapiao_content</td>
<td>发票内容</td>
<td>可以为空</td>
</tr>
<tr>
<td>consignee_addr</td>
<td>发货地址</td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;total&quot;: 1,</span><br><span class="line">        &quot;pagenum&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;goods&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;order_id&quot;: 47,</span><br><span class="line">                &quot;user_id&quot;: 133,</span><br><span class="line">                &quot;order_number&quot;: &quot;itcast-59e7502d7993d&quot;,</span><br><span class="line">                &quot;order_price&quot;: 322,</span><br><span class="line">                &quot;order_pay&quot;: &quot;1&quot;,</span><br><span class="line">                &quot;is_send&quot;: &quot;是&quot;,</span><br><span class="line">                &quot;trade_no&quot;: &quot;&quot;,</span><br><span class="line">                &quot;order_fapiao_title&quot;: &quot;个人&quot;,</span><br><span class="line">                &quot;order_fapiao_company&quot;: &quot;&quot;,</span><br><span class="line">                &quot;order_fapiao_content&quot;: &quot;办公用品&quot;,</span><br><span class="line">                &quot;consignee_addr&quot;: &quot;a:7:&#123;s:6:\&quot;cgn_id\&quot;;i:1;s:7:\&quot;user_id\&quot;;i:133;s:8:\&quot;cgn_name\&quot;;s:9:\&quot;王二柱\&quot;;s:11:\&quot;cgn_address\&quot;;s:51:\&quot;北京市海淀区苏州街长远天地大厦305室\&quot;;s:7:\&quot;cgn_tel\&quot;;s:11:\&quot;13566771298\&quot;;s:8:\&quot;cgn_code\&quot;;s:6:\&quot;306810\&quot;;s:11:\&quot;delete_time\&quot;;N;&#125;&quot;,</span><br><span class="line">                &quot;pay_status&quot;: &quot;1&quot;,</span><br><span class="line">                &quot;create_time&quot;: 1508331565,</span><br><span class="line">                &quot;update_time&quot;: 1508331565</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-10-2-修改订单状态"><a href="#1-10-2-修改订单状态" class="headerlink" title="1.10.2. 修改订单状态"></a>1.10.2. 修改订单状态</h3><ul>
<li>请求路径：orders/:id</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>订单 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>is_send</td>
<td>订单是否发货</td>
<td>1:已经发货，0:未发货</td>
</tr>
<tr>
<td>order_pay</td>
<td>订单支付</td>
<td>支付方式 0 未支付 1 支付宝 2 微信 3 银行卡</td>
</tr>
<tr>
<td>order_price</td>
<td>订单价格</td>
<td></td>
</tr>
<tr>
<td>order_number</td>
<td>订单数量</td>
<td></td>
</tr>
<tr>
<td>pay_status</td>
<td>支付状态</td>
<td>订单状态： 0 未付款、1 已付款</td>
</tr>
</tbody></table>
<ul>
<li>请求数据说明<ul>
<li>所有请求数据都是增量更新，如果参数不填写，就不会更新该字段</li>
</ul>
</li>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;order_id&quot;: 67,</span><br><span class="line">        &quot;user_id&quot;: 1,</span><br><span class="line">        &quot;order_number&quot;: &quot;itcast-g7kmck71vjaujfgoi&quot;,</span><br><span class="line">        &quot;order_price&quot;: 20,</span><br><span class="line">        &quot;order_pay&quot;: &quot;0&quot;,</span><br><span class="line">        &quot;is_send&quot;: &quot;否&quot;,</span><br><span class="line">        &quot;trade_no&quot;: &quot;&quot;,</span><br><span class="line">        &quot;order_fapiao_title&quot;: &quot;个人&quot;,</span><br><span class="line">        &quot;order_fapiao_company&quot;: &quot;&quot;,</span><br><span class="line">        &quot;order_fapiao_content&quot;: &quot;&quot;,</span><br><span class="line">        &quot;consignee_addr&quot;: &quot;&quot;,</span><br><span class="line">        &quot;pay_status&quot;: &quot;0&quot;,</span><br><span class="line">        &quot;create_time&quot;: 1512533560,</span><br><span class="line">        &quot;update_time&quot;: 1512533560,</span><br><span class="line">        &quot;goods&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 82,</span><br><span class="line">                &quot;order_id&quot;: 67,</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;goods_price&quot;: 333,</span><br><span class="line">                &quot;goods_number&quot;: 2,</span><br><span class="line">                &quot;goods_total_price&quot;: 999</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 83,</span><br><span class="line">                &quot;order_id&quot;: 67,</span><br><span class="line">                &quot;goods_id&quot;: 95,</span><br><span class="line">                &quot;goods_price&quot;: 666,</span><br><span class="line">                &quot;goods_number&quot;: 5,</span><br><span class="line">                &quot;goods_total_price&quot;: 999</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-10-3-查看订单详情"><a href="#1-10-3-查看订单详情" class="headerlink" title="1.10.3. 查看订单详情"></a>1.10.3. 查看订单详情</h3><ul>
<li>请求路径：orders/:id</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>订单 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;order_id&quot;: 67,</span><br><span class="line">        &quot;user_id&quot;: 1,</span><br><span class="line">        &quot;order_number&quot;: &quot;itcast-g7kmck71vjaujfgoi&quot;,</span><br><span class="line">        &quot;order_price&quot;: 20,</span><br><span class="line">        &quot;order_pay&quot;: &quot;0&quot;,</span><br><span class="line">        &quot;is_send&quot;: &quot;否&quot;,</span><br><span class="line">        &quot;trade_no&quot;: &quot;&quot;,</span><br><span class="line">        &quot;order_fapiao_title&quot;: &quot;个人&quot;,</span><br><span class="line">        &quot;order_fapiao_company&quot;: &quot;&quot;,</span><br><span class="line">        &quot;order_fapiao_content&quot;: &quot;&quot;,</span><br><span class="line">        &quot;consignee_addr&quot;: &quot;&quot;,</span><br><span class="line">        &quot;pay_status&quot;: &quot;0&quot;,</span><br><span class="line">        &quot;create_time&quot;: 1512533560,</span><br><span class="line">        &quot;update_time&quot;: 1512533560,</span><br><span class="line">        &quot;goods&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 82,</span><br><span class="line">                &quot;order_id&quot;: 67,</span><br><span class="line">                &quot;goods_id&quot;: 96,</span><br><span class="line">                &quot;goods_price&quot;: 333,</span><br><span class="line">                &quot;goods_number&quot;: 2,</span><br><span class="line">                &quot;goods_total_price&quot;: 999</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 83,</span><br><span class="line">                &quot;order_id&quot;: 67,</span><br><span class="line">                &quot;goods_id&quot;: 95,</span><br><span class="line">                &quot;goods_price&quot;: 666,</span><br><span class="line">                &quot;goods_number&quot;: 5,</span><br><span class="line">                &quot;goods_total_price&quot;: 999</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="1-10-4-修改地址"><a href="#1-10-4-修改地址" class="headerlink" title="1.10.4. 修改地址"></a>1.10.4. 修改地址</h3><ol>
<li><a href="https://github.com/iceyangcc/provinces-china" target="_blank" rel="noopener">省市区/县联动效果 - 结合ElementUI的 el-cascader 组件</a></li>
</ol>
<h3 id="1-10-5-查看物流信息"><a href="#1-10-5-查看物流信息" class="headerlink" title="1.10.5. 查看物流信息"></a>1.10.5. 查看物流信息</h3><ul>
<li><p>请求路径：/kuaidi/:id</p>
</li>
<li><p>请求方法：get</p>
</li>
<li><p>供测试的物流单号：1106975712662</p>
</li>
<li><p>响应数据：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"data"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-10 09:39:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-10 09:39:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"已签收,感谢使用顺丰,期待再次为您服务"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-10 08:23:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-10 08:23:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"[北京市]北京海淀育新小区营业点派件员 顺丰速运 95338正在为您派件"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-10 07:32:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-10 07:32:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"快件到达 [北京海淀育新小区营业点]"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-10 02:03:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-10 02:03:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"快件在[北京顺义集散中心]已装车,准备发往 [北京海淀育新小区营业点]"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-09 23:05:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-09 23:05:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"快件到达 [北京顺义集散中心]"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-09 21:21:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-09 21:21:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"快件在[北京宝胜营业点]已装车,准备发往 [北京顺义集散中心]"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-09 13:07:00"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-09 13:07:00"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"顺丰速运 已收取快件"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-09 12:25:03"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-09 12:25:03"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"卖家发货"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-09 12:22:24"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-09 12:22:24"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"您的订单将由HLA（北京海淀区清河中街店）门店安排发货。"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"time"</span>: <span class="string">"2018-05-08 21:36:04"</span>,</span><br><span class="line">      <span class="attr">"ftime"</span>: <span class="string">"2018-05-08 21:36:04"</span>,</span><br><span class="line">      <span class="attr">"context"</span>: <span class="string">"商品已经下单"</span>,</span><br><span class="line">      <span class="attr">"location"</span>: <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"meta"</span>: &#123; <span class="attr">"status"</span>: <span class="number">200</span>, <span class="attr">"message"</span>: <span class="string">"获取物流信息成功！"</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h2 id="1-11-数据统计"><a href="#1-11-数据统计" class="headerlink" title="1.11. 数据统计"></a>1.11. 数据统计</h2><h3 id="1-11-1-基于时间统计的折线图"><a href="#1-11-1-基于时间统计的折线图" class="headerlink" title="1.11.1.  基于时间统计的折线图"></a>1.11.1.  基于时间统计的折线图</h3><ul>
<li><p>请求路径：reports/type/1</p>
</li>
<li><p>请求方法：get</p>
</li>
<li><p>响应数据</p>
</li>
<li><p>需要合并的选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">options: &#123;</span><br><span class="line">        title: &#123;</span><br><span class="line">          text: &#39;用户来源&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">          trigger: &#39;axis&#39;,</span><br><span class="line">          axisPointer: &#123;</span><br><span class="line">            type: &#39;cross&#39;,</span><br><span class="line">            label: &#123;</span><br><span class="line">              backgroundColor: &#39;#E9EEF3&#39;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        grid: &#123;</span><br><span class="line">          left: &#39;3%&#39;,</span><br><span class="line">          right: &#39;4%&#39;,</span><br><span class="line">          bottom: &#39;3%&#39;,</span><br><span class="line">          containLabel: true</span><br><span class="line">        &#125;,</span><br><span class="line">        xAxis: [</span><br><span class="line">          &#123;</span><br><span class="line">            boundaryGap: false</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        yAxis: [</span><br><span class="line">          &#123;</span><br><span class="line">            type: &#39;value&#39;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>电商管理后台 API 接口（1）</title>
    <url>/2020/10/07/%E7%94%B5%E5%95%86%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0-API-%E6%8E%A5%E5%8F%A3%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1-电商管理后台-API-接口文档"><a href="#1-电商管理后台-API-接口文档" class="headerlink" title="1. 电商管理后台 API 接口文档"></a>1. 电商管理后台 API 接口文档</h1><h2 id="1-1-API-V1-接口说明"><a href="#1-1-API-V1-接口说明" class="headerlink" title="1.1. API V1 接口说明"></a>1.1. API V1 接口说明</h2><ul>
<li>接口基准地址：<code>http://127.0.0.1:8888/api/private/v1/</code></li>
<li>服务端已开启 CORS 跨域支持</li>
<li>API V1 认证统一使用 Token 认证</li>
<li>需要授权的 API ，必须在请求头中使用 <code>Authorization</code> 字段提供 <code>token</code> 令牌</li>
<li>使用 HTTP Status Code 标识状态</li>
<li>数据返回格式统一使用 JSON</li>
</ul>
<h3 id="1-1-1-支持的请求方法"><a href="#1-1-1-支持的请求方法" class="headerlink" title="1.1.1. 支持的请求方法"></a>1.1.1. 支持的请求方法</h3><ul>
<li>GET（SELECT）：从服务器取出资源（一项或多项）。</li>
<li>POST（CREATE）：在服务器新建一个资源。</li>
<li>PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。</li>
<li>PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。</li>
<li>DELETE（DELETE）：从服务器删除资源。</li>
<li>HEAD：获取资源的元数据。</li>
<li>OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。</li>
</ul>
<h3 id="1-1-2-通用返回状态说明"><a href="#1-1-2-通用返回状态说明" class="headerlink" title="1.1.2. 通用返回状态说明"></a>1.1.2. 通用返回状态说明</h3><table>
<thead>
<tr>
<th><em>状态码</em></th>
<th><em>含义</em></th>
<th><em>说明</em></th>
</tr>
</thead>
<tbody><tr>
<td>200</td>
<td>OK</td>
<td>请求成功</td>
</tr>
<tr>
<td>201</td>
<td>CREATED</td>
<td>创建成功</td>
</tr>
<tr>
<td>204</td>
<td>DELETED</td>
<td>删除成功</td>
</tr>
<tr>
<td>400</td>
<td>BAD REQUEST</td>
<td>请求的地址不存在或者包含不支持的参数</td>
</tr>
<tr>
<td>401</td>
<td>UNAUTHORIZED</td>
<td>未授权</td>
</tr>
<tr>
<td>403</td>
<td>FORBIDDEN</td>
<td>被禁止访问</td>
</tr>
<tr>
<td>404</td>
<td>NOT FOUND</td>
<td>请求的资源不存在</td>
</tr>
<tr>
<td>422</td>
<td>Unprocesable entity</td>
<td>[POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误</td>
</tr>
<tr>
<td>500</td>
<td>INTERNAL SERVER ERROR</td>
<td>内部错误</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<hr>
<h2 id="1-2-登录"><a href="#1-2-登录" class="headerlink" title="1.2. 登录"></a>1.2. 登录</h2><h3 id="1-2-1-登录验证接口"><a href="#1-2-1-登录验证接口" class="headerlink" title="1.2.1. 登录验证接口"></a>1.2.1. 登录验证接口</h3><ul>
<li>请求路径：login</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>username</td>
<td>用户名</td>
<td>不能为空</td>
</tr>
<tr>
<td>password</td>
<td>密码</td>
<td>不能为空</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td></td>
</tr>
<tr>
<td>rid</td>
<td>用户角色 ID</td>
<td></td>
</tr>
<tr>
<td>username</td>
<td>用户名</td>
<td></td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td></td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td></td>
</tr>
<tr>
<td>token</td>
<td>令牌</td>
<td>基于 jwt 的令牌</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">"rid"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"admin"</span>,</span><br><span class="line">        <span class="attr">"mobile"</span>: <span class="string">"123"</span>,</span><br><span class="line">        <span class="attr">"email"</span>: <span class="string">"123@qq.com"</span>,</span><br><span class="line">        <span class="attr">"token"</span>: <span class="string">"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjUwMCwicmlkIjowLCJpYXQiOjE1MTI1NDQyOTksImV4cCI6MTUxMjYzMDY5OX0.eGrsrvwHm-tPsO9r_pxHIQ5i5L1kX9RX444uwnRGaIM"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"登录成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-3-用户管理"><a href="#1-3-用户管理" class="headerlink" title="1.3. 用户管理"></a>1.3. 用户管理</h2><h3 id="1-3-1-用户数据列表"><a href="#1-3-1-用户数据列表" class="headerlink" title="1.3.1. 用户数据列表"></a>1.3.1. 用户数据列表</h3><ul>
<li>请求路径：users</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>query</td>
<td>查询参数</td>
<td>可以为空</td>
</tr>
<tr>
<td>pagenum</td>
<td>当前页码</td>
<td>不能为空</td>
</tr>
<tr>
<td>pagesize</td>
<td>每页显示条数</td>
<td>不能为空</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>total</td>
<td>总记录数</td>
<td></td>
</tr>
<tr>
<td>pagenum</td>
<td>当前页码</td>
<td></td>
</tr>
<tr>
<td>users</td>
<td>用户数据集合</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"pagenum"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"users"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">25</span>,</span><br><span class="line">                <span class="attr">"username"</span>: <span class="string">"tige117"</span>,</span><br><span class="line">                <span class="attr">"mobile"</span>: <span class="string">"18616358651"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"email"</span>: <span class="string">"tige112@163.com"</span>,</span><br><span class="line">                <span class="attr">"create_time"</span>: <span class="string">"2017-11-09T20:36:26.000Z"</span>,</span><br><span class="line">                <span class="attr">"mg_state"</span>: <span class="literal">true</span>, <span class="comment">// 当前用户的状态</span></span><br><span class="line">                <span class="attr">"role_name"</span>: <span class="string">"炒鸡管理员"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-3-2-添加用户"><a href="#1-3-2-添加用户" class="headerlink" title="1.3.2. 添加用户"></a>1.3.2. 添加用户</h3><ul>
<li>请求路径：users</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>username</td>
<td>用户名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>password</td>
<td>用户密码</td>
<td>不能为空</td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td>可以为空</td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td></td>
</tr>
<tr>
<td>rid</td>
<td>用户角色 ID</td>
<td></td>
</tr>
<tr>
<td>username</td>
<td>用户名</td>
<td></td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td></td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">28</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"tige1200"</span>,</span><br><span class="line">        <span class="attr">"mobile"</span>: <span class="string">"test"</span>,</span><br><span class="line">        <span class="attr">"type"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"openid"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"email"</span>: <span class="string">"test@test.com"</span>,</span><br><span class="line">        <span class="attr">"create_time"</span>: <span class="string">"2017-11-10T03:47:13.533Z"</span>,</span><br><span class="line">        <span class="attr">"modify_time"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">"is_delete"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"is_active"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"用户创建成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">201</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-3-3-修改用户状态"><a href="#1-3-3-修改用户状态" class="headerlink" title="1.3.3. 修改用户状态"></a>1.3.3. 修改用户状态</h3><ul>
<li>请求路径：users/:uId/state/:type</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>uId</td>
<td>用户 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>type</td>
<td>用户状态</td>
<td>不能为空<code>携带在url中</code>，值为 true 或者 false</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">566</span>,</span><br><span class="line">    <span class="attr">"rid"</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"admin"</span>,</span><br><span class="line">    <span class="attr">"mobile"</span>: <span class="string">"123456"</span>,</span><br><span class="line">    <span class="attr">"email"</span>: <span class="string">"bb@itcast.com"</span>,</span><br><span class="line">    <span class="attr">"mg_state"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"meta"</span>: &#123;</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"设置状态成功"</span>,</span><br><span class="line">    <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-3-4-根据-ID-查询用户信息"><a href="#1-3-4-根据-ID-查询用户信息" class="headerlink" title="1.3.4. 根据 ID 查询用户信息"></a>1.3.4. 根据 ID 查询用户信息</h3><ul>
<li>请求路径：users/:id</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td></td>
</tr>
<tr>
<td>role_id</td>
<td>角色 ID</td>
<td></td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td></td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">503</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"admin3"</span>,</span><br><span class="line">        <span class="attr">"role_id"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"mobile"</span>: <span class="string">"00000"</span>,</span><br><span class="line">        <span class="attr">"email"</span>: <span class="string">"new@new.com"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"查询成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-3-5-编辑用户提交"><a href="#1-3-5-编辑用户提交" class="headerlink" title="1.3.5. 编辑用户提交"></a>1.3.5. 编辑用户提交</h3><ul>
<li>请求路径：users/:id</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 id</td>
<td>不能为空 <code>参数是url参数:id</code></td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td>可以为空</td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td></td>
</tr>
<tr>
<td>role_id</td>
<td>角色 ID</td>
<td></td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td></td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 200表示成功，500表示失败 */</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">503</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"admin3"</span>,</span><br><span class="line">        <span class="attr">"role_id"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"mobile"</span>: <span class="string">"111"</span>,</span><br><span class="line">        <span class="attr">"email"</span>: <span class="string">"123@123.com"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"更新成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-3-6-删除单个用户"><a href="#1-3-6-删除单个用户" class="headerlink" title="1.3.6. 删除单个用户"></a>1.3.6. 删除单个用户</h3><ul>
<li>请求路径：users/:id</li>
<li>请求方法：delete</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 id</td>
<td>不能为空<code>参数是url参数:id</code></td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"删除成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-3-7-分配用户角色"><a href="#1-3-7-分配用户角色" class="headerlink" title="1.3.7. 分配用户角色"></a>1.3.7. 分配用户角色</h3><ul>
<li>请求路径：users/:id/role</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td>不能为空<code>参数是url参数:id</code></td>
</tr>
<tr>
<td>rid</td>
<td>角色 id</td>
<td>不能为空<code>参数body参数</code></td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>用户 ID</td>
<td></td>
</tr>
<tr>
<td>role_id</td>
<td>角色 ID</td>
<td></td>
</tr>
<tr>
<td>mobile</td>
<td>手机号</td>
<td></td>
</tr>
<tr>
<td>email</td>
<td>邮箱</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">508</span>,</span><br><span class="line">        <span class="attr">"rid"</span>: <span class="string">"30"</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"asdf1"</span>,</span><br><span class="line">        <span class="attr">"mobile"</span>: <span class="string">"123123"</span>,</span><br><span class="line">        <span class="attr">"email"</span>: <span class="string">"adfsa@qq.com"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"设置角色成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-4-权限管理"><a href="#1-4-权限管理" class="headerlink" title="1.4. 权限管理"></a>1.4. 权限管理</h2><h3 id="1-4-1-所有权限列表"><a href="#1-4-1-所有权限列表" class="headerlink" title="1.4.1. 所有权限列表"></a>1.4.1. 所有权限列表</h3><ul>
<li>请求路径：rights/:type</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>type</td>
<td>类型</td>
<td>值 list 或 tree , list 列表显示权限, tree 树状显示权限,<code>参数是url参数:type</code></td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>权限 ID</td>
<td></td>
</tr>
<tr>
<td>authName</td>
<td>权限说明</td>
<td></td>
</tr>
<tr>
<td>level</td>
<td>权限层级</td>
<td></td>
</tr>
<tr>
<td>pid</td>
<td>权限父 ID</td>
<td></td>
</tr>
<tr>
<td>path</td>
<td>对应访问路径</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据 type=list</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">101</span>,</span><br><span class="line">            <span class="attr">"authName"</span>: <span class="string">"商品管理"</span>,</span><br><span class="line">            <span class="attr">"level"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="attr">"pid"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"path"</span>: <span class="literal">null</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">102</span>,</span><br><span class="line">            <span class="attr">"authName"</span>: <span class="string">"订单管理"</span>,</span><br><span class="line">            <span class="attr">"level"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="attr">"pid"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"path"</span>: <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取权限列表成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>type=tree</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  data: [</span><br><span class="line">    &#123;</span><br><span class="line">      id: 101,</span><br><span class="line">      authName: '商品管理',</span><br><span class="line">      path: null,</span><br><span class="line">      pid: 0,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 104,</span><br><span class="line">          authName: '商品列表',</span><br><span class="line">          path: null,</span><br><span class="line">          pid: 101,</span><br><span class="line">          children: [</span><br><span class="line">            &#123;</span><br><span class="line">              id: 105,</span><br><span class="line">              authName: '添加商品',</span><br><span class="line">              path: null,</span><br><span class="line">              pid: '104,101'</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  meta: &#123;</span><br><span class="line">    msg: '获取权限列表成功',</span><br><span class="line">    status: 200</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-4-2-左侧菜单权限"><a href="#1-4-2-左侧菜单权限" class="headerlink" title="1.4.2. 左侧菜单权限"></a>1.4.2. 左侧菜单权限</h3><ul>
<li>请求路径：menus</li>
<li>请求方法：get</li>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">101</span>,</span><br><span class="line">            <span class="attr">"authName"</span>: <span class="string">"商品管理"</span>,</span><br><span class="line">            <span class="attr">"path"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"children"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="number">104</span>,</span><br><span class="line">                    <span class="attr">"authName"</span>: <span class="string">"商品列表"</span>,</span><br><span class="line">                    <span class="attr">"path"</span>: <span class="literal">null</span>,</span><br><span class="line">                    <span class="attr">"children"</span>: []</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="string">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取菜单列表成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-5-角色管理"><a href="#1-5-角色管理" class="headerlink" title="1.5. 角色管理"></a>1.5. 角色管理</h2><h3 id="1-5-1-角色列表"><a href="#1-5-1-角色列表" class="headerlink" title="1.5.1. 角色列表"></a>1.5.1. 角色列表</h3><ul>
<li><p>请求路径：roles</p>
</li>
<li><p>请求方法：get</p>
</li>
<li><p>响应数据说明</p>
<ul>
<li>第一层为角色信息</li>
</ul>
<ul>
<li>第二层开始为权限说明，权限一共有 3 层权限</li>
<li>最后一层权限，不包含 <code>children</code> 属性</li>
</ul>
</li>
<li><p>响应数据</p>
</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">30</span>,</span><br><span class="line">            <span class="attr">"roleName"</span>: <span class="string">"主管"</span>,</span><br><span class="line">            <span class="attr">"roleDesc"</span>: <span class="string">"技术负责人"</span>,</span><br><span class="line">            <span class="attr">"children"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="number">101</span>,</span><br><span class="line">                    <span class="attr">"authName"</span>: <span class="string">"商品管理"</span>,</span><br><span class="line">                    <span class="attr">"path"</span>: <span class="literal">null</span>,</span><br><span class="line">                    <span class="attr">"children"</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">"id"</span>: <span class="number">104</span>,</span><br><span class="line">                            <span class="attr">"authName"</span>: <span class="string">"商品列表"</span>,</span><br><span class="line">                            <span class="attr">"path"</span>: <span class="literal">null</span>,</span><br><span class="line">                            <span class="attr">"children"</span>: [</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="attr">"id"</span>: <span class="number">105</span>,</span><br><span class="line">                                    <span class="attr">"authName"</span>: <span class="string">"添加商品"</span>,</span><br><span class="line">                                    <span class="attr">"path"</span>: <span class="literal">null</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-2-添加角色"><a href="#1-5-2-添加角色" class="headerlink" title="1.5.2. 添加角色"></a>1.5.2. 添加角色</h3><ul>
<li>请求路径：roles</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>roleName</td>
<td>角色名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>roleDesc</td>
<td>角色描述</td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>roleId</td>
<td>角色 ID</td>
<td></td>
</tr>
<tr>
<td>roleName</td>
<td>角色名称</td>
<td></td>
</tr>
<tr>
<td>roleDesc</td>
<td>角色描述</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"roleId"</span>: <span class="number">40</span>,</span><br><span class="line">        <span class="attr">"roleName"</span>: <span class="string">"admin2"</span>,</span><br><span class="line">        <span class="attr">"roleDesc"</span>: <span class="string">"admin2Desc"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"创建成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">201</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-3-根据-ID-查询角色"><a href="#1-5-3-根据-ID-查询角色" class="headerlink" title="1.5.3. 根据 ID 查询角色"></a>1.5.3. 根据 ID 查询角色</h3><ul>
<li>请求路径：roles/:id</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>角色 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>roleId</td>
<td>角色 ID</td>
<td></td>
</tr>
<tr>
<td>roleName</td>
<td>角色名称</td>
<td></td>
</tr>
<tr>
<td>roleDesc</td>
<td>角色描述</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"roleId"</span>: <span class="number">31</span>,</span><br><span class="line">        <span class="attr">"roleName"</span>: <span class="string">"测试角色"</span>,</span><br><span class="line">        <span class="attr">"roleDesc"</span>: <span class="string">"测试负责人"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-4-编辑提交角色"><a href="#1-5-4-编辑提交角色" class="headerlink" title="1.5.4. 编辑提交角色"></a>1.5.4. 编辑提交角色</h3><ul>
<li>请求路径：roles/:id</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>角色 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>roleName</td>
<td>角色名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>roleDesc</td>
<td>角色描述</td>
<td>可以为空</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"roleId"</span>: <span class="number">31</span>,</span><br><span class="line">        <span class="attr">"roleName"</span>: <span class="string">"测试角色"</span>,</span><br><span class="line">        <span class="attr">"roleDesc"</span>: <span class="string">"测试角色描述"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-5-删除角色"><a href="#1-5-5-删除角色" class="headerlink" title="1.5.5. 删除角色"></a>1.5.5. 删除角色</h3><ul>
<li>请求路径：roles/:id</li>
<li>请求方法：delete</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>角色 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"删除成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-6-角色授权"><a href="#1-5-6-角色授权" class="headerlink" title="1.5.6. 角色授权"></a>1.5.6. 角色授权</h3><ul>
<li>请求路径：roles/:roleId/rights</li>
<li>请求方法：post</li>
<li>请求参数：通过 <code>请求体</code> 发送给后端</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:roleId</td>
<td>角色 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>rids</td>
<td>权限 ID 列表（字符串）</td>
<td>以 <code>,</code> 分割的权限 ID 列表（获取所有被选中、叶子节点的key和半选中节点的key, 包括 1，2，3级节点）</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"更新成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-7-删除角色指定权限"><a href="#1-5-7-删除角色指定权限" class="headerlink" title="1.5.7. 删除角色指定权限"></a>1.5.7. 删除角色指定权限</h3><ul>
<li><p>请求路径：roles/:roleId/rights/:rightId</p>
</li>
<li><p>请求方法：delete</p>
</li>
<li><p>请求参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:roleId</td>
<td>角色 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>:rightId</td>
<td>权限 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
</li>
<li><p>响应数据说明 </p>
<ul>
<li>返回的data, 是当前角色下最新的权限数据</li>
</ul>
</li>
<li><p>响应数据</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">101</span>,</span><br><span class="line">            <span class="attr">"authName"</span>: <span class="string">"商品管理"</span>,</span><br><span class="line">            <span class="attr">"path"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"children"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="number">104</span>,</span><br><span class="line">                    <span class="attr">"authName"</span>: <span class="string">"商品列表"</span>,</span><br><span class="line">                    <span class="attr">"path"</span>: <span class="literal">null</span>,</span><br><span class="line">                    <span class="attr">"children"</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">"id"</span>: <span class="number">105</span>,</span><br><span class="line">                            <span class="attr">"authName"</span>: <span class="string">"添加商品"</span>,</span><br><span class="line">                            <span class="attr">"path"</span>: <span class="literal">null</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">"id"</span>: <span class="number">116</span>,</span><br><span class="line">                            <span class="attr">"authName"</span>: <span class="string">"修改"</span>,</span><br><span class="line">                            <span class="attr">"path"</span>: <span class="literal">null</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"取消权限成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="1-6-商品分类管理"><a href="#1-6-商品分类管理" class="headerlink" title="1.6. 商品分类管理"></a>1.6. 商品分类管理</h2><h3 id="1-6-1-商品分类数据列表"><a href="#1-6-1-商品分类数据列表" class="headerlink" title="1.6.1. 商品分类数据列表"></a>1.6.1. 商品分类数据列表</h3><ul>
<li>请求路径：categories</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>type</td>
<td>[1,2,3]</td>
<td>值：1，2，3 分别表示显示一层二层三层分类列表<br />【可选参数】如果不传递，则默认获取所有级别的分类</td>
</tr>
<tr>
<td>pagenum</td>
<td>当前页码值</td>
<td>【可选参数】如果不传递，则默认获取所有分类</td>
</tr>
<tr>
<td>pagesize</td>
<td>每页显示多少条数据</td>
<td>【可选参数】如果不传递，则默认获取所有分类</td>
</tr>
</tbody></table>
<ul>
<li>响应参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>cat_id</td>
<td>分类 ID</td>
<td></td>
</tr>
<tr>
<td>cat_name</td>
<td>分类名称</td>
<td></td>
</tr>
<tr>
<td>cat_pid</td>
<td>分类父 ID</td>
<td></td>
</tr>
<tr>
<td>cat_level</td>
<td>分类当前层级</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"cat_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"cat_name"</span>: <span class="string">"大家电"</span>,</span><br><span class="line">            <span class="attr">"cat_pid"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"cat_level"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"cat_deleted"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"children"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"cat_id"</span>: <span class="number">3</span>,</span><br><span class="line">                    <span class="attr">"cat_name"</span>: <span class="string">"电视"</span>,</span><br><span class="line">                    <span class="attr">"cat_pid"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"cat_level"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"cat_deleted"</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">"children"</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">"cat_id"</span>: <span class="number">6</span>,</span><br><span class="line">                            <span class="attr">"cat_name"</span>: <span class="string">"曲面电视"</span>,</span><br><span class="line">                            <span class="attr">"cat_pid"</span>: <span class="number">3</span>,</span><br><span class="line">                            <span class="attr">"cat_level"</span>: <span class="number">2</span>,</span><br><span class="line">                            <span class="attr">"cat_deleted"</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">"cat_id"</span>: <span class="number">7</span>,</span><br><span class="line">                            <span class="attr">"cat_name"</span>: <span class="string">"海信"</span>,</span><br><span class="line">                            <span class="attr">"cat_pid"</span>: <span class="number">3</span>,</span><br><span class="line">                            <span class="attr">"cat_level"</span>: <span class="number">2</span>,</span><br><span class="line">                            <span class="attr">"cat_deleted"</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"获取成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-6-2-添加分类"><a href="#1-6-2-添加分类" class="headerlink" title="1.6.2. 添加分类"></a>1.6.2. 添加分类</h3><ul>
<li>请求路径：categories</li>
<li>请求方法：post</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>cat_pid</td>
<td>分类父 ID</td>
<td>不能为空，如果要添加1级分类，则父分类Id应该设置为  <code>0</code></td>
</tr>
<tr>
<td>cat_name</td>
<td>分类名称</td>
<td>不能为空</td>
</tr>
<tr>
<td>cat_level</td>
<td>分类层级</td>
<td>不能为空，<code>0</code>表示一级分类；<code>1</code>表示二级分类；<code>2</code>表示三级分类</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"cat_id"</span>: <span class="number">62</span>,</span><br><span class="line">        <span class="attr">"cat_name"</span>: <span class="string">"相框"</span>,</span><br><span class="line">        <span class="attr">"cat_pid"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"cat_level"</span>: <span class="string">"1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"msg"</span>: <span class="string">"创建成功"</span>,</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">201</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-6-3-根据-id-查询分类"><a href="#1-6-3-根据-id-查询分类" class="headerlink" title="1.6.3. 根据 id 查询分类"></a>1.6.3. 根据 id 查询分类</h3><ul>
<li>请求路径：categories/:id</li>
<li>请求方法：get</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;cat_id&quot;: 3,</span><br><span class="line">        &quot;cat_name&quot;: &quot;厨卫电器&quot;,</span><br><span class="line">        &quot;cat_pid&quot;: 0,</span><br><span class="line">        &quot;cat_level&quot;: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;获取成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-6-4-编辑提交分类"><a href="#1-6-4-编辑提交分类" class="headerlink" title="1.6.4. 编辑提交分类"></a>1.6.4. 编辑提交分类</h3><ul>
<li>请求路径：categories/:id</li>
<li>请求方法：put</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
<tr>
<td>cat_name</td>
<td>分类名称</td>
<td>不能为空【此参数，放到请求体中】</td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;cat_id&quot;: 22,</span><br><span class="line">        &quot;cat_name&quot;: &quot;自拍杆&quot;,</span><br><span class="line">        &quot;cat_pid&quot;: 7,</span><br><span class="line">        &quot;cat_level&quot;: 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;更新成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-6-5-删除分类"><a href="#1-6-5-删除分类" class="headerlink" title="1.6.5. 删除分类"></a>1.6.5. 删除分类</h3><ul>
<li>请求路径：categories/:id</li>
<li>请求方法：delete</li>
<li>请求参数</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>参数说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>:id</td>
<td>分类 ID</td>
<td>不能为空<code>携带在url中</code></td>
</tr>
</tbody></table>
<ul>
<li>响应数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: null,</span><br><span class="line">    &quot;meta&quot;: &#123;</span><br><span class="line">        &quot;msg&quot;: &quot;删除成功&quot;,</span><br><span class="line">        &quot;status&quot;: 200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Web</category>
        <category>shop</category>
      </categories>
  </entry>
  <entry>
    <title>node.js</title>
    <url>/2020/09/17/node-js-2/</url>
    <content><![CDATA[<p>npm i silly-datetime –save      npm i md5</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line">http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.url) <span class="comment">//获取url</span></span><br><span class="line">        <span class="comment">//设置响应头</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/html;charset = "utf-8"'</span> &#125;);</span><br><span class="line">    <span class="comment">//乱码</span></span><br><span class="line">    res.write(<span class="string">"&lt;head&gt;&lt;meta charset='UTF-8'&gt;&lt;/head&gt;"</span>)</span><br><span class="line">    res.write(<span class="string">"今天天气"</span>)</span><br><span class="line">    res.end(<span class="string">'今天天气真不错'</span>);</span><br><span class="line">&#125;).listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server running at http://127.0.0.1:3000/'</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>)</span><br><span class="line">http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//设置响应头</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/html;charset = "utf-8"'</span> &#125;);</span><br><span class="line">    <span class="comment">//乱码</span></span><br><span class="line">    res.write(<span class="string">"&lt;head&gt;&lt;meta charset='UTF-8'&gt;&lt;/head&gt;"</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(req.url) <span class="comment">//获取url</span></span><br><span class="line">    res.write(<span class="string">'今天天气真不错'</span>)</span><br><span class="line">    <span class="keyword">if</span> (req.url != <span class="string">'/favicon.ico'</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> temp = url.parse(req.url, <span class="literal">true</span>).query</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`姓名:<span class="subst">$&#123;temp.name&#125;</span>---年龄:<span class="subst">$&#123;temp.age&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.end();</span><br><span class="line">&#125;).listen(<span class="number">3000</span>);</span><br><span class="line"><span class="comment">// const url = require('url')</span></span><br><span class="line"><span class="comment">// var api = 'http://www.baidu.com?name=zhangsan&amp;age=23'</span></span><br><span class="line"><span class="comment">//     //console.log(url.parse(api, true))</span></span><br><span class="line"><span class="comment">// var temp = url.parse(api, true).query;</span></span><br><span class="line"><span class="comment">// console.log(`姓名:$&#123;temp.name&#125;---年龄:$&#123;temp.age&#125;`)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">isdir</span>(<span class="params">path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        fs.stat(path, (err, stats) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(error)</span><br><span class="line">                reject(error)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (stats.isDirectory()) &#123;</span><br><span class="line">                resolve(<span class="literal">true</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                resolve(<span class="literal">false</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> path = <span class="string">'./demo'</span></span><br><span class="line">    <span class="keyword">var</span> dirArr = []</span><br><span class="line">    fs.readdir(path, <span class="keyword">async</span>(err, data) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">await</span> isdir(path + <span class="string">'/'</span> + data[i])) &#123;</span><br><span class="line">                dirArr.push(data[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(dirArr)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使页面可以解析css/html/js/ 响应的类型</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; rejects &#125; = <span class="built_in">require</span>(<span class="string">'assert'</span>)</span><br><span class="line">    <span class="comment">//修改文件请求头类型使其能够友好读取</span></span><br><span class="line">    <span class="comment">//可以代替async解决异步请求</span></span><br><span class="line"><span class="keyword">let</span> getFileMime = <span class="function">(<span class="params">extname</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> data = fs.readFileSync(<span class="string">'./data/mime.json'</span>)</span><br><span class="line">        <span class="keyword">let</span> mime = <span class="built_in">JSON</span>.parse(data.toString())</span><br><span class="line">        <span class="keyword">return</span> mime[extname]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// let getFileMime = (extname) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     return new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//         fs.readFile('./data/mime.json', (err, data) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//             if (err) &#123;</span></span><br><span class="line">    <span class="comment">//                 console.log(err)</span></span><br><span class="line">    <span class="comment">//                 return</span></span><br><span class="line">    <span class="comment">//             &#125;</span></span><br><span class="line">    <span class="comment">//             let mime = JSON.parse(data.toString())</span></span><br><span class="line">    <span class="comment">//             resolve(mime[extname])</span></span><br><span class="line">    <span class="comment">//         &#125;)</span></span><br><span class="line">    <span class="comment">//     &#125;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">exports.static = <span class="function">(<span class="params">req, res, staticpath</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> pathname = url.parse(req.url).pathname</span><br><span class="line">        <span class="comment">//设置初始页面</span></span><br><span class="line">    pathname = pathname == <span class="string">'/'</span> ? <span class="string">'/index.html'</span> : pathname</span><br><span class="line">        <span class="comment">//获取后缀名</span></span><br><span class="line">    <span class="keyword">let</span> extname = path.extname(pathname)</span><br><span class="line">    <span class="keyword">if</span> (pathname != <span class="string">'/favicon.ico'</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> data = fs.readFileSync(<span class="string">'./'</span> + staticpath + pathname)</span><br><span class="line">            <span class="keyword">if</span> (data) &#123;</span><br><span class="line">                <span class="keyword">let</span> mime = getFileMime(extname)</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">                    <span class="string">'Content-Type'</span>: <span class="string">''</span> + mime + <span class="string">';charset = "utf-8"'</span></span><br><span class="line">                &#125;);</span><br><span class="line">                res.end(data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>)</span><br><span class="line"><span class="keyword">const</span> route = <span class="built_in">require</span>(<span class="string">'./module/route'</span>)</span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">'ejs'</span>)</span><br><span class="line">http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//创建静态web服务</span></span><br><span class="line">    route.static(req, res, <span class="string">'static'</span>)</span><br><span class="line">        <span class="comment">//路由</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.method)</span><br><span class="line">    <span class="keyword">let</span> pathname = url.parse(req.url).pathname.replace(<span class="string">"/"</span>, <span class="string">""</span>)</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        route[pathname](req, res)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// route['error'](req, res)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// if (pathname == '/login') &#123;</span></span><br><span class="line">    <span class="comment">//     let msg = "database get data"</span></span><br><span class="line">    <span class="comment">//     let list = [&#123;</span></span><br><span class="line">    <span class="comment">//             title: '新闻01'</span></span><br><span class="line">    <span class="comment">//         &#125;, &#123;</span></span><br><span class="line">    <span class="comment">//             title: '新闻02'</span></span><br><span class="line">    <span class="comment">//         &#125;, &#123;</span></span><br><span class="line">    <span class="comment">//             title: '新闻03'</span></span><br><span class="line">    <span class="comment">//         &#125;, &#123;</span></span><br><span class="line">    <span class="comment">//             title: '新闻04'</span></span><br><span class="line">    <span class="comment">//         &#125;]</span></span><br><span class="line">    <span class="comment">//         //使用esj将数据渲染到html页面中</span></span><br><span class="line">    <span class="comment">//     ejs.renderFile('./views/form.ejs', &#123;list:list&#125;, (err, data) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//         res.writeHead(200, &#123;</span></span><br><span class="line">    <span class="comment">//             'Content-Type': 'text/html;charset = "utf-8"'</span></span><br><span class="line">    <span class="comment">//         &#125;);</span></span><br><span class="line">    <span class="comment">//         res.end(data)</span></span><br><span class="line">    <span class="comment">//     &#125;)</span></span><br><span class="line">    <span class="comment">// &#125; else if (pathname == "/register") &#123;</span></span><br><span class="line">    <span class="comment">//     res.writeHead(200, &#123;</span></span><br><span class="line">    <span class="comment">//         'Content-Type': 'text/html;charset = "utf-8"'</span></span><br><span class="line">    <span class="comment">//     &#125;);</span></span><br><span class="line">    <span class="comment">//     res.write("&lt;head&gt;&lt;meta charset='UTF-8'&gt;&lt;/head&gt;")</span></span><br><span class="line">    <span class="comment">//     res.end("11111");</span></span><br><span class="line">    <span class="comment">// &#125; else if (pathname == "/admin") &#123;</span></span><br><span class="line">    <span class="comment">//     res.writeHead(200, &#123;</span></span><br><span class="line">    <span class="comment">//         'Content-Type': 'text/html;charset = "utf-8"'</span></span><br><span class="line">    <span class="comment">//     &#125;);</span></span><br><span class="line">    <span class="comment">//     res.write("&lt;head&gt;&lt;meta charset='UTF-8'&gt;&lt;/head&gt;")</span></span><br><span class="line">    <span class="comment">//     res.end("处理后的业务逻辑");</span></span><br><span class="line">    <span class="comment">// &#125; else if (pathname == "/dologin") &#123;</span></span><br><span class="line">    <span class="comment">//     //获取post传值</span></span><br><span class="line">    <span class="comment">//     let postdata = ''</span></span><br><span class="line">    <span class="comment">//         //on可以多次读取data值</span></span><br><span class="line">    <span class="comment">//     req.on('data', (chunk) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//         postdata += chunk</span></span><br><span class="line">    <span class="comment">//     &#125;)</span></span><br><span class="line">    <span class="comment">//     req.on('end', () =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//             console.log(postdata)</span></span><br><span class="line">    <span class="comment">//             res.end(postdata)</span></span><br><span class="line">    <span class="comment">//         &#125;)</span></span><br><span class="line">    <span class="comment">//         // res.writeHead(404, &#123;</span></span><br><span class="line">    <span class="comment">//         //     'Content-Type': 'text/html;charset = "utf-8"'</span></span><br><span class="line">    <span class="comment">//         // &#125;);</span></span><br><span class="line">    <span class="comment">//         // res.end("post page");</span></span><br><span class="line">    <span class="comment">// &#125; else &#123;</span></span><br><span class="line">    <span class="comment">//     res.writeHead(404, &#123;</span></span><br><span class="line">    <span class="comment">//         'Content-Type': 'text/html;charset = "utf-8"'</span></span><br><span class="line">    <span class="comment">//     &#125;);</span></span><br><span class="line">    <span class="comment">//     res.end("页面不存在");</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;).listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>XXXX<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个ejs的后台模板引擎-登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%=msg%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &lt;% for(var i=0;i&lt;list.length;i++)&#123;%&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%=list[i].title%</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>node.js</category>
      </categories>
  </entry>
  <entry>
    <title>koa(2)</title>
    <url>/2020/09/16/koa-2/</url>
    <content><![CDATA[<p>cookie /session同一个浏览器访问同一个域的不同页面的数据共享</p>
<p>session保存在服务器（更安全），cookie保存在客户端（浏览器）</p>
<p>两者都是会通过cookie存储数据，不同的时需要session获取数据需要传入key值后通过cookie请求session</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;maxAge cookie过期Date</span><br><span class="line">&#x2F;&#x2F;expires cookie过期Date(具体)</span><br><span class="line">&#x2F;&#x2F;path cookie路径，默认是&quot;&#x2F;&quot; 配置可以访问的页面(可忽略)</span><br><span class="line">&#x2F;&#x2F;domain cookie域名，默认都可访问</span><br><span class="line">&#x2F;&#x2F;secure 安全cookie 默认false设置成true表示只有https可以访问</span><br><span class="line">&#x2F;&#x2F;httpOnly 是否只是服务器可以访问cookie默认是true</span><br><span class="line">&#x2F;&#x2F;overwrite 是否设置覆盖以前的cookie（默认true），false是客户端（js）、服务器都可以访问</span><br><span class="line">无法直接设置中文cookie</span><br><span class="line">new Buffer(&#39;&#39;).toString(&#39;base64&#39;)    </span><br><span class="line">new Buffer(&#39;&#39;,&#39;base64).toString()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    ctx.cookies.set(<span class="string">'userinfo'</span>, <span class="string">'lihua'</span>, &#123;</span><br><span class="line">        maxAge: <span class="number">60</span> * <span class="number">100</span> * <span class="number">60</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/news'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        <span class="comment">//获取cookie值</span></span><br><span class="line">        <span class="keyword">var</span> userinfo = ctx.cookies.get(<span class="string">'userinfo'</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(userinfo)</span><br><span class="line">        <span class="keyword">let</span> list = &#123;</span><br><span class="line">            name: <span class="string">'张三'</span>,</span><br><span class="line">            h: <span class="string">'&lt;h3&gt;一个h2&lt;/h3&gt;'</span>,</span><br><span class="line">            num: <span class="number">20</span>,</span><br><span class="line">            data: [<span class="string">'1111'</span>, <span class="string">'2222'</span>, <span class="string">'333'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">await</span> ctx.render(<span class="string">'news'</span>, &#123;</span><br><span class="line">            list: list</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//cnpm i koa-session --save</span></span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ctx.session.userinfo)</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/news'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        ctx.session.userinfo = <span class="string">'lihua'</span></span><br><span class="line">        ctx.body = <span class="string">"登录成功"</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cnpm i koa-generator -g</span><br><span class="line">koa2 my-project</span><br><span class="line">cd my-project</span><br><span class="line">npm install</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure>

<p>koa模块化</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)()</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">static</span> = <span class="built_in">require</span>(<span class="string">'koa-static'</span>)</span><br><span class="line"><span class="keyword">const</span> render = <span class="built_in">require</span>(<span class="string">'koa-art-template'</span>)</span><br><span class="line"><span class="keyword">var</span> admin = <span class="built_in">require</span>(<span class="string">'./routes/admin'</span>)</span><br><span class="line"><span class="keyword">var</span> index = <span class="built_in">require</span>(<span class="string">'./routes/index'</span>)</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line">    <span class="comment">//引入子模块</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line">    <span class="comment">//配置模板引擎</span></span><br><span class="line">render(app, &#123;</span><br><span class="line">    root: path.join(__dirname, <span class="string">'views'</span>),</span><br><span class="line">    extname: <span class="string">'.html'</span>,</span><br><span class="line">    debug: process.env.NODE_ENV !== <span class="string">"production"</span></span><br><span class="line">&#125;)</span><br><span class="line">router.use(<span class="string">'/'</span>, index)</span><br><span class="line">router.use(<span class="string">'/admin'</span>, admin)</span><br><span class="line">app.use(<span class="keyword">static</span>(__dirname + <span class="string">'/static'</span>))</span><br><span class="line">app.use(router.routes()).use(router.allowedMethods())</span><br><span class="line">app.listen(<span class="number">8080</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//routes/admin.js</span></span><br><span class="line"><span class="keyword">var</span> routes = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)()</span><br><span class="line"><span class="keyword">var</span> user = <span class="built_in">require</span>(<span class="string">'./admin/user.js'</span>)</span><br><span class="line"><span class="keyword">var</span> focus = <span class="built_in">require</span>(<span class="string">'./admin/focus.js'</span>)</span><br><span class="line"><span class="keyword">var</span> news = <span class="built_in">require</span>(<span class="string">'./admin/news.js'</span>)</span><br><span class="line">    <span class="comment">// 配置admin的子路由</span></span><br><span class="line">routes.get(<span class="string">'/'</span>, (ctx) =&gt; &#123;</span><br><span class="line">    ctx.body = <span class="string">'管理首页'</span></span><br><span class="line">&#125;)</span><br><span class="line">routes.use(<span class="string">'/user'</span>, user)</span><br><span class="line">routes.use(<span class="string">'/focus'</span>, focus)</span><br><span class="line">routes.use(<span class="string">'/news'</span>, news)</span><br><span class="line"><span class="built_in">module</span>.exports = routes.routes()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//routes/index.js</span></span><br><span class="line"><span class="keyword">var</span> routes = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)()</span><br><span class="line">routes.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'default/index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'case'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'default/case'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'about'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'default/about'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = routes.routes()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//routes/admin/focus</span></span><br><span class="line"><span class="comment">// 轮播图的增删改查</span></span><br><span class="line"><span class="keyword">var</span> routes = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)()</span><br><span class="line">routes.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line"><span class="comment">//渲染静态页面到指定路由</span></span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/focus/index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/add'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/focus/add'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/edit'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/focus/edit'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/delete'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/focus/delete'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = routes.routes()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//routes/admin/news</span></span><br><span class="line"><span class="comment">// 新闻的增删改查</span></span><br><span class="line"><span class="keyword">var</span> routes = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)()</span><br><span class="line">routes.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/news/index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/add'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/news/add'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/edit'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/news/edit'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/delete'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/news/delete'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = routes.routes()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//routes/admin/user</span></span><br><span class="line"><span class="comment">// 用户的增删改查</span></span><br><span class="line"><span class="keyword">var</span> routes = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)()</span><br><span class="line">routes.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/user/index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/add'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/user/add'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/edit'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/user/edit'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">routes.get(<span class="string">'/delete'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin/user/delete'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = routes.routes()</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;views&#x2F;admin</span><br><span class="line">&#x2F;&#x2F;focus(news,user)&#x2F;&#x2F;add.html(delete.html....)</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;增加轮播图&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;views&#x2F;default</span><br><span class="line">about.html(case.html,index.html)</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;h2&gt;网站首页&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;div&gt;box&lt;&#x2F;div&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giz4yoob5dj304i0dgmxj.jpg" alt=""></p>
]]></content>
      <categories>
        <category>Web</category>
        <category>koa</category>
      </categories>
  </entry>
  <entry>
    <title>koa(1)</title>
    <url>/2020/09/16/koa-1/</url>
    <content><![CDATA[<p>npm init    cnpm update –save(npm i)</p>
<p>npm install –save koa   npm install –save koa-router</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)() <span class="comment">//引入和实例化路由</span></span><br><span class="line">    <span class="comment">//实例化</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.body = <span class="string">'首页'</span> <span class="comment">//相当于原生里面的res.writehead()</span></span><br><span class="line">    &#125;).get(<span class="string">'/news'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        <span class="comment">//从ctx中获取get传值</span></span><br><span class="line">        <span class="built_in">console</span>.log(ctx.query) <span class="comment">//获取对象，使用较多 ?id=123   Object: null prototype] &#123; id: '123' &#125;</span></span><br><span class="line">        <span class="built_in">console</span>.log(ctx.querystring) <span class="comment">//字符串</span></span><br><span class="line">            <span class="comment">//从ctx里面的request中获取get传值</span></span><br><span class="line">        <span class="built_in">console</span>.log(ctx.request.url)</span><br><span class="line">        <span class="built_in">console</span>.log(ctx.request.query)</span><br><span class="line">        <span class="built_in">console</span>.log(ctx.request.querystring)</span><br><span class="line">        ctx.body = <span class="string">'新闻页面'</span></span><br><span class="line">    &#125;).get(<span class="string">'/newscontent/:aid'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;<span class="comment">//&#123; aid: '1' &#125;</span></span><br><span class="line">        <span class="comment">//动态路由的传值</span></span><br><span class="line">        <span class="built_in">console</span>.log(ctx.params)</span><br><span class="line">        ctx.body = <span class="string">'新闻详情'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//启动路由</span></span><br><span class="line">app.use(router.routes())</span><br><span class="line">    .use(router.allowedMethods())</span><br><span class="line">app.listen(<span class="number">3001</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'start at port 3001'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)() <span class="comment">//引入和实例化路由</span></span><br><span class="line">    <span class="comment">//实例化</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line">app.use(<span class="keyword">async</span>(ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line">    <span class="keyword">await</span> next()</span><br><span class="line">    <span class="keyword">if</span> (ctx.status == <span class="number">404</span>) &#123;</span><br><span class="line">        ctx.status = <span class="number">404</span>;</span><br><span class="line">        ctx.body = <span class="string">'this is a 404 page'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(ctx.url)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.body = <span class="string">'首页'</span> <span class="comment">//相当于原生里面的res.writehead()</span></span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/news'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'新闻'</span>)</span><br><span class="line">        ctx.body = <span class="string">'新闻页面'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//启动路由</span></span><br><span class="line">app.use(router.routes())</span><br><span class="line">    .use(router.allowedMethods()) <span class="comment">//请求出错时的处理逻辑</span></span><br><span class="line">app.listen(<span class="number">3001</span>, () =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'start at port 3001'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//new Date()-&gt;console.log('新闻')-&gt;ctx.status/ctx.url</span></span><br><span class="line">    <span class="comment">//中间件是一个类似洋葱执行过程，多个中间件会先逐个执行next后找到路由后再返回执行next之后的逻辑</span></span><br></pre></td></tr></table></figure>

<p>模板引擎</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"><span class="comment">//npm i --save koa-views</span></span><br><span class="line"><span class="comment">//npm i ejs --save    ejs模板引擎</span></span><br><span class="line">    <span class="comment">//&lt;% include public/header.ejs%&gt;</span></span><br><span class="line">Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">var</span> views = <span class="built_in">require</span>(<span class="string">'koa-views'</span>)</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)() <span class="comment">//引入和实例化路由</span></span><br><span class="line">    <span class="comment">//实例化</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line">    <span class="comment">//模板引擎中间件</span></span><br><span class="line">app.use(views(<span class="string">'views'</span>, &#123;</span><br><span class="line">        extension: <span class="string">'ejs'</span> <span class="comment">//应用ejs模板引擎</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="comment">// app.use(views('views', &#123; map: &#123; html: 'ejs' &#125; &#125;))//也可以使用此配置但是文件后缀是html</span></span><br><span class="line">    <span class="comment">//中间件配置公共的信息</span></span><br><span class="line">app.use(<span class="keyword">async</span>(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.state.userinfo = <span class="string">'张三'</span></span><br><span class="line">    <span class="keyword">await</span> next() <span class="comment">//继续向下匹配路由</span></span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> title = <span class="string">'hello ejs'</span></span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">        title: title</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/news'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> list = [<span class="string">'123'</span>, <span class="string">'234'</span>, <span class="string">'345'</span>]</span><br><span class="line">        <span class="keyword">let</span> content = <span class="string">"&lt;h2&gt;一个很帅的页面&lt;/h2&gt;"</span></span><br><span class="line">        <span class="keyword">let</span> num = <span class="number">36</span></span><br><span class="line">        <span class="keyword">await</span> ctx.render(<span class="string">'news'</span>, &#123;</span><br><span class="line">            list: list,</span><br><span class="line">            content: content,</span><br><span class="line">            num: num</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//启动路由</span></span><br><span class="line">app.use(router.routes())</span><br><span class="line">    .use(router.allowedMethods()) <span class="comment">//请求出错时的处理逻辑</span></span><br><span class="line">app.listen(<span class="number">3001</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'start at port 3001'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- index.ejs --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;公共数据&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;%&#x3D;userinfo%&gt;</span><br><span class="line">        &lt;br&#x2F;&gt; ejs模板引擎</span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">            &lt;%&#x3D;title%&gt;</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- news.ejs --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;公共数据&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;%&#x3D;userinfo%&gt;</span><br><span class="line">        &lt;h2&gt;ejs绑定数据&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;%for(var i&#x3D;0;i&lt;list.length;i++)&#123;%&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;%&#x3D;list[i]%&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">                &lt;%&#125;%&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">        &lt;h2&gt;绑定html数据&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;%-content%&gt;</span><br><span class="line">            &lt;h2&gt;条件判断&lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;%if(num&gt;24)&#123;%&gt;</span><br><span class="line">                大于24</span><br><span class="line">                &lt;%&#125;else&#123;%&gt;</span><br><span class="line">                    小于24</span><br><span class="line">                    &lt;%&#125;%&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//原生js获取post传值</span></span><br><span class="line">exports.getPostData = <span class="function"><span class="keyword">function</span>(<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> str = <span class="string">""</span></span><br><span class="line">            ctx.req.on(<span class="string">'data'</span>, (chunk) =&gt; &#123;</span><br><span class="line">                str += chunk</span><br><span class="line">            &#125;)</span><br><span class="line">            ctx.req.on(<span class="string">'end'</span>, (chunk) =&gt; &#123;</span><br><span class="line">                resolve(str)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            reject(err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">router.post(<span class="string">'/doAdd'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> data = <span class="keyword">await</span> common.getPostData(ctx)</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">    ctx.body = data</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//cnpm i --save koa-bodyparser 中间件获取post传值</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--koa-bodyparser获取post传值--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/doadd"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">        密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> bodyparser = <span class="built_in">require</span>(<span class="string">'koa-bodyparser'</span>)</span><br><span class="line">app.use(bodyparser())</span><br><span class="line">router.post(<span class="string">'/doadd'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        ctx.body = ctx.request.body</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<p>static静态资源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;cnpm i --save koa-static</span><br><span class="line">app.use(static(__dirname + &#39;&#x2F;static&#39;))首先去static目录找，如果能找到返回对应的文件，找不到next()</span><br><span class="line"></span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;basic.css&quot;&gt; static下的css目录</span><br></pre></td></tr></table></figure>

<p>art-template模板引擎(与ejs功能相同，但运行更快)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//cnpm i art-template --save</span></span><br><span class="line"><span class="comment">//cnpm i koa-art-template --save</span></span><br><span class="line"><span class="keyword">var</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> render = <span class="built_in">require</span>(<span class="string">'koa-art-template'</span>)</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line">render(app, &#123;</span><br><span class="line">    root: path.join(__dirname, <span class="string">'views'</span>),</span><br><span class="line">    extname: <span class="string">'.html'</span>,</span><br><span class="line">    debug: process.env.NODE_ENV !== <span class="string">"production"</span></span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/news'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> list = &#123;</span><br><span class="line">            name: <span class="string">'张三'</span>,</span><br><span class="line">            h: <span class="string">'&lt;h3&gt;一个h2&lt;/h3&gt;'</span>,</span><br><span class="line">            num: <span class="number">20</span>,</span><br><span class="line">            data: [<span class="string">'1111'</span>, <span class="string">'2222'</span>, <span class="string">'333'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">await</span> ctx.render(<span class="string">'news'</span>, &#123;</span><br><span class="line">            list: list</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>普通绑定<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    &#123;&#123;list.name&#125;&#125; <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>html绑定<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>&#123;&#123;@list.h&#125;&#125; <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>if-else<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    &#123;&#123;if num&gt;20&#125;&#125;<span class="tag">&lt;<span class="name">span</span>&gt;</span>大于20<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123;else&#125;&#125;<span class="tag">&lt;<span class="name">span</span>&gt;</span>小于20<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123;/if&#125;&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>循环<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;&#123;each list.data&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;$index&#125;&#125;----&#123;&#123;$value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;/each&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">  	&#123;&#123;include 'public/header.html'&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web</category>
        <category>koa</category>
      </categories>
  </entry>
  <entry>
    <title>express(2)</title>
    <url>/2020/09/16/express-2/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 拦截所有请求</span></span><br><span class="line"><span class="comment">// extended: false 方法内部使用querystring模块处理请求参数的格式</span></span><br><span class="line"><span class="comment">// extended: true 方法内部使用第三方模块qs处理请求参数的格式</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;))</span><br><span class="line">app.post(<span class="string">'/add'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 接收post请求参数</span></span><br><span class="line">    res.send(req.body)</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.use(fn(&#123; <span class="attr">a</span>: <span class="number">1</span> &#125;))</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.a == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(req.url)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(req.method)</span><br><span class="line">        &#125;</span><br><span class="line">        next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 接收post请求参数</span></span><br><span class="line">    res.send(<span class="string">'ok'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.get(<span class="string">'/index/:id/:name/:age'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	<span class="comment">// 接收post请求参数</span></span><br><span class="line">	res.send(req.params)</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 实现静态资源访问功能  public目录下的数据</span></span><br><span class="line">app.use(<span class="string">'/static'</span>, express.static(path.join(__dirname, <span class="string">'public'</span>)))</span><br><span class="line"><span class="comment">// 端口监听</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 1.告诉express框架使用什么模板引擎渲染什么后缀的模板文件</span></span><br><span class="line"><span class="comment">//  1.模板后缀</span></span><br><span class="line"><span class="comment">//  2.使用的模板疫情</span></span><br><span class="line">app.engine(<span class="string">'art'</span>, <span class="built_in">require</span>(<span class="string">'express-art-template'</span>))</span><br><span class="line">    <span class="comment">// 2.告诉express框架模板存放的位置是什么</span></span><br><span class="line">app.set(<span class="string">'views'</span>, path.join(__dirname, <span class="string">'views'</span>))</span><br><span class="line">    <span class="comment">// 3.告诉express框架模板的默认后缀是什么</span></span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'art'</span>);</span><br><span class="line">app.get(<span class="string">'/index'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 1. 拼接模板路径</span></span><br><span class="line">    <span class="comment">// 2. 拼接模板后缀</span></span><br><span class="line">    <span class="comment">// 3. 哪一个模板和哪一个数据进行拼接</span></span><br><span class="line">    <span class="comment">// 4. 将拼接结果响应给了客户端</span></span><br><span class="line">    res.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">        msg: <span class="string">'message'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/list'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    res.render(<span class="string">'list'</span>, &#123;</span><br><span class="line">        msg: <span class="string">'list page'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 端口监听</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 模板配置</span></span><br><span class="line">app.engine(<span class="string">'art'</span>, <span class="built_in">require</span>(<span class="string">'express-art-template'</span>))</span><br><span class="line">app.set(<span class="string">'views'</span>, path.join(__dirname, <span class="string">'views'</span>))</span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'art'</span>);</span><br><span class="line">app.locals.users = [&#123;</span><br><span class="line">	name: <span class="string">'zhangsan'</span>,</span><br><span class="line">	age: <span class="number">20</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">	name: <span class="string">'李四'</span>,</span><br><span class="line">	age: <span class="number">30</span></span><br><span class="line">&#125;]</span><br><span class="line">app.get(<span class="string">'/index'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">		msg: <span class="string">'首页'</span></span><br><span class="line">	&#125;)</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/list'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.render(<span class="string">'list'</span>, &#123;</span><br><span class="line">		msg: <span class="string">'列表页'</span></span><br><span class="line">	&#125;);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 端口监听</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;index.art  list.art</span><br><span class="line">&#123;&#123;msg&#125;&#125;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">	&#123;&#123;each users&#125;&#125;</span><br><span class="line">	&lt;li&gt;</span><br><span class="line">		&#123;&#123;$value.name&#125;&#125;</span><br><span class="line">		&#123;&#123;$value.age&#125;&#125;</span><br><span class="line">	&lt;&#x2F;li&gt;</span><br><span class="line">	&#123;&#123;&#x2F;each&#125;&#125;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>express</category>
      </categories>
  </entry>
  <entry>
    <title>express(1)</title>
    <url>/2020/09/16/express-1/</url>
    <content><![CDATA[<p>npm i –global nodemon 监听node，需改后不需要重新启动node</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.get(<span class="string">'/'</span> , (req, res) =&gt; &#123;</span><br><span class="line">	<span class="comment">// send()</span></span><br><span class="line">	<span class="comment">// 1. send方法内部会检测响应内容的类型</span></span><br><span class="line">	<span class="comment">// 2. send方法会自动设置http状态码</span></span><br><span class="line">	<span class="comment">// 3. send方法会帮我们自动设置响应的内容类型及编码</span></span><br><span class="line">	res.send(<span class="string">'Hello. Express'</span>);</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/list'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.send(&#123;<span class="attr">name</span>: <span class="string">'张三'</span>, <span class="attr">age</span>: <span class="number">20</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.get(<span class="string">'/request'</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">	req.name = <span class="string">"张三"</span>;</span><br><span class="line">	next();</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/request'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.send(req.name)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 接收所有请求的中间件</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'请求走了app.use中间件'</span>);</span><br><span class="line">	next()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 当客户端访问/request请求的时候走当前中间件</span></span><br><span class="line">app.use(<span class="string">'/request'</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'请求走了app.use / request中间件'</span>)</span><br><span class="line">	next()</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/list'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.send(<span class="string">'/list'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/request'</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">	req.name = <span class="string">"张三"</span>;</span><br><span class="line">	next();</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/request'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.send(req.name)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.get(<span class="string">'/index'</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">	<span class="comment">// throw new Error('程序发生了未知错误')</span></span><br><span class="line">	fs.readFile(<span class="string">'./01.js'</span>, <span class="string">'utf8'</span>, (err, result) =&gt; &#123;</span><br><span class="line">		<span class="keyword">if</span> (err != <span class="literal">null</span>) &#123;</span><br><span class="line">			next(err)</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			res.send(result)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">// res.send('程序正常执行')</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 错误处理中间</span></span><br><span class="line">app.use(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">	res.status(<span class="number">500</span>).send(err.message);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="keyword">const</span> home = <span class="built_in">require</span>(<span class="string">'./route/home'</span>);</span><br><span class="line"><span class="keyword">const</span> admin = <span class="built_in">require</span>(<span class="string">'./route/admin'</span>);</span><br><span class="line">app.use(<span class="string">'/home'</span>, home);</span><br><span class="line">app.use(<span class="string">'/admin'</span>, admin);</span><br><span class="line"><span class="comment">// 端口监听</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//route目录下admin.js home.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> admin = express.Router();</span><br><span class="line">admin.get(<span class="string">'/index'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.send(<span class="string">'欢迎来到博客管理页面'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports = admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> home = express.Router();</span><br><span class="line">home.get(<span class="string">'/index'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	res.send(<span class="string">'欢迎来到博客首页页面'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports = home;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.get(<span class="string">'/index'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	<span class="comment">// 获取get请求参数</span></span><br><span class="line">	res.send(req.query)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 端口监听</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="comment">// 创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 拦截所有请求</span></span><br><span class="line"><span class="comment">// extended: false 方法内部使用querystring模块处理请求参数的格式</span></span><br><span class="line"><span class="comment">// extended: true 方法内部使用第三方模块qs处理请求参数的格式</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">false</span>&#125;))</span><br><span class="line">app.post(<span class="string">'/add'</span>, (req, res) =&gt; &#123;</span><br><span class="line">	<span class="comment">// 接收post请求参数</span></span><br><span class="line">	res.send(req.body)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 端口监听</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>express</category>
      </categories>
  </entry>
  <entry>
    <title>vite(1)</title>
    <url>/2020/09/14/vite-1/</url>
    <content><![CDATA[<p>cnpm i -g @vue/cli 安装vue3.0</p>
<p>Vue create 项目名 （y package.json y ）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm init vite-app &lt;project-name&gt;</span><br><span class="line">cd &lt;project-name&gt;</span><br><span class="line">npm i</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>vite</category>
      </categories>
  </entry>
  <entry>
    <title>promise(2)</title>
    <url>/2020/09/10/promise-2/</url>
    <content><![CDATA[<h4 id="3-自定义Promise"><a href="#3-自定义Promise" class="headerlink" title="3. 自定义Promise"></a>3. 自定义Promise</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">自定义Promise函数模块: IIFE</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">window</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> PENDING = <span class="string">'pending'</span></span><br><span class="line">  <span class="keyword">const</span> RESOLVED = <span class="string">'resolved'</span></span><br><span class="line">  <span class="keyword">const</span> REJECTED = <span class="string">'rejected'</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Promise</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise构造函数</span></span><br><span class="line"><span class="comment">    excutor: 执行器函数(同步执行)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">constructor</span>(excutor) &#123;</span><br><span class="line">      <span class="comment">// 将当前promise对象保存起来</span></span><br><span class="line">      <span class="keyword">const</span> self = <span class="keyword">this</span></span><br><span class="line">      self.status = PENDING <span class="comment">// 给promise对象指定status属性, 初始值为pending</span></span><br><span class="line">      self.data = <span class="literal">undefined</span> <span class="comment">// 给promise对象指定一个用于存储结果数据的属性</span></span><br><span class="line">      self.callbacks = [] <span class="comment">// 每个元素的结构: &#123; onResolved() &#123;&#125;, onRejected() &#123;&#125;&#125;</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">resolve</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 如果当前状态不是pending, 直接结束</span></span><br><span class="line">        <span class="keyword">if</span> (self.status!==PENDING) &#123;</span><br><span class="line">          <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将状态改为resolved</span></span><br><span class="line">        self.status = RESOLVED</span><br><span class="line">        <span class="comment">// 保存value数据</span></span><br><span class="line">        self.data = value</span><br><span class="line">        <span class="comment">// 如果有待执行callback函数, 立即异步执行回调函数onResolved</span></span><br><span class="line">        <span class="keyword">if</span> (self.callbacks.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 放入队列中执行所有成功的回调</span></span><br><span class="line">            self.callbacks.forEach(<span class="function"><span class="params">calbacksObj</span> =&gt;</span> &#123;</span><br><span class="line">              calbacksObj.onResolved(value)</span><br><span class="line">            &#125;) </span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">reject</span> (<span class="params">reason</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 如果当前状态不是pending, 直接结束</span></span><br><span class="line">        <span class="keyword">if</span> (self.status!==PENDING) &#123;</span><br><span class="line">          <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将状态改为rejected</span></span><br><span class="line">        self.status = REJECTED</span><br><span class="line">        <span class="comment">// 保存value数据</span></span><br><span class="line">        self.data = reason</span><br><span class="line">        <span class="comment">// 如果有待执行callback函数, 立即异步执行回调函数onRejected</span></span><br><span class="line">        <span class="keyword">if</span> (self.callbacks.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 放入队列中执行所有成功的回调</span></span><br><span class="line">            self.callbacks.forEach(<span class="function"><span class="params">calbacksObj</span> =&gt;</span> &#123;</span><br><span class="line">              calbacksObj.onRejected(reason)</span><br><span class="line">            &#125;) </span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 立即同步执行excutor</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        excutor(resolve, reject)</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123; <span class="comment">// 如果执行器抛出异常, promise对象变为rejected状态</span></span><br><span class="line">        reject(error)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise原型对象的then()</span></span><br><span class="line"><span class="comment">    指定成功和失败的回调函数</span></span><br><span class="line"><span class="comment">    返回一个新的promise对象</span></span><br><span class="line"><span class="comment">    返回promise的结果由onResolved/onRejected执行结果决定</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    then (onResolved, onRejected) &#123;</span><br><span class="line">      <span class="keyword">const</span> self = <span class="keyword">this</span></span><br><span class="line">      <span class="comment">// 指定回调函数的默认值(必须是函数)</span></span><br><span class="line">      onResolved = <span class="keyword">typeof</span> onResolved===<span class="string">'function'</span> ? onResolved : <span class="function"><span class="params">value</span> =&gt;</span> value</span><br><span class="line">      onRejected = <span class="keyword">typeof</span> onRejected===<span class="string">'function'</span> ? onRejected : <span class="function"><span class="params">reason</span> =&gt;</span> &#123;<span class="keyword">throw</span> reason&#125;</span><br><span class="line">      <span class="comment">// 返回一个新的promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">/* </span></span><br><span class="line"><span class="comment">        执行指定的回调函数</span></span><br><span class="line"><span class="comment">        根据执行的结果改变return的promise的状态/数据</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">          <span class="comment">/* </span></span><br><span class="line"><span class="comment">          返回promise的结果由onResolved/onRejected执行结果决定</span></span><br><span class="line"><span class="comment">          1. 抛出异常, 返回promise的结果为失败, reason为异常</span></span><br><span class="line"><span class="comment">          2. 返回的是promise, 返回promise的结果就是这个结果</span></span><br><span class="line"><span class="comment">          3. 返回的不是promise, 返回promise为成功, value就是返回值</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> result = callback(self.data)</span><br><span class="line">            <span class="keyword">if</span> (result <span class="keyword">instanceof</span> <span class="built_in">Promise</span>) &#123; <span class="comment">// 2. 返回的是promise, 返回promise的结果就是这个结果</span></span><br><span class="line">              <span class="comment">/* </span></span><br><span class="line"><span class="comment">              result.then(</span></span><br><span class="line"><span class="comment">                value =&gt; resolve(vlaue),</span></span><br><span class="line"><span class="comment">                reason =&gt; reject(reason)</span></span><br><span class="line"><span class="comment">              ) */</span></span><br><span class="line">              result.then(resolve, reject)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 3. 返回的不是promise, 返回promise为成功, value就是返回值</span></span><br><span class="line">              resolve(result)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (error) &#123; <span class="comment">// 1. 抛出异常, 返回promise的结果为失败, reason为异常</span></span><br><span class="line">            reject(error)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 当前promise的状态是resolved</span></span><br><span class="line">        <span class="keyword">if</span> (self.status===RESOLVED) &#123;</span><br><span class="line">          <span class="comment">// 立即异步执行成功的回调函数</span></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            handle(onResolved)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.status===REJECTED) &#123; <span class="comment">// 当前promise的状态是rejected</span></span><br><span class="line">          <span class="comment">// 立即异步执行失败的回调函数</span></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            handle(onRejected)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 当前promise的状态是pending</span></span><br><span class="line">          <span class="comment">// 将成功和失败的回调函数保存callbacks容器中缓存起来</span></span><br><span class="line">          self.callbacks.push(&#123;</span><br><span class="line">            onResolved (value) &#123;</span><br><span class="line">              handle(onResolved)</span><br><span class="line">            &#125;,</span><br><span class="line">            onRejected (reason) &#123;</span><br><span class="line">              handle(onRejected)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise原型对象的catch()</span></span><br><span class="line"><span class="comment">    指定失败的回调函数</span></span><br><span class="line"><span class="comment">    返回一个新的promise对象</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">catch</span> (onRejected) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.then(<span class="literal">undefined</span>, onRejected)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise函数对象的resolve方法</span></span><br><span class="line"><span class="comment">    返回一个指定结果的成功的promise</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span> resolve = <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 返回一个成功/失败的promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// value是promise</span></span><br><span class="line">        <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="built_in">Promise</span>) &#123; <span class="comment">// 使用value的结果作为promise的结果</span></span><br><span class="line">          value.then(resolve, reject)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// value不是promise  =&gt; promise变为成功, 数据是value</span></span><br><span class="line">          resolve(value)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise函数对象的reject方法</span></span><br><span class="line"><span class="comment">    返回一个指定reason的失败的promise</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span> reject = <span class="function"><span class="keyword">function</span> (<span class="params">reason</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 返回一个失败的promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        reject(reason)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise函数对象的all方法</span></span><br><span class="line"><span class="comment">    返回一个promise, 只有当所有proimse都成功时才成功, 否则只要有一个失败的就失败</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span> all = <span class="function"><span class="keyword">function</span> (<span class="params">promises</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 用来保存所有成功value的数组</span></span><br><span class="line">      <span class="keyword">const</span> values = <span class="keyword">new</span> <span class="built_in">Array</span>(promises.length) </span><br><span class="line">      <span class="comment">// 用来保存成功promise的数量</span></span><br><span class="line">      <span class="keyword">let</span> resolvedCount = <span class="number">0</span></span><br><span class="line">      <span class="comment">// 返回一个新的promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 遍历promises获取每个promise的结果</span></span><br><span class="line">        promises.forEach(<span class="function">(<span class="params">p, index</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">Promise</span>.resolve(p).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line">              resolvedCount++ <span class="comment">// 成功的数量加1</span></span><br><span class="line">              <span class="comment">// p成功, 将成功的vlaue保存vlaues</span></span><br><span class="line">              <span class="comment">// values.push(value)</span></span><br><span class="line">              values[index] = value</span><br><span class="line">              <span class="comment">// 如果全部成功了, 将return的promise改变成功</span></span><br><span class="line">              <span class="keyword">if</span> (resolvedCount===promises.length) &#123;</span><br><span class="line">                resolve(values)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123; <span class="comment">// 只要一个失败了, return的promise就失败</span></span><br><span class="line">              reject(reason)</span><br><span class="line">            &#125;</span><br><span class="line">          )</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    Promise函数对象的race方法</span></span><br><span class="line"><span class="comment">    返回一个promise, 其结果由第一个完成的promise决定</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span> race = <span class="function"><span class="keyword">function</span> (<span class="params">promises</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 返回一个promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 遍历promises获取每个promise的结果</span></span><br><span class="line">        promises.forEach(<span class="function">(<span class="params">p, index</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">Promise</span>.resolve(p).then(</span><br><span class="line">            value =&gt; &#123;<span class="comment">// 一旦有成功了, 将return变为成功</span></span><br><span class="line">              resolve(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123; <span class="comment">// 一旦有失败了, 将return变为失败</span></span><br><span class="line">              reject(reason)</span><br><span class="line">            &#125;</span><br><span class="line">          )</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    返回一个promise对象, 它在指定的时间后才确定结果</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span> resolveDelay = <span class="function"><span class="keyword">function</span> (<span class="params">value, time</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 返回一个成功/失败的promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// value是promise</span></span><br><span class="line">          <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="built_in">Promise</span>) &#123; <span class="comment">// 使用value的结果作为promise的结果</span></span><br><span class="line">            value.then(resolve, reject)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// value不是promise  =&gt; promise变为成功, 数据是value</span></span><br><span class="line">            resolve(value)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, time)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    返回一个promise对象, 它在指定的时间后才失败</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span> rejectDelay = <span class="function"><span class="keyword">function</span> (<span class="params">reason, time</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 返回一个失败的promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          reject(reason)</span><br><span class="line">        &#125;, time)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 向外暴露Promise函数</span></span><br><span class="line">  <span class="built_in">window</span>.Promise = <span class="built_in">Promise</span></span><br><span class="line">&#125;)(<span class="built_in">window</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/Promise_class.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;script&gt;</span></span><br><span class="line"><span class="comment">        const p = new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="comment">            setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">                // resolve(1)</span></span><br><span class="line"><span class="comment">                reject(2)</span></span><br><span class="line"><span class="comment">            &#125;, 100);</span></span><br><span class="line"><span class="comment">        &#125;).then(</span></span><br><span class="line"><span class="comment">            value =&gt; &#123;</span></span><br><span class="line"><span class="comment">                console.log('onResolved1()1', value)</span></span><br><span class="line"><span class="comment">            &#125;,</span></span><br><span class="line"><span class="comment">            reason =&gt; &#123;</span></span><br><span class="line"><span class="comment">                console.log('onRejected1()2', reason)</span></span><br><span class="line"><span class="comment">                    // return 3</span></span><br><span class="line"><span class="comment">                    // throw 4</span></span><br><span class="line"><span class="comment">                return new Promise((resolve, reject) =&gt; reject(5))</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        ).then(</span></span><br><span class="line"><span class="comment">            value =&gt; &#123;</span></span><br><span class="line"><span class="comment">                console.log('onResolved2()1', value)</span></span><br><span class="line"><span class="comment">            &#125;,</span></span><br><span class="line"><span class="comment">            reason =&gt; &#123;</span></span><br><span class="line"><span class="comment">                console.log('onRejected2()2', reason)</span></span><br><span class="line"><span class="comment">                throw 6</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        ).catch(reason =&gt; &#123;</span></span><br><span class="line"><span class="comment">            console.log('onRejected3()', reason)</span></span><br><span class="line"><span class="comment">            return new Promise(() =&gt; &#123;&#125;) // 中断proimise链</span></span><br><span class="line"><span class="comment">        &#125;).then(</span></span><br><span class="line"><span class="comment">            value =&gt; &#123;</span></span><br><span class="line"><span class="comment">                console.log('onResolved4()1', value)</span></span><br><span class="line"><span class="comment">            &#125;,</span></span><br><span class="line"><span class="comment">            reason =&gt; &#123;</span></span><br><span class="line"><span class="comment">                console.log('onRejected4()2', reason)</span></span><br><span class="line"><span class="comment">                throw 6</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        )</span></span><br><span class="line"><span class="comment">    &lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p1 = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>) <span class="comment">// 如果是一般值, p1成功, value就是这个值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p2 = <span class="built_in">Promise</span>.resolve(<span class="built_in">Promise</span>.resolve(<span class="number">3</span>)) <span class="comment">// 如果是成功的promise, p2成功, value是这个promise的value</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p3 = <span class="built_in">Promise</span>.resolve(<span class="built_in">Promise</span>.reject(<span class="number">4</span>)) <span class="comment">// 如果是失败的promise, p3失败, reason是这个promise的reason</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// p1.then(value =&gt; &#123;console.log('p1', value)&#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// p2.then(value =&gt; &#123;console.log('p2', value)&#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// p3.catch(reason =&gt; &#123;console.log('p3', reason)&#125;)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// const p4 = new Promise((resolve) =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   setTimeout(() =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     resolve(5)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   &#125;, 1000);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p4 = <span class="built_in">Promise</span>.resolveDelay(<span class="number">5</span>, <span class="number">1000</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p5 = <span class="built_in">Promise</span>.reject(<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> pAll = <span class="built_in">Promise</span>.all([p4, <span class="number">7</span>, p1, p2])</span></span><br><span class="line">        pAll.then(</span><br><span class="line">            values =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'race onResolved()'</span>, values)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'race onRejected()'</span>, reason)</span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line"><span class="actionscript">        <span class="comment">// const pRace = Promise.race([p4, 7, p5, p2, p3])</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// pRace.then(</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   value =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//       console.log('race onResolved()', value)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   &#125;,</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   reason =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//       console.log('race onRejected()', reason)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// )</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p6 = <span class="built_in">Promise</span>.resolveDelay(<span class="number">66</span>, <span class="number">2000</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p7 = <span class="built_in">Promise</span>.rejectDelay(<span class="number">77</span>, <span class="number">3000</span>)</span></span><br><span class="line"><span class="javascript">        p6.then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'p6'</span>, value)</span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        p7.catch(<span class="function"><span class="params">reason</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'p7'</span>, reason)</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-async与await"><a href="#4-async与await" class="headerlink" title="4. async与await"></a>4. async与await</h4><pre><code>1. async 函数
    函数的返回值为promise对象
    promise对象的结果由async函数执行的返回值决定
2. await 表达式
    await右侧的表达式一般为promise对象, 但也可以是其它的值
    如果表达式是promise对象, await返回的是promise成功的值
    如果表达式是其它值, 直接将此值作为await的返回值
3. 注意:
    await必须写在async函数中, 但async函数中可以没有await
    如果await的promise失败了, 就会抛出异常, 需要通过try...catch来捕获处理</code></pre><h4 id="5-JS异步之宏队列与微队列"><a href="#5-JS异步之宏队列与微队列" class="headerlink" title="5. JS异步之宏队列与微队列"></a>5. JS异步之宏队列与微队列</h4><p><img src="http://vipkshttp1.wiz.cn/ks/share/resources/49c30824-dcdf-4bd0-af2a-708f490b44a1/92b8cbfb-a474-4859-943b-6048e9dc66f6/index_files/60b9ff398449db2dcfef9197e2187ae6.png" alt="宏队列与微队列"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 宏列队: 用来保存待执行的宏任务(回调), 比如: 定时器回调&#x2F;DOM事件回调&#x2F;ajax回调</span><br><span class="line">2. 微列队: 用来保存待执行的微任务(回调), 比如: promise的回调&#x2F;MutationObserver的回调</span><br><span class="line">3. JS执行时会区别这2个队列</span><br><span class="line">	JS引擎首先必须先执行所有的初始化同步任务代码</span><br><span class="line">	每次准备取出第一个宏任务执行前, 都要将所有的微任务一个一个取出来执行</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>promise</category>
      </categories>
  </entry>
  <entry>
    <title>promise(1)</title>
    <url>/2020/09/10/promise-1/</url>
    <content><![CDATA[<h4 id="1-1-函数对象与实例对象"><a href="#1-1-函数对象与实例对象" class="headerlink" title="1.1. 函数对象与实例对象"></a>1.1. 函数对象与实例对象</h4><pre><code>1. 函数对象: 将函数作为对象使用时, 简称为函数对象
2. 实例对象: new 函数产生的对象, 简称为对象</code></pre><h4 id="1-2-回调函数的分类"><a href="#1-2-回调函数的分类" class="headerlink" title="1.2. 回调函数的分类"></a>1.2. 回调函数的分类</h4><pre><code>1. 同步回调: 
    理解: 立即执行, 完全执行完了才结束, 不会放入回调队列中
    例子: 数组遍历相关的回调函数 / Promise的excutor函数
2. 异步回调: 
    理解: 不会立即执行, 会放入回调队列中将来执行
    例子: 定时器回调 / ajax回调 / Promise的成功|失败的回调</code></pre><h4 id="1-3-JS中的Error"><a href="#1-3-JS中的Error" class="headerlink" title="1.3. JS中的Error"></a>1.3. JS中的Error</h4><pre><code>1. 错误的类型
    Error: 所有错误的父类型
    ReferenceError: 引用的变量不存在
    TypeError: 数据类型不正确的错误
    RangeError: 数据值不在其所允许的范围内
    SyntaxError: 语法错误
2. 错误处理
    捕获错误: try ... catch
    // try {
      //   let d
          //   console.log(d.xxx)
          // } catch (error) {
      //   console.log(error.message)
      //   console.log(error.stack)
      // }
      // console.log(&apos;出错之后&apos;)
      抛出错误: throw error
      function something() {
    if (Date.now()%2===1) {
      console.log(&apos;当前时间为奇数, 可以执行任务&apos;)
    } else { // 如果时间是偶数抛出异常, 由调用来处理
      throw new Error(&apos;当前时间为偶数无法执行任务&apos;)  
    }
      }
        // 捕获处理异常
      try {
        something()
      } catch (error) {
           alert(error.message)
      }
3. 错误对象
    message属性: 错误相关信息
    stack属性: 函数调用栈记录信息</code></pre><h4 id="2-1-Promise是什么"><a href="#2-1-Promise是什么" class="headerlink" title="2.1. Promise是什么?"></a>2.1. Promise是什么?</h4><pre><code>1.抽象表达: 
    Promise是JS中进行异步编程的新的解决方案(旧的是谁?)
2.具体表达:
    从语法上来说: Promise是一个构造函数
    从功能上来说: promise对象用来封装一个异步操作并可以获取其结果
3. promise的状态改变(只有2种, 只能改变一次)
    pending变为resolved  成功的数据一般称为value
    pending变为rejected  失败的数据一般称为reason
4. promise的基本流程</code></pre><p><img src="http://vipkshttp1.wiz.cn/ks/share/resources/49c30824-dcdf-4bd0-af2a-708f490b44a1/92b8cbfb-a474-4859-943b-6048e9dc66f6/index_files/9b2b980e2959c4f996cafddb03fa5d4d.png" alt="promise基本流程"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>promise基本使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 1. 创建一个新的promise对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123; <span class="comment">// 执行器函数  同步回调</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'执行 excutor'</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 2. 执行异步操作任务</span></span></span><br><span class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> time = <span class="built_in">Date</span>.now() <span class="comment">// 如果当前时间是偶数就代表成功, 否则代表失败</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 3.1. 如果成功了, 调用resolve(value)</span></span></span><br><span class="line">                if (time % 2 == 0) &#123;</span><br><span class="line"><span class="actionscript">                    resolve(<span class="string">'成功的数据, time='</span> + time)</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 3.2. 如果失败了, 调用reject(reason)</span></span></span><br><span class="line"><span class="actionscript">                    reject(<span class="string">'失败的数据, time='</span> + time)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, 1000);</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'new Promise()之后'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// setTimeout(() =&gt; &#123;</span></span></span><br><span class="line">        p.then(</span><br><span class="line"><span class="actionscript">                value =&gt; &#123; <span class="comment">// 接收得到成功的value数据    onResolved</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'成功的回调'</span>, value)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                reason =&gt; &#123; <span class="comment">// 接收得到失败的reason数据  onRejected</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'失败的回调'</span>, reason)</span></span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-为什么要用Promise"><a href="#2-2-为什么要用Promise" class="headerlink" title="2.2. 为什么要用Promise?"></a>2.2. 为什么要用Promise?</h4><pre><code>1. 指定回调函数的方式更加灵活: 可以在请求发出甚至结束后指定回调函数
旧的: 必须在启动异步任务前指定
promise: 启动异步任务 =&gt; 返回promie对象 =&gt; 给promise对象绑定回调函数(甚至可以在异步任务结束后指定)
2. 支持链式调用, 可以解决回调地狱问题
什么是回调地狱? 回调函数嵌套调用, 外部回调函数异步执行的结果是嵌套的回调函数执行的条件
回调地狱的缺点?  不便于阅读 / 不便于异常处理
解决方案? promise链式调用
终极解决方案? async/await</code></pre><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">/*  回调地狱 伪代码*/</span></span></span><br><span class="line"><span class="actionscript">      doSomething(<span class="function"><span class="keyword">function</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        doSomethingElse(result, <span class="function"><span class="keyword">function</span><span class="params">(newResult)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          doThirdThing(newResult, <span class="function"><span class="keyword">function</span><span class="params">(finalResult)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'Got the final result: '</span> + finalResult)</span></span><br><span class="line">          &#125;, failureCallback)</span><br><span class="line">        &#125;, failureCallback)</span><br><span class="line">      &#125;, failureCallback)</span><br><span class="line"><span class="actionscript">      <span class="comment">/* 使用promise的链式调用解决回调地狱 */</span></span></span><br><span class="line">      doSomething()</span><br><span class="line"><span class="actionscript">      .then(<span class="function"><span class="keyword">function</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> doSomethingElse(result)</span></span><br><span class="line">      &#125;)</span><br><span class="line"><span class="actionscript">      .then(<span class="function"><span class="keyword">function</span><span class="params">(newResult)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> doThirdThing(newResult)</span></span><br><span class="line">      &#125;)</span><br><span class="line"><span class="actionscript">      .then(<span class="function"><span class="keyword">function</span><span class="params">(finalResult)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'Got the final result: '</span> + finalResult)</span></span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(failureCallback)</span><br><span class="line"><span class="actionscript">      <span class="comment">/*  async/await: 回调地狱的终极解决方案 */</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> result = <span class="keyword">await</span> doSomething()</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> newResult = <span class="keyword">await</span> doSomethingElse(result)</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> finalResult = <span class="keyword">await</span> doThirdThing(newResult)</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'Got the final result: '</span> + finalResult)</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line">          failureCallback(error)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-如何使用Promise"><a href="#2-3-如何使用Promise" class="headerlink" title="2.3. 如何使用Promise?"></a>2.3. 如何使用Promise?</h4><pre><code>1. 主要API
 Promise构造函数: Promise (excutor){}
 Promise.prototype.then方法: (onResolved, onRejected)=&gt;{} 指定用于得到成功value的成功回调和用于得到失败reason的失败回调,返回一个新的promise对象
 Promise.prototype.catch方法:(onRejected)=&gt;{}then()的语法糖,相当于:then(undefined, onRejected)
 Promise.resolve方法: (value)=&gt;{} value: 成功的数据或promise对象。返回一个成功/失败的promise对象
 Promise.reject方法: (reason)=&gt;{} 返回一个失败的promise对象
 Promise.all方法: (promises)=&gt;{} promises:包含n个promise的数组  返回一个新的promise, 只有所有的             promise都成功才成功, 只要有一个失败了就直接失败
 Promise.race方法: (promises)=&gt;{} promises:包含n个promise的数组  返回一个新的promise, 第一个完成的     promise的结果状态就是最终的结果状态</code></pre><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>API<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// resolve('成功的数据')</span></span></span><br><span class="line"><span class="actionscript">                reject(<span class="string">'失败的数据'</span>)</span></span><br><span class="line">            &#125;, 1000)</span><br><span class="line">        &#125;).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved()1'</span>, value)</span></span><br><span class="line">            &#125;</span><br><span class="line">        ).catch(</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onRejected()1'</span>, reason)</span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line"><span class="actionscript">        <span class="comment">// 产生一个成功值为1的promise对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">                resolve(1)</span><br><span class="line">            &#125;, 100);</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p2 = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p3 = <span class="built_in">Promise</span>.reject(<span class="number">3</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//p1.then(value =&gt; &#123;console.log(value)&#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//p2.then(value =&gt; &#123;console.log(value)&#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// p3.then(null,reason =&gt; &#123;console.log(reason)&#125;)/p3.catch(reason =&gt; &#123;console.log(reason)&#125;)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// const pAll = Promise.all([p1, p2, p3])</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> pAll = <span class="built_in">Promise</span>.all([p1, p2])</span></span><br><span class="line">        pAll.then(</span><br><span class="line">            values =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'all onResolved()'</span>, values)<span class="comment">//[1,2]</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'all onRejected()'</span>, reason)</span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> pRace = <span class="built_in">Promise</span>.race([p1, p2, p3])</span></span><br><span class="line">        pRace.then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'race onResolved()'</span>, value)<span class="comment">//1 延迟后就是2 需要看哪一个先完成</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'race onRejected()'</span>, reason)</span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. 几个重要问题</span><br><span class="line">(1)何改变promise的状态?</span><br><span class="line">    (1)resolve(value): 如果当前是pendding就会变为resolved</span><br><span class="line">    (2)reject(reason): 如果当前是pendding就会变为rejected</span><br><span class="line">    (3)抛出异常: 如果当前是pendding就会变为rejected</span><br><span class="line">(2)一个promise指定多个成功&#x2F;失败回调函数, 都会调用吗?</span><br><span class="line">		当promise改变为对应状态时都会调用</span><br><span class="line">(3)promise.then()返回的新promise的结果状态由什么决定?</span><br><span class="line">		(1)简单表达: 由then()指定的回调函数执行的结果决定                                                                                                                                                                     		 (2)详细表达:                                                                                                                                                                           				①如果抛出异常, 新promise变为rejected, reason为抛出的异常                                                                                                                                                                               				②如果返回的是非promise的任意值, 新promise变为resolved, value为返回的值                                                                                                                                                                                				 ③如果返回的是另一个新promise, 此promise的结果就会成为新promise的结果 </span><br><span class="line">(4)改变promise状态和指定回调函数谁先谁后?</span><br><span class="line">		(1)都有可能, 正常情况下是先指定回调再改变状态, 但也可以先改状态再指定回调</span><br><span class="line">		(2)如何先改状态再指定回调?</span><br><span class="line">  			①在执行器中直接调用resolve()&#x2F;reject()</span><br><span class="line">   			②延迟更长时间才调用then()</span><br><span class="line">		(3)什么时候才能得到数据?</span><br><span class="line">   			①如果先指定的回调, 那当状态发生改变时, 回调函数就会调用, 得到数据</span><br><span class="line">   			②如果先改变的状态, 那当指定回调时, 回调函数就会调用, 得到数据</span><br><span class="line">(5)promise如何串连多个操作任务?</span><br><span class="line">		(1)promise的then()返回一个新的promise, 可以开成then()的链式调用</span><br><span class="line">    (2)通过then的链式调用串连多个同步&#x2F;异步任务</span><br><span class="line">(6)promise异常传(穿)透?</span><br><span class="line">		(1)当使用promise的then链式调用时, 可以在最后指定失败的回调, </span><br><span class="line">    (2)前面任何操作出了异常, 都会传到最后失败的回调中处理</span><br><span class="line">(7)中断promise链</span><br><span class="line">		(1)当使用promise的then链式调用时, 在中间中断, 不再调用后面的回调函数</span><br><span class="line">    (2)办法: 在回调函数中返回一个pendding状态的promise对象</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>promise关键问题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//(3)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line">            resolve(1)</span><br><span class="line"><span class="actionscript">                <span class="comment">// reject(1)</span></span></span><br><span class="line">        &#125;).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved1()1'</span>, value) <span class="comment">//根据上面是否返回值来决定 1</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// return 2</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// return Promise.resolve(3)</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// return Promise.reject(4)</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">throw</span> <span class="number">5</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onRejected1()2'</span>, reason)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// return 2</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// return Promise.resolve(3)</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// return Promise.reject(4)</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// throw 5</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        ).then(</span><br><span class="line"><span class="actionscript">            value =&gt; &#123; <span class="comment">//根据上面是否返回值来决定</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved2()1'</span>, value)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onRejected2()2'</span>, reason) <span class="comment">//5</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line"><span class="actionscript">      <span class="comment">//-----------------------------</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//(5)</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"执行任务1(异步)"</span>)</span></span><br><span class="line">                resolve(1)</span><br><span class="line">            &#125;, 1000);</span><br><span class="line">        &#125;).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'任务1的结果: '</span>, value)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'执行任务2(同步)'</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="number">2</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        ).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'任务2的结果:'</span>, value)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 启动任务3(异步) 需要返回一个新的promise</span></span></span><br><span class="line"><span class="javascript">                    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'执行任务3(异步))'</span>)</span></span><br><span class="line">                        resolve(3)</span><br><span class="line">                    &#125;, 1000);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        ).then(</span><br><span class="line"><span class="actionscript">            value =&gt; &#123; <span class="comment">//等待1秒执行异步</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'任务3的结果: '</span>, value)</span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line"><span class="actionscript">      <span class="comment">//(6)(7)----------------</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// resolve(1)</span></span></span><br><span class="line">            reject(1)</span><br><span class="line">        &#125;).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved1()'</span>, value)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="number">2</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">// reason =&gt; &#123;throw reason&#125;</span></span></span><br><span class="line">        ).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved2()'</span>, value)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="number">3</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">throw</span> reason</span></span><br><span class="line">            &#125;</span><br><span class="line">        ).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved3()'</span>, value)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">// reason =&gt; &#123;throw reason&#125;</span></span></span><br><span class="line"><span class="javascript">            reason =&gt; <span class="built_in">Promise</span>.reject(reason)</span></span><br><span class="line"><span class="javascript">        ).catch(<span class="function"><span class="params">reason</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'onReejected1()'</span>, reason)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// throw reason</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// reason =&gt; Promise.reject(reason)</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;) <span class="comment">// 返回一个pending的promise  中断promise链</span></span></span><br><span class="line">        &#125;).then(</span><br><span class="line">            value =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onResolved3()'</span>, value)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            reason =&gt; &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'onReejected2()'</span>, reason)</span></span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web</category>
        <category>promise</category>
      </categories>
  </entry>
  <entry>
    <title>axios(2)</title>
    <url>/2020/09/04/axios-2/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios.create()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/axios/0.19.0/axios.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    axios.defaults.baseURL = <span class="string">'http://localhost:3000'</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用axios发请求</span></span></span><br><span class="line">    axios(&#123;</span><br><span class="line"><span class="actionscript">      url: <span class="string">'/posts'</span> <span class="comment">// 请求3000</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">// axios(&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   url: '/xxx' // 请求4000</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> instance = axios.create(&#123;</span></span><br><span class="line"><span class="actionscript">      baseURL: <span class="string">'http://localhost:4000'</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用instance发请求</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// instance(&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   url: '/xxx'  // 请求4000</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">    instance.get(<span class="string">'/xxx'</span>)</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios的处理链流程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/axios/0.19.0/axios.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加请求拦截器(回调函数)</span></span></span><br><span class="line">    axios.interceptors.request.use(</span><br><span class="line">      config =&gt; &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'request interceptor1 onResolved()'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> config</span></span><br><span class="line">      &#125;,</span><br><span class="line">      error =&gt; &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'request interceptor1 onRejected()'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span></span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    axios.interceptors.request.use(</span><br><span class="line">      config =&gt; &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'request interceptor2 onResolved()'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> config</span></span><br><span class="line">      &#125;,</span><br><span class="line">      error =&gt; &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'request interceptor2 onRejected()'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span></span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加响应拦截器</span></span></span><br><span class="line">    axios.interceptors.response.use(</span><br><span class="line">      response =&gt; &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'response interceptor1 onResolved()'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> response</span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="params">(error)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'response interceptor1 onRejected()'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span></span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    axios.interceptors.response.use(</span><br><span class="line">      response =&gt; &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'response interceptor2 onResolved()'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> response</span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="params">(error)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'response interceptor2 onRejected()'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span></span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line"><span class="actionscript">    axios.get(<span class="string">'http://localhost:3000/posts'</span>)</span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'data'</span>, response.data)</span></span><br><span class="line">      &#125;)</span><br><span class="line"><span class="javascript">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'error'</span>, error.message)</span></span><br><span class="line">      &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>取消请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"getProducts1()"</span>&gt;</span>获取商品列表1<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"getProducts2()"</span>&gt;</span>获取商品列表2<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"cancelReq()"</span>&gt;</span>取消请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/axios/0.19.0/axios.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加请求拦截器</span></span></span><br><span class="line"><span class="javascript">    axios.interceptors.request.use(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 在准备发请求前, 取消未完成的请求</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (<span class="keyword">typeof</span> cancel===<span class="string">'function'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">          cancel(<span class="string">'取消请求'</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 添加一个cancelToken的配置</span></span></span><br><span class="line"><span class="javascript">      config.cancelToken = <span class="keyword">new</span> axios.CancelToken(<span class="function">(<span class="params">c</span>) =&gt;</span> &#123; <span class="comment">// c是用于取消当前请求的函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 保存取消函数, 用于之后可能需要取消当前请求</span></span></span><br><span class="line">        cancel = c</span><br><span class="line">      &#125;)</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> config</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加响应拦截器</span></span></span><br><span class="line">    axios.interceptors.response.use(</span><br><span class="line">      response =&gt; &#123;</span><br><span class="line"><span class="actionscript">        cancel = <span class="literal">null</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> response</span></span><br><span class="line">      &#125;,</span><br><span class="line">      error =&gt; &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (axios.isCancel(error)) &#123;<span class="comment">// 取消请求的错误</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// cancel = null</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'请求取消的错误'</span>, error.message) <span class="comment">// 做相应处理</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 中断promise链接</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;)</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 请求出错了</span></span></span><br><span class="line"><span class="actionscript">          cancel = <span class="literal">null</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 将错误向下传递</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// throw error</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> cancel  <span class="comment">// 用于保存取消请求的函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getProducts1</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      axios(&#123;</span><br><span class="line"><span class="actionscript">        url: <span class="string">'http://localhost:4000/products1'</span>,</span></span><br><span class="line">      &#125;).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'请求1成功了'</span>, response.data)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        error =&gt; &#123;<span class="comment">// 只用处理请求失败的情况, 取消请求的错误的不用</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'请求1失败了'</span>, error.message)          </span></span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getProducts2</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      axios(&#123;</span><br><span class="line"><span class="actionscript">        url: <span class="string">'http://localhost:4000/products2'</span>,</span></span><br><span class="line">      &#125;).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'请求2成功了'</span>, response.data)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'请求2失败了'</span>, error.message)</span></span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">cancelReq</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// alert('取消请求')</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 执行取消请求的函数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (<span class="keyword">typeof</span> cancel === <span class="string">'function'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">        cancel(<span class="string">'强制取消请求'</span>)</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'没有可取消的请求'</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">'cors'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="comment">// 使用cors, 允许跨域</span></span><br><span class="line">app.use(cors())</span><br><span class="line">    <span class="comment">// 能解析urlencode格式的post请求体参数</span></span><br><span class="line">app.use(express.urlencoded())</span><br><span class="line">    <span class="comment">// 能解析json格式的请求体参数</span></span><br><span class="line">app.use(express.json())</span><br><span class="line">app.get(<span class="string">'/products1'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        res.send([</span><br><span class="line">            &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">'product1.1'</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">'product1.2'</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">'product1.3'</span> &#125;</span><br><span class="line">        ])</span><br><span class="line">    &#125;, <span class="number">1000</span> + <span class="built_in">Math</span>.random() * <span class="number">2000</span>);</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/products2'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        res.send([&#123;</span><br><span class="line">                id: <span class="number">1</span>,</span><br><span class="line">                name: <span class="string">'product2.1'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: <span class="number">2</span>,</span><br><span class="line">                name: <span class="string">'product2.2'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: <span class="number">3</span>,</span><br><span class="line">                name: <span class="string">'product2.3'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ])</span><br><span class="line">    &#125;, <span class="number">1000</span> + <span class="built_in">Math</span>.random() * <span class="number">2000</span>);</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">4000</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'server app start on port 4000'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Web</category>
        <category>axios</category>
      </categories>
  </entry>
  <entry>
    <title>axios(1)</title>
    <url>/2020/09/04/axios-1/</url>
    <content><![CDATA[<h4 id="PdeP6P"><a href="#PdeP6P" class="headerlink" title="PdeP6P"></a><strong>PdeP6P</strong></h4><p>sudo npm install -g json-server</p>
<p>json-server –watch db.json</p>
<ol>
<li><p>HTTP请求交互的基本过程<br> 1). 前后应用从浏览器端向服务器发送HTTP请求(请求报文)<br> 2). 后台服务器接收到请求后, 调度服务器应用处理请求, 向浏览器端返回HTTP响应(响应报文)<br> 3). 浏览器端接收到响应, 解析显示响应体/调用监视回调</p>
</li>
<li><p>HTTP请求报文<br> 1). 请求行:</p>
<pre><code>method url
GET /product_detail?id=2
POST /login </code></pre><p> 2). headers: 多个请求头</p>
<pre><code>Host: www.baidu.com
Cookie: BAIDUID=AD3B0FA706E; BIDUPSID=AD3B0FA706;
Content-Type: application/x-www-form-urlencoded 或者 application/json</code></pre><p> 3). body: 请求体</p>
<pre><code>username=tom&amp;pwd=123
{&quot;username&quot;: &quot;tom&quot;, &quot;pwd&quot;: 123}</code></pre></li>
<li><p>HTTP响应报文<br> 1). 响应状态码: 200/404<br> 2). 多个响应头</p>
<pre><code>Content-Type: text/html;charset=utf-8
Set-Cookie: BD_CK_SAM=1;path=/</code></pre><p> 3). 响应体</p>
<pre><code>html文本/json文本/js/css/图片...</code></pre></li>
<li><p>post请求体参数格式<br> 1). Content-Type: application/x-www-form-urlencoded;charset=utf-8</p>
<pre><code>用于键值对参数，参数的键值用=连接, 参数之间用&amp;连接
例如: name=%E5%B0%8F%E6%98%8E&amp;age=12</code></pre><p> 2). Content-Type: application/json;charset=utf-8</p>
<pre><code>用于json字符串参数
例如: {&quot;name&quot;: &quot;%E5%B0%8F%E6%98%8E&quot;, &quot;age&quot;: 12}</code></pre><p> 3). Content-Type: multipart/form-data</p>
<pre><code>用于文件上传请求</code></pre></li>
<li><p>常见响应状态码<br> 200     OK                     请求成功。一般用于GET与POST请求<br> 201  Created                已创建。成功请求并创建了新的资源<br> 401  Unauthorized           未授权/请求要求用户的身份认证<br> 404  Not Found              服务器无法根据客户端的请求找到资源<br> 500  Internal Server Error  服务器内部错误，无法完成请求</p>
</li>
<li><p>不同类型的请求及其作用<br> 1). GET: 从服务器端读取数据<br> 2). POST: 向服务器端添加新数据<br> 3). PUT: 更新服务器端已经数据<br> 4). DELETE: 删除服务器端数据</p>
</li>
<li><p>API的分类<br> 1). REST API:    restful</p>
<pre><code>发送请求进行CRUD哪个操作由请求方式来决定
同一个请求路径可以进行多个操作
请求方式会用到GET/POST/PUT/DELETE</code></pre><p> 2). 非REST API:   restless</p>
<pre><code>请求方式不决定请求的CRUD操作
一个请求路径只对应一个操作
一般只有GET/POST</code></pre></li>
<li><p>理解XHR<br> 使用XMLHttpRequest (XHR)对象可以与服务器交互, 也就是发送ajax请求<br> 前端可以获取到数据，而无需让整个的页面刷新。<br> 这使得Web页面可以只更新页面的局部，而不影响用户的操作。</p>
</li>
<li><p>区别ajax请求与一般HTTP请求<br> ajax请求是一种特别的http请求: 只有通过XHR/fetch发送的是ajax请求, 其它都是一般HTTP请求<br> 对服务器端来说, 没有任何区别, 区别在浏览器端<br> 浏览器端发请求: 只有XHR或fetch发出的才是ajax请求, 其它所有的都是非ajax请求<br> 浏览器端接收到响应</p>
<pre><code>一般请求: 浏览器一般会直接显示响应体数据, 也就是我们常说的刷新/跳转页面
ajax请求: 浏览器不会对界面进行任何更新操作, 只是调用监视的回调函数并传入响应相关数据</code></pre></li>
<li><p>使用XHR封装一个发ajax请求的通用函数<br>函数的返回值为promise, 成功的结果为response, 异常的结果为error<br>能处理多种类型的请求: GET/POST/PUT/DELETE<br>函数的参数为一个配置对象: url/method/params/data<br>响应json数据自动解析为了js</p>
</li>
<li><p>1.1 axios的特点<br>基于promise的封装XHR的异步ajax请求库<br>浏览器端/node端都可以使用<br>支持请求／响应拦截器<br>支持请求取消<br>请求/响应数据转换<br>批量发送多个请求<br>1.2 XHR使用语法<br>XMLHttpRequest(): 创建XHR对象的构造函数<br>status: 响应状态码值, 比如200, 404<br>statusText: 响应状态文本<br>readyState: 标识请求状态的只读属性</p>
<pre><code>0: 初始
1: open()之后
2: send()之后
3: 请求中
4: 请求完成</code></pre><p>onreadystatechange: 绑定readyState改变的监听<br>responseType: 指定响应数据类型, 如果是’json’, 得到响应后自动解析响应体数据<br>response: 响应体数据, 类型取决于responseType的指定<br>timeout: 指定请求超时时间, 默认为0代表没有限制<br>ontimeout: 绑定超时的监听<br>onerror: 绑定请求网络错误的监听<br>open(): 初始化一个请求, 参数为: (method, url[, async])<br>send(data): 发送请求<br>abort(): 中断请求<br>getResponseHeader(name): 获取指定名称的响应头值<br>getAllResponseHeaders(): 获取所有响应头组成的字符串<br>setRequestHeader(name, value): 设置请求头</p>
</li>
<li><p>axios常用语法<br>axios(config): 通用/最本质的发任意类型请求的方式<br>axios(url[, config]): 可以只指定url发get请求<br>axios.request(config): 等同于axios(config)<br>axios.get(url[, config]): 发get请求<br>axios.delete(url[, config]): 发delete请求<br>axios.post(url[, data, config]): 发post请求<br>axios.put(url[, data, config]): 发put请求<br>axios.defaults.xxx: 请求的默认全局配置<br>axios.interceptors.request.use(): 添加请求拦截器<br>axios.interceptors.response.use(): 添加响应拦截器<br>axios.create([config]): 创建一个新的axios(它没有下面的功能)<br>axios.Cancel(): 用于创建取消请求的错误对象<br>axios.CancelToken(): 用于创建取消请求的token对象<br>axios.isCancel(): 是否是一个取消请求的错误<br>axios.all(promises): 用于批量执行多个异步请求<br>axios.spread(): 用来指定接收所有成功数据的回调函数的方法</p>
</li>
<li><p>难点语法理解与使用<br>1). axios.create(config) </p>
<pre><code>a. 根据指定配置创建一个新的axios, 也就就每个新axios都有自己的配置
b. 新axios只是没有取消请求和批量发请求的方法, 其它所有语法都是一致的
c. 为什么要设计这个语法?
    需求: 项目中有部分接口需要的配置与另一部分接口需要的配置不太一样, 如何处理
    解决: 创建2个新axios, 每个都有自己特有的配置, 分别应用到不同要求的接口请求中</code></pre><p>2). 拦截器函数/ajax请求/请求的回调函数的调用顺序</p>
<pre><code>a. 说明: 调用axios()并不是立即发送ajax请求, 而是需要经历一个较长的流程
b. 流程: 请求拦截器2 =&gt; 请求拦截器1 =&gt; 发ajax请求 =&gt; 响应拦截器1 =&gt; 响应拦截器2 =&gt; 请求的回调
c. 注意: 此流程是通过promise串连起来的, 请求拦截器传递的是config, 响应拦截器传递的是response错误流程控制与错误处理</code></pre><p>3). 取消请求</p>
<pre><code>a. 基本流程: 
    配置cancelToken对象
    缓存用于取消请求的cancel函数
    在后面特定时机调用cancel函数取消请求
    在错误回调中判断如果error是cancel, 做相应处理
b. 实现功能
    点击按钮, 取消某个正在请求中的请求
    在请求一个接口前, 取消前面一个未完成的请求</code></pre></li>
<li><p>源码难点与流程分析</p>
<ol>
<li><p>axios与Axios的关系<br> axios函数对应的是Axios.prototype.request方法通过bind(Axiox的实例)产生的函数<br> axios有Axios原型上的所有发特定类型请求的方法: get()/post()/put()/delete()<br> axios有Axios的实例上的所有属性: defaults/interceptors<br> 后面又添加了create()/CancelToken()/all() </p>
<ol start="2">
<li><p>axios.create()返回的对象(instance)与axios的区别</p>
<p>1). 相同:<br>  都是一个能发任意请求的函数: request(config)<br>  都有发特定请求的各种方法: get()/post()/put()/delete()<br>  都有默认配置和拦截器的属性: defaults/interceptors<br>2). 不同:<br>  默认匹配的值不一样<br>  instance没有axios后面添加的一些方法: create()/CancelToken()/all()</p>
</li>
</ol>
</li>
</ol>
</li>
<li><p>axios发请求的流程</p>
<pre><code>1). 整体流程: request(config)  ===&gt; dispatchRequest(config) ===&gt; xhrAdapter(config)
2). request(config): 将请求拦截器 / dispatchRequest() / 响应拦截器 通过promise链串连起来, 返回promise
3). dispatchRequest(config): 转换请求数据 ===&gt; 调用xhrAdapter()发请求 ===&gt; 请求返回后转换响应数据. 返回promise
4). xhrAdapter(config): 创建XHR对象, 根据config进行相应设置, 发送特定请求, 并接收响应数据, 返回promise </code></pre><p><img src="http://vipkshttp1.wiz.cn/ks/share/resources/49c30824-dcdf-4bd0-af2a-708f490b44a1/584701e2-1d9b-4523-b9b2-0f33e838dd7f/index_files/e5692e36861bd1d2fa1735c5ab801af7.png" alt=""></p>
</li>
</ol>
<ol start="16">
<li>axios的请求/响应拦截器是什么?<pre><code>1). 请求拦截器: 在真正发请求前, 可以对请求进行检查或配置进行特定处理的函数, 
           包括成功/失败的函数, 传递的必须是config
2). 响应拦截器: 在请求返回后, 可以对响应数据进行特定处理的函数,
           包括成功/失败的函数, 传递的默认是response</code></pre><img src="http://vipkshttp1.wiz.cn/ks/share/resources/49c30824-dcdf-4bd0-af2a-708f490b44a1/584701e2-1d9b-4523-b9b2-0f33e838dd7f/index_files/b0f95169782409e7576bc9704b93b693.png" alt=""></li>
<li>axios的请求/响应数据转换器是什么?<pre><code>1). 请求转换器: 对请求头和请求体数据进行特定处理的函数
    setContentTypeIfUnset(headers, &apos;application/json;charset=utf-8&apos;);
    return JSON.stringify(data)
2). 响应转换器: 将响应体json字符串解析为js对象或数组的函数
    response.data = JSON.parse(response.data)</code></pre></li>
<li>response的整体结构<pre><code>{        data,
    status,
    statusText,
    headers,
    config,
    request
}</code></pre></li>
<li>error的整体结构<pre><code>{        message,
    request,
    response
}</code></pre></li>
<li>如何取消未完成的请求<pre><code>1).当配置了cancelToken对象时, 保存cancel函数
    创建一个用于将来中断请求的cancelPromise
    并定义了一个用于取消请求的cancel函数
    将cancel函数传递出来
2.调用cancel()取消请求
    执行cacel函数, 传入错误信息message
    内部会让cancelPromise变为成功, 且成功的值为一个Cancel对象
 在cancelPromise的成功回调中中断请求, 并让发请求的proimse失败, 失败的reason为Cacel对象</code></pre></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>使用XHR封装ajax请求参数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"testGet()"</span>&gt;</span>发送GET请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"testPost()"</span>&gt;</span>发送POST请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"testPut()"</span>&gt;</span>发送PUT请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"testDelete()"</span>&gt;</span>发送Delete请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">/* 1. GET请求: 从服务器端获取数据*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">testGet</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      axios(&#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// url: 'http://localhost:3000/posts',</span></span></span><br><span class="line"><span class="actionscript">        url: <span class="string">'http://localhost:3000/posts2'</span>,</span></span><br><span class="line"><span class="actionscript">        method: <span class="string">'GET'</span>,</span></span><br><span class="line">        params: &#123;</span><br><span class="line">          id: 1,</span><br><span class="line"><span class="actionscript">          xxx: <span class="string">'abc'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(response)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error =&gt; &#123;</span><br><span class="line">          alert(error.message)</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">/* 2. POST请求: 服务器端保存数据*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">testPost</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      axios(&#123;</span><br><span class="line"><span class="actionscript">        url: <span class="string">'http://localhost:3000/posts'</span>,</span></span><br><span class="line"><span class="actionscript">        method: <span class="string">'POST'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">"title"</span>: <span class="string">"json-server---"</span>, </span></span><br><span class="line"><span class="actionscript">          <span class="string">"author"</span>: <span class="string">"typicode---"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(response)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error =&gt; &#123;</span><br><span class="line">          alert(error.message)</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">/* 3. PUT请求: 服务器端更新数据*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">testPut</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      axios(&#123;</span><br><span class="line"><span class="actionscript">        url: <span class="string">'http://localhost:3000/posts/1'</span>,</span></span><br><span class="line"><span class="actionscript">        method: <span class="string">'put'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">"title"</span>: <span class="string">"json-server+++"</span>, </span></span><br><span class="line"><span class="actionscript">          <span class="string">"author"</span>: <span class="string">"typicode+++"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(response)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error =&gt; &#123;</span><br><span class="line">          alert(error.message)</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">/* 2. DELETE请求: 服务器端删除数据*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">testDelete</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      axios(&#123;</span><br><span class="line"><span class="actionscript">        url: <span class="string">'http://localhost:3000/posts/2'</span>,</span></span><br><span class="line"><span class="actionscript">        method: <span class="string">'delete'</span></span></span><br><span class="line">      &#125;).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(response)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error =&gt; &#123;</span><br><span class="line">          alert(error.message)</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">    /* </span><br><span class="line">    1.函数的返回值为promise, 成功的结果为response, 失败的结果为error</span><br><span class="line">    2.能处理多种类型的请求: GET/POST/PUT/DELETE</span><br><span class="line">    3.函数的参数为一个配置对象</span><br><span class="line">      &#123;</span><br><span class="line"><span class="actionscript">        url: <span class="string">''</span>,   <span class="comment">// 请求地址</span></span></span><br><span class="line"><span class="actionscript">        method: <span class="string">''</span>,   <span class="comment">// 请求方式GET/POST/PUT/DELETE</span></span></span><br><span class="line"><span class="actionscript">        params: &#123;&#125;,  <span class="comment">// GET/DELETE请求的query参数</span></span></span><br><span class="line"><span class="actionscript">        data: &#123;&#125;, <span class="comment">// POST或DELETE请求的请求体参数 </span></span></span><br><span class="line">      &#125;</span><br><span class="line">    4.响应json数据自动解析为js的对象/数组</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">axios</span><span class="params">(&#123;</span></span></span></span><br><span class="line">      url,</span><br><span class="line"><span class="actionscript">      method=<span class="string">'GET'</span>,</span></span><br><span class="line">      params=&#123;&#125;,</span><br><span class="line">      data=&#123;&#125;</span><br><span class="line">    &#125;) &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回一个promise对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 处理method(转大写)</span></span></span><br><span class="line">        method = method.toUpperCase()</span><br><span class="line"><span class="actionscript">        <span class="comment">// 处理query参数(拼接到url上)   id=1&amp;xxx=abc</span></span></span><br><span class="line">        /* </span><br><span class="line">        &#123;</span><br><span class="line">          id: 1,</span><br><span class="line"><span class="actionscript">          xxx: <span class="string">'abc'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> queryString = <span class="string">''</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">Object</span>.keys(params).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">          queryString += <span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;params[key]&#125;</span>&amp;`</span></span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (queryString) &#123; <span class="comment">// id=1&amp;xxx=abc&amp;</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 去除最后的&amp;</span></span></span><br><span class="line">          queryString = queryString.substring(0, queryString.length-1)</span><br><span class="line"><span class="actionscript">          <span class="comment">// 接到url</span></span></span><br><span class="line"><span class="actionscript">          url += <span class="string">'?'</span> + queryString</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 1. 执行异步ajax请求</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 创建xhr对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> request = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 打开连接(初始化请求, 没有请求)</span></span></span><br><span class="line"><span class="actionscript">        request.open(method, url, <span class="literal">true</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (method===<span class="string">'GET'</span> || method===<span class="string">'DELETE'</span>) &#123;</span></span><br><span class="line">          request.send()</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method===<span class="string">'POST'</span> || method===<span class="string">'PUT'</span>)&#123;</span></span><br><span class="line"><span class="actionscript">          request.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json;charset=utf-8'</span>) <span class="comment">// 告诉服务器请求体的格式是json</span></span></span><br><span class="line"><span class="javascript">          request.send(<span class="built_in">JSON</span>.stringify(data)) <span class="comment">// 发送json格式请求体参数</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 绑定状态改变的监听</span></span></span><br><span class="line"><span class="actionscript">        request.onreadystatechange = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 如果请求没有完成, 直接结束</span></span></span><br><span class="line">          if (request.readyState!==4) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span></span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="actionscript">          <span class="comment">// 如果响应状态码在[200, 300)之间代表成功, 否则失败</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">const</span> &#123;status, statusText&#125; = request</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 2.1. 如果请求成功了, 调用resolve()</span></span></span><br><span class="line">          if (status&gt;=200 &amp;&amp; status&lt;=299) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 准备结果数据对象response</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> response = &#123;</span></span><br><span class="line"><span class="javascript">              data: <span class="built_in">JSON</span>.parse(request.response),</span></span><br><span class="line">              status,</span><br><span class="line">              statusText</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(response)</span><br><span class="line"><span class="actionscript">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// 2.2. 如果请求失败了, 调用reject()</span></span></span><br><span class="line"><span class="javascript">            reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'request error status is '</span> + status))</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>axios</category>
      </categories>
  </entry>
  <entry>
    <title>vue(8)</title>
    <url>/2020/09/01/vue-8/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--App.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;todo-container&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;todo-wrap&quot;&gt;</span><br><span class="line">      &lt;TodoHeader&#x2F;&gt;</span><br><span class="line">      &lt;TodoList&#x2F;&gt;</span><br><span class="line">      &lt;TodoFooter&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import TodoHeader from &#39;.&#x2F;components&#x2F;TodoHeader.vue&#39;</span><br><span class="line">  import TodoList from &#39;.&#x2F;components&#x2F;TodoList.vue&#39;</span><br><span class="line">  import TodoFooter from &#39;.&#x2F;components&#x2F;TodoFooter.vue&#39;</span><br><span class="line">  export default &#123;</span><br><span class="line">    mounted() &#123;</span><br><span class="line">      &#x2F;&#x2F;发送命令给action，异步获取保存todos数据并显示</span><br><span class="line">      this.$store.dispatch(&#39;reqtodos&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">      TodoHeader,</span><br><span class="line">      TodoList,</span><br><span class="line">      TodoFooter</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .todo-container &#123;</span><br><span class="line">    width: 600px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">  &#125;</span><br><span class="line">  .todo-container .todo-wrap &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--Header.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;todo-header&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;请输入你的任务名称，按回车键确认&quot; v-model&#x3D;&quot;inputTodo&quot; @keyup.enter&#x3D;&quot;add&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        inputTodo: &#39;&#39;  &#x2F;&#x2F; 不需要使用vuex管理(只有当前组件使用)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      add () &#123;</span><br><span class="line">        &#x2F;&#x2F; 得到输入的数据</span><br><span class="line">        const inputTodo &#x3D; this.inputTodo.trim()</span><br><span class="line">        &#x2F;&#x2F; 检查合法性</span><br><span class="line">        if(!inputTodo) &#123;</span><br><span class="line">          alert(&#39;必须输入&#39;)</span><br><span class="line">          return</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 封装一个todo对象</span><br><span class="line">        const todo &#x3D; &#123;</span><br><span class="line">          title: inputTodo,</span><br><span class="line">          complete: false</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 添加到todos中显示</span><br><span class="line">        &#x2F;&#x2F; this.addTodo(todo)</span><br><span class="line">        this.$store.dispatch(&#39;addTodo&#39;, todo)</span><br><span class="line">        &#x2F;&#x2F; 清除输入</span><br><span class="line">        this.inputTodo &#x3D; &#39;&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .todo-header input &#123;</span><br><span class="line">    width: 560px;</span><br><span class="line">    height: 28px;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    padding: 4px 7px;</span><br><span class="line">  &#125;</span><br><span class="line">  .todo-header input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">    border-color: rgba(82, 168, 236, 0.8);</span><br><span class="line">    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--List.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;ul class&#x3D;&quot;todo-main&quot;&gt;</span><br><span class="line">    &lt;TodoItem v-for&#x3D;&quot;(todo, index) in todos&quot; :key&#x3D;&quot;index&quot;</span><br><span class="line">              :todo&#x3D;&quot;todo&quot; :index&#x3D;&quot;index&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;ul&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123;mapState&#125; from &#39;vuex&#39;</span><br><span class="line">  import TodoItem from &#39;.&#x2F;TodoItem.vue&#39;</span><br><span class="line">  import storageUtils from &#39;..&#x2F;util&#x2F;storageUtil&#39;</span><br><span class="line">  export default &#123;</span><br><span class="line">    computed: &#123;</span><br><span class="line">      ...mapState([&#39;todos&#39;])</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      todos: &#123;</span><br><span class="line">        deep: true, &#x2F;&#x2F; 深度监视</span><br><span class="line">        handler: storageUtils.saveTodos,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">      TodoItem</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .todo-main &#123;</span><br><span class="line">    margin-left: 0px;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">    padding: 0px;</span><br><span class="line">  &#125;</span><br><span class="line">  .todo-empty &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">    padding-left: 5px;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--Item.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;li :style&#x3D;&quot;&#123;background: bgColor&#125;&quot; @mouseenter&#x3D;&quot;handleEnter(true)&quot; @mouseleave&#x3D;&quot;handleEnter(false)&quot;&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;todo.complete&quot;&#x2F;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123;todo.title&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;label&gt;</span><br><span class="line">    &lt;button class&#x3D;&quot;btn btn-danger&quot; v-show&#x3D;&quot;isShow&quot; @click&#x3D;&quot;deleteItem&quot;&gt;删除&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    props: &#123;&#x2F;&#x2F; 指定属性名和属性值的类型</span><br><span class="line">      todo: Object,</span><br><span class="line">      index: Number</span><br><span class="line">    &#125;,</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        bgColor: &#39;white&#39;,</span><br><span class="line">        isShow: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      handleEnter (isEnter) &#123;</span><br><span class="line">        if(isEnter) &#123; &#x2F;&#x2F; 进入</span><br><span class="line">          this.bgColor &#x3D; &#39;#cccccc&#39;</span><br><span class="line">          this.isShow &#x3D; true</span><br><span class="line">        &#125; else &#123; &#x2F;&#x2F; 离开</span><br><span class="line">          this.bgColor &#x3D; &#39;#ffffff&#39;</span><br><span class="line">          this.isShow &#x3D; false</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      deleteItem () &#123;</span><br><span class="line">        &#x2F;&#x2F; this.deleteTodo(this.index)</span><br><span class="line">        this.$store.dispatch(&#39;deleteTodo&#39;, this.index)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  li &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">    height: 36px;</span><br><span class="line">    line-height: 36px;</span><br><span class="line">    padding: 0 5px;</span><br><span class="line">    border-bottom: 1px solid #ddd;</span><br><span class="line">  &#125;</span><br><span class="line">  li label &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">  &#125;</span><br><span class="line">  li label li input &#123;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">    margin-right: 6px;</span><br><span class="line">    position: relative;</span><br><span class="line">    top: -1px;</span><br><span class="line">  &#125;</span><br><span class="line">  li button &#123;</span><br><span class="line">    float: right;</span><br><span class="line">    display: none;</span><br><span class="line">    margin-top: 3px;</span><br><span class="line">  &#125;</span><br><span class="line">  li:before &#123;</span><br><span class="line">    content: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  li:last-child &#123;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--Footer.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;todo-footer&quot;&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checkAll&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;label&gt;</span><br><span class="line">    &lt;span&gt;</span><br><span class="line">          &lt;span&gt;已完成&#123;&#123;completeSize&#125;&#125;&lt;&#x2F;span&gt; &#x2F; 全部&#123;&#123;totalSize&#125;&#125;</span><br><span class="line">        &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;button class&#x3D;&quot;btn btn-danger&quot; v-show&#x3D;&quot;completeSize&quot; @click&#x3D;&quot;deleteAllCompleted&quot;&gt;清除已完成任务&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123;mapGetters&#125; from &#39;vuex&#39;</span><br><span class="line">  export default &#123;</span><br><span class="line">    computed: &#123;</span><br><span class="line">      ...mapGetters([&#39;totalSize&#39;, &#39;completeSize&#39;]),</span><br><span class="line">      checkAll: &#123;</span><br><span class="line">        get () &#123; &#x2F;&#x2F; 决定是否勾选</span><br><span class="line">          return this.$store.getters.isAllSelect</span><br><span class="line">        &#125;,</span><br><span class="line">        set (value) &#123;&#x2F;&#x2F; 点击了全选checkbox  value是当前checkbox的选中状态(true&#x2F;false)</span><br><span class="line">          &#x2F;&#x2F; this.selectAll(value)</span><br><span class="line">          this.$store.dispatch(&#39;selectAll&#39;, value)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      deleteAllCompleted () &#123;</span><br><span class="line">        if(window.confirm(&#39;确定清除已完成的吗?&#39;)) &#123;</span><br><span class="line">          &#x2F;&#x2F; this.deleteCompleteTodos()</span><br><span class="line">          this.$store.dispatch(&#39;deleteCompleteTodos&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .todo-footer &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    padding-left: 6px;</span><br><span class="line">    margin-top: 5px;</span><br><span class="line">  &#125;</span><br><span class="line">  .todo-footer label &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin-right: 20px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">  &#125;</span><br><span class="line">  .todo-footer label input &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    top: -1px;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">    margin-right: 5px;</span><br><span class="line">  &#125;</span><br><span class="line">  .todo-footer button &#123;</span><br><span class="line">    float: right;</span><br><span class="line">    margin-top: 5px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!--state.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">状态对象模块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> storageUtils <span class="keyword">from</span> <span class="string">'../util/storageUtil'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    todos: storageUtils.readTodos()</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--actions.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含n个用于间接更新状态的方法的对象模块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; ADD_TODO, DELETE_TODO, SELECT_ALL_TODOS, DELETE_COMPLETE_TODOS, RECEIVE_TODOS &#125; <span class="keyword">from</span> <span class="string">'./mutaion-types'</span></span><br><span class="line"><span class="keyword">import</span> storageutil <span class="keyword">from</span> <span class="string">'../util/storageUtil'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//添加todo</span></span><br><span class="line">    addTodo(&#123; commit &#125;, todo) &#123;</span><br><span class="line">        commit(ADD_TODO, &#123; todo &#125;) <span class="comment">// 传递给mutation的是一个包含数据的对象</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//删除todo</span></span><br><span class="line">    deleteTodo(&#123; commit &#125;, index) &#123;</span><br><span class="line">        commit(DELETE_TODO, &#123; index &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//全选或全不选</span></span><br><span class="line">    selectAll(&#123; commit &#125;, isCheck) &#123;</span><br><span class="line">        commit(SELECT_ALL_TODOS, &#123; isCheck &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//删除全部选中的</span></span><br><span class="line">    deleteCompleteTodos(&#123; commit &#125;) &#123;</span><br><span class="line">        commit(DELETE_COMPLETE_TODOS)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//异步获取todos并更新状态</span></span><br><span class="line">    reqtodos(&#123; commit &#125;) &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> todos = storageutil.readTodos()</span><br><span class="line">            commit(RECEIVE_TODOS, todos)</span><br><span class="line">        &#125;, <span class="number">3000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--getters.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含n个基于state的getter计算属性方法的对象模块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// 总数量</span></span><br><span class="line">    totalSize(state) &#123;</span><br><span class="line">        <span class="keyword">return</span> state.todos.length</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 完成的数量</span></span><br><span class="line">    completeSize(state) &#123;</span><br><span class="line">        <span class="keyword">return</span> state.todos.reduce(<span class="function">(<span class="params">preTotal, todo</span>) =&gt;</span> preTotal + (todo.complete ? <span class="number">1</span> : <span class="number">0</span>), <span class="number">0</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 判断是否需要全选</span></span><br><span class="line">    isAllSelect(state, getters) &#123;</span><br><span class="line">        <span class="keyword">return</span> getters.completeSize === getters.totalSize &amp;&amp; getters.completeSize &gt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--index.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">vuex核心管理模块store对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">import</span> state <span class="keyword">from</span> <span class="string">'./state'</span></span><br><span class="line"><span class="keyword">import</span> mutations <span class="keyword">from</span> <span class="string">'./mutations'</span></span><br><span class="line"><span class="keyword">import</span> actions <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"><span class="keyword">import</span> getters <span class="keyword">from</span> <span class="string">'./getters'</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    state,</span><br><span class="line">    mutations,</span><br><span class="line">    actions,</span><br><span class="line">    getters</span><br><span class="line">&#125;)</span><br><span class="line">&lt;!--mutations.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含n个用于直接更新状态的方法的对象模块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; ADD_TODO, DELETE_TODO, SELECT_ALL_TODOS, DELETE_COMPLETE_TODOS, RECEIVE_TODOS &#125; <span class="keyword">from</span> <span class="string">'./mutaion-types'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    [ADD_TODO](state, &#123; todo &#125;) &#123; <span class="comment">// 方法名不是ADD_TODO, 而是add_todo</span></span><br><span class="line">        state.todos.unshift(todo)</span><br><span class="line">    &#125;,</span><br><span class="line">    [DELETE_TODO](state, &#123; index &#125;) &#123;</span><br><span class="line">        state.todos.splice(index, <span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    [SELECT_ALL_TODOS](state, &#123; isCheck &#125;) &#123;</span><br><span class="line">        state.todos.forEach(<span class="function"><span class="params">todo</span> =&gt;</span> todo.complete = isCheck)</span><br><span class="line">    &#125;,</span><br><span class="line">    [DELETE_COMPLETE_TODOS](state) &#123;</span><br><span class="line">        state.todos = state.todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> !todo.complete)</span><br><span class="line">    &#125;,</span><br><span class="line">    [RECEIVE_TODOS](state, todos) &#123;</span><br><span class="line">        state.todos = todos</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--mutation-type.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含n个mutation名称常量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> ADD_TODO = <span class="string">'add_todo'</span> <span class="comment">// 添加todo</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DELETE_TODO = <span class="string">'delete_todo'</span> <span class="comment">// 删除todo</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> SELECT_ALL_TODOS = <span class="string">'select_all_todos'</span> <span class="comment">// 全选/全不选todos</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DELETE_COMPLETE_TODOS = <span class="string">'delete_complete_todos'</span> <span class="comment">// 删除所有选中的</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_TODOS = <span class="string">'receive_todos'</span> <span class="comment">//接收todos</span></span><br><span class="line">&lt;!--main.js--&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">入口JS</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./components/base.css'</span></span><br><span class="line"><span class="comment">// 创建vm</span></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="comment">// new Vue(&#123;</span></span><br><span class="line"><span class="comment">//     el: '#app',</span></span><br><span class="line"><span class="comment">//     components: &#123; App &#125;, // 映射组件标签</span></span><br><span class="line"><span class="comment">//     template: '&lt;App/&gt;', // 指定需要渲染到页面的模板</span></span><br><span class="line"><span class="comment">//     store // 所有的组件对象都多了一个属性: $store(值就是store对象)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">//渲染函数</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">    store <span class="comment">// 所有的组件对象都多了一个属性: $store(值就是store对象)</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(7)</title>
    <url>/2020/08/30/vue-7/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据代理(MVVM.js)</span><br><span class="line">	1.通过一个对象代理对另一个对象中属性的操作(读&#x2F;写)</span><br><span class="line">  	2.通过vm对象来代理data对象中所有属性的操作</span><br><span class="line">  	3.好处: 更方便的操作data中的数据</span><br><span class="line">  	4.基本实现流程</span><br><span class="line">    	1). 通过Object.defineProperty()给vm添加与data对象的属性对应的属性描述符</span><br><span class="line">    	2). 所有添加的属性都包含getter&#x2F;setter</span><br><span class="line">    	3). 在getter&#x2F;setter内部去操作data中对应的属性数据</span><br><span class="line">模板解析(compile.js)</span><br><span class="line">  	1.模板解析的关键对象: compile对象</span><br><span class="line">  	2.模板解析的基本流程:</span><br><span class="line">    	1). 将el的所有子节点取出, 添加到一个新建的文档fragment对象中</span><br><span class="line">    	2). 对fragment中的所有层次子节点递归进行编译解析处理</span><br><span class="line">        	* 对表达式文本节点进行解析</span><br><span class="line">        	* 对元素节点的指令属性进行解析</span><br><span class="line">            	* 事件指令解析</span><br><span class="line">            	* 一般指令解析</span><br><span class="line">      	3). 将解析后的fragment添加到el中显示</span><br><span class="line">    3.解析表达式文本节点: textNode.textContent &#x3D; value</span><br><span class="line">      	1). 根据正则对象得到匹配出的表达式字符串: 子匹配&#x2F;RegExp.$1</span><br><span class="line">      	2). 从data中取出表达式对应的属性值</span><br><span class="line">      	3). 将属性值设置为文本节点的textContent</span><br><span class="line">    4.事件指令解析: elementNode.addEventListener(事件名, 回调函数.bind(vm))</span><br><span class="line">        v-on:click&#x3D;&quot;test&quot;</span><br><span class="line">      	1). 从指令名中取出事件名</span><br><span class="line">      	2). 根据指令的值(表达式)从methods中得到对应的事件处理函数对象</span><br><span class="line">      	3). 给当前元素节点绑定指定事件名和回调函数的dom事件监听</span><br><span class="line">      	4). 指令解析完后, 移除此指令属性</span><br><span class="line">    5.一般指令解析: elementNode.xxx &#x3D; value</span><br><span class="line">      	1). 得到指令名和指令值(表达式)</span><br><span class="line">      	2). 从data中根据表达式得到对应的值</span><br><span class="line">      	3). 根据指令名确定需要操作元素节点的什么属性</span><br><span class="line">	        * v-text---textContent属性</span><br><span class="line">	        * v-html---innerHTML属性</span><br><span class="line">	        * v-class--className属性</span><br><span class="line">      	4). 将得到的表达式的值设置到对应的属性上</span><br><span class="line">      	5). 移除元素的指令属性</span><br><span class="line">数据劫持--&gt;数据绑定</span><br><span class="line">	1.数据绑定(model&#x3D;&#x3D;&gt;View):</span><br><span class="line">    	1). 一旦更新了data中的某个属性数据, 所有界面上直接使用或间接使用了此属性的节点都会更新(更新)</span><br><span class="line">  	2.数据劫持</span><br><span class="line">		1). 数据劫持是vue中用来实现数据绑定的一种技术</span><br><span class="line">		2). 基本思想: 通过defineProperty()来监视data中所有属性(任意层次)数据的变化, 一旦变化就去更新界面</span><br><span class="line">  	3.四个重要对象</span><br><span class="line">    	1). Observer</span><br><span class="line">			* 用来对data所有属性数据进行劫持的构造函数</span><br><span class="line">	      	* 给data中所有属性重新定义属性描述(get&#x2F;set)</span><br><span class="line">	      	* 为data中的每个属性创建对应的dep对象</span><br><span class="line">	    2). Dep(Depend)</span><br><span class="line">	      	* data中的每个属性(所有层次)都对应一个dep对象</span><br><span class="line">	      	* 创建的时机:</span><br><span class="line">	        	* 在初始化define data中各个属性时创建对应的dep对象</span><br><span class="line">	        	* 在data中的某个属性值被设置为新的对象时</span><br><span class="line">	      	* 对象的结构</span><br><span class="line">		        &#123;</span><br><span class="line">		          id, &#x2F;&#x2F; 每个dep都有一个唯一的id</span><br><span class="line">		          subs &#x2F;&#x2F;包含n个对应watcher的数组(subscribes的简写)</span><br><span class="line">		        &#125;</span><br><span class="line">			* subs属性说明</span><br><span class="line">				* 当一个watcher被创建时, 内部会将当前watcher对象添加到对应的dep对象的subs中</span><br><span class="line">				* 当此data属性的值发生改变时, 所有subs中的watcher都会收到更新的通知, 从而最终更新对应的界面</span><br><span class="line">		3). Compile</span><br><span class="line">			* 用来解析模板页面的对象的构造函数(一个实例)</span><br><span class="line">			* 利用compile对象解析模板页面</span><br><span class="line">			* 每解析一个表达式(非事件指令)都会创建一个对应的watcher对象, 并建立watcher与dep的关系</span><br><span class="line">			* complie与watcher关系: 一对多的关系</span><br><span class="line">		4). Watcher</span><br><span class="line">	      	* 模板中每个非事件指令或表达式都对应一个watcher对象</span><br><span class="line">	      	* 监视当前表达式数据的变化</span><br><span class="line">	      	* 创建的时机: 在初始化编译模板时</span><br><span class="line">	      	* 对象的组成</span><br><span class="line">				&#123;</span><br><span class="line">		          vm,  &#x2F;&#x2F;vm对象</span><br><span class="line">		          exp, &#x2F;&#x2F;对应指令的表达式</span><br><span class="line">		          cb, &#x2F;&#x2F;当表达式所对应的数据发生改变的回调函数</span><br><span class="line">		          value, &#x2F;&#x2F;表达式当前的值</span><br><span class="line">		          depIds &#x2F;&#x2F;表达式中各级属性所对应的dep对象的集合对象</span><br><span class="line">		                  &#x2F;&#x2F;属性名为dep的id, 属性值为dep</span><br><span class="line">				&#125;</span><br><span class="line">		5). 总结: dep与watcher的关系: 多对多</span><br><span class="line">			* 一个data中的属性对应对应一个dep, 一个dep中可能包含多个watcher(模板中有几个表达式使用到了属性)</span><br><span class="line">			* 模板中一个非事件表达式对应一个watcher, 一个watcher中可能包含多个dep(表达式中包含了几个data属性)</span><br><span class="line">			* 数据绑定使用到2个核心技术</span><br><span class="line">				* defineProperty()</span><br><span class="line">				* 消息订阅与发布</span><br><span class="line">双向数据绑定</span><br><span class="line">		1). 双向数据绑定是建立在单向数据绑定(model&#x3D;&#x3D;&gt;View)的基础之上的</span><br><span class="line">		2). 双向数据绑定的实现流程:</span><br><span class="line">	      	* 在解析v-model指令时, 给当前元素添加input监听</span><br><span class="line">	      	* 当input的value发生改变时, 将最新的值赋值给当前表达式所对应的data属性</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gia4hnf0dvj30hs08lgn1.jpg" alt=""></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"fragment_test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. [].slice.call(lis): 将伪数组转换为真数组</span></span><br><span class="line"><span class="comment">2. node.nodeType: 得到节点类型</span></span><br><span class="line"><span class="comment">3. Object.defineProperty(obj, propertyName, &#123;&#125;): 给对象添加属性(指定描述符)</span></span><br><span class="line"><span class="comment">4. Object.keys(obj): 得到对象自身可枚举属性组成的数组</span></span><br><span class="line"><span class="comment">5. obj.hasOwnProperty(prop): 判断prop是否是obj自身的属性</span></span><br><span class="line"><span class="comment">6. DocumentFragment: 文档碎片(高效批量更新多个节点)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//1. [].slice.call(lis): 根据伪数组生成对应的真数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>) <span class="comment">// lis是伪数组(是一个特别的对象, length和数值下标属性)</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(lis <span class="keyword">instanceof</span> <span class="built_in">Object</span>, lis <span class="keyword">instanceof</span> <span class="built_in">Array</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 数组的slice()截取数组中指定部分的元素, 生成一个新的数组  [1, 3, 5, 7, 9], slice(0, 3)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// slice2()</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">Array</span>.prototype.slice2 = <span class="function"><span class="keyword">function</span>(<span class="params">start, end</span>) </span>&#123;</span></span><br><span class="line">            start = start || 0</span><br><span class="line"><span class="actionscript">            end = start || <span class="keyword">this</span>.length</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> arr = []</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = start; i &lt; end; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                arr.push(<span class="keyword">this</span>[i])</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> arr</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> lis2 = <span class="built_in">Array</span>.prototype.slice.call(lis) <span class="comment">// lis.slice()</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(lis2 <span class="keyword">instanceof</span> <span class="built_in">Object</span>, lis2 <span class="keyword">instanceof</span> <span class="built_in">Array</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// lis2.forEach()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//2. node.nodeType: 得到节点类型</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> elementNode = <span class="built_in">document</span>.getElementById(<span class="string">'test'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> attrNode = elementNode.getAttributeNode(<span class="string">'id'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> textNode = elementNode.firstChild</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(elementNode.nodeType, attrNode.nodeType, textNode.nodeType)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//3. Object.defineProperty(obj, propertyName, &#123;&#125;): 给对象添加属性(指定描述符)</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="actionscript">                firstName: <span class="string">'A'</span>,</span></span><br><span class="line"><span class="actionscript">                lastName: <span class="string">'B'</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//obj.fullName = 'A-B'</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">Object</span>.defineProperty(obj, <span class="string">'fullName'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 属性描述符:</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//访问描述符</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当读取对象此属性值时自动调用, 将函数返回的值作为属性值, this为obj</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">get</span>() &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">"-"</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">// 当修改了对象的当前属性值时自动调用, 监视当前属性值的变化, 修改相关的属性, this为obj</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">set</span>(value) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">const</span> names = value.split(<span class="string">'-'</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.firstName = names[<span class="number">0</span>]</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.lastName = names[<span class="number">1</span>]</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj.fullName) <span class="comment">// A-B</span></span></span><br><span class="line"><span class="actionscript">        obj.fullName = <span class="string">'C-D'</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj.firstName, obj.lastName) <span class="comment">// C D</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 数据描述符</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">Object</span>.defineProperty(obj, <span class="string">'fullName2'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            configurable: <span class="literal">false</span>, <span class="comment">//是否可以重新define</span></span></span><br><span class="line"><span class="actionscript">            enumerable: <span class="literal">true</span>, <span class="comment">// 是否可以枚举(for..in / keys())</span></span></span><br><span class="line"><span class="actionscript">            value: <span class="string">'A-B'</span>, <span class="comment">// 指定初始值</span></span></span><br><span class="line"><span class="actionscript">            writable: <span class="literal">false</span> <span class="comment">// value是否可以修改</span></span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj.fullName2) <span class="comment">// A-B</span></span></span><br><span class="line"><span class="actionscript">        obj.fullName2 = <span class="string">'E-F'</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj.fullName2) <span class="comment">// A-B</span></span></span><br><span class="line">            /*Object.defineProperty(obj, 'fullName2', &#123;</span><br><span class="line"><span class="actionscript">              configurable: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">              enumerable: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">              value: <span class="string">'G-H'</span>,</span></span><br><span class="line"><span class="actionscript">              writable: <span class="literal">true</span></span></span><br><span class="line">            &#125;)*/</span><br><span class="line"><span class="actionscript">            <span class="comment">//4. Object.keys(obj): 得到对象自身可枚举属性组成的数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> names = <span class="built_in">Object</span>.keys(obj)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(names)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//5. obj.hasOwnProperty(prop): 判断prop是否是obj自身的属性</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj.hasOwnProperty(<span class="string">'fullName'</span>), obj.hasOwnProperty(<span class="string">'toString'</span>)) <span class="comment">// true false</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//6. DocumentFragment: 文档碎片(高效批量更新多个节点)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// document: 对应显示的页面, 包含n个elment  一旦更新document内部的某个元素界面更新</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// documentFragment: 内存中保存n个element的容器对象(不与界面关联), 如果更新framgnet中的某个element, 界面不变</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">'fragment_test'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 1. 创建fragment</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> fragment = <span class="built_in">document</span>.createDocumentFragment()</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 2. 取出ul中所有子节点取出保存到fragment</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> child</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">while</span> (child = ul.firstChild) &#123; <span class="comment">// 一个节点只能有一个父亲</span></span></span><br><span class="line"><span class="actionscript">            fragment.appendChild(child) <span class="comment">// 先将child从ul中移除, 添加为fragment子节点</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 3. 更新fragment中所有li的文本</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">Array</span>.prototype.slice.call(fragment.childNodes).forEach(<span class="function"><span class="params">node</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (node.nodeType === <span class="number">1</span>) &#123; <span class="comment">// 元素节点 &lt;li&gt;</span></span></span><br><span class="line"><span class="actionscript">                    node.textContent = <span class="string">'www.baidu.com'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 4. 将fragment插入ul</span></span></span><br><span class="line">        ul.appendChild(fragment)</span><br><span class="line"><span class="actionscript">      	<span class="comment">//多行多列更新节点</span></span></span><br><span class="line"><span class="javascript">      	<span class="keyword">const</span> div = <span class="built_in">document</span>.getElementById(<span class="string">'app'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> fragment = <span class="built_in">document</span>.createDocumentFragment()</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> child</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">while</span> (child = div.firstChild) &#123; </span></span><br><span class="line">            fragment.appendChild(child) </span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">Array</span>.prototype.slice.call(fragment.childNodes).forEach(<span class="function"><span class="params">node</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (node.nodeType === <span class="number">1</span>) &#123; <span class="comment">// 元素节点 &lt;ul&gt;</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">Array</span>.from(node.children).forEach(<span class="function"><span class="params">li</span> =&gt;</span> li.textContent = <span class="string">'atguigu'</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        div.appendChild(fragment)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据代理_vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/mvvm/compile.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/mvvm/mvvm.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/mvvm/observer.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/mvvm/watcher.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">//const vm = new MVVM(&#123;</span></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">"#test"</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="actionscript">      name: <span class="string">'张三'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(vm.name)  <span class="comment">// 读取的是data中的name,  vm代理对data的读操作</span></span></span><br><span class="line"><span class="actionscript">  vm.name = <span class="string">'李四'</span> <span class="comment">// 数据保存到data中的name上, vm代理对data的写操作</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(vm.name, vm._data.name)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>数据代理：</p>
<p>/*<br>相当于Vue的构造函数<br> */<br>function MVVM(options) {<br>  // 将选项对象保存到vm<br>  this.$options = options;<br>  // 将data对象保存到vm和datq变量中<br>  var data = this._data = this.$options.data;<br>  //将vm保存在me变量中<br>  var me = this;<br>  // 遍历data中所有属性<br>  Object.keys(data).forEach(function (key) { // 属性名: name<br>    // 对指定属性实现代理<br>    me._proxy(key);<br>  });</p>
<p>  // 对data进行监视<br>  observe(data, this);</p>
<p>  // 创建一个用来编译模板的compile对象<br>  this.$compile = new Compile(options.el || document.body, this)<br>}</p>
<p>MVVM.prototype = {<br>  $watch: function (key, cb, options) {<br>    new Watcher(this, key, cb);<br>  },</p>
<p>  // 对指定属性实现代理<br>  _proxy: function (key) {<br>    // 保存vm<br>    var me = this;<br>    // 给vm添加指定属性名的属性(使用属性描述)<br>    Object.defineProperty(me, key, {<br>      configurable: false, // 不能再重新定义<br>      enumerable: true, // 可以枚举<br>      // 当通过vm.name读取属性值时自动调用<br>      get: function proxyGetter() {<br>        // 读取data中对应属性值返回(实现代理读操作)<br>        return me._data[key];<br>      },<br>      // 当通过vm.name = ‘xxx’时自动调用<br>      set: function proxySetter(newVal) {<br>        // 将最新的值保存到data中对应的属性上(实现代理写操作)<br>        me._data[key] = newVal;<br>      }<br>    });<br>  }<br>};</p>
<p>Vuex:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. vuex是什么</span><br><span class="line">	github站点: https:&#x2F;&#x2F;github.com&#x2F;vuejs&#x2F;vuex</span><br><span class="line">	在线文档: https:&#x2F;&#x2F;vuex.vuejs.org&#x2F;zh-cn&#x2F;</span><br><span class="line">	简单来说: 对应用中组件的状态进行集中式的管理(读&#x2F;写)</span><br><span class="line">2. 状态自管理应用</span><br><span class="line">	state: 驱动应用的数据源</span><br><span class="line">	view: 以声明方式将state映射到视图</span><br><span class="line">	actions: 响应在view上的用户输入导致的状态变化(包含n个更新状态的方法)</span><br><span class="line">![单向数据流](https:&#x2F;&#x2F;vuex.vuejs.org&#x2F;zh-cn&#x2F;images&#x2F;flow.png)</span><br><span class="line">3. 多组件共享状态的问题</span><br><span class="line">	多个视图依赖于同一状态</span><br><span class="line">	来自不同视图的行为需要变更同一状态</span><br><span class="line">	以前的解决办法</span><br><span class="line">		* 将数据以及操作数据的行为都定义在父组件</span><br><span class="line">		* 将数据以及操作数据的行为传递给需要的各个子组件(有可能需要多级传递)</span><br><span class="line">	vuex就是用来解决这个问题的</span><br><span class="line">4. vuex的核心概念</span><br><span class="line">1). state</span><br><span class="line">	vuex管理的状态对象</span><br><span class="line">	它应该是唯一的</span><br><span class="line">	const state &#x3D; &#123;</span><br><span class="line">		xxx: initValue</span><br><span class="line">	&#125;</span><br><span class="line">2). mutations</span><br><span class="line">	包含多个直接更新state的方法(回调函数)的对象</span><br><span class="line">	谁来触发: action中的commit(&#39;mutation名称&#39;)</span><br><span class="line">	只能包含同步的代码, 不能写异步代码</span><br><span class="line">	const mutations &#x3D; &#123;</span><br><span class="line">		yyy (state, data) &#123; </span><br><span class="line">			&#x2F;&#x2F; 更新state的某个属性</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">3). actions</span><br><span class="line">	包含多个事件回调函数的对象</span><br><span class="line">	通过执行: commit()来触发mutation的调用, 间接更新state</span><br><span class="line">	谁来触发: 组件中: $store.dispatch(&#39;action名称&#39;)  &#x2F;&#x2F; &#39;zzz&#39;</span><br><span class="line">	可以包含异步代码(定时器, ajax)</span><br><span class="line">	const actions &#x3D; &#123;</span><br><span class="line">		zzz (&#123;commit, state&#125;, data1) &#123;</span><br><span class="line">			commit(&#39;yyy&#39;, data2)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">4). getters</span><br><span class="line">	包含多个计算属性(get)的对象</span><br><span class="line">	谁来读取: 组件中: $store.getters.xxx</span><br><span class="line">	const getters &#x3D; &#123;</span><br><span class="line">		mmm (state) &#123;</span><br><span class="line">			return ...</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">5). modules</span><br><span class="line">	包含多个module</span><br><span class="line">	一个module是一个store的配置对象</span><br><span class="line">	与一个组件(包含有共享数据)对应</span><br><span class="line">6). 向外暴露store对象</span><br><span class="line">	export default new Vuex.Store(&#123;</span><br><span class="line">		state,</span><br><span class="line">		mutations,</span><br><span class="line">		actions,</span><br><span class="line">		getters</span><br><span class="line">	&#125;)</span><br><span class="line">7). 组件中:</span><br><span class="line">	import &#123;mapGetters, mapActions&#125; from &#39;vuex&#39;</span><br><span class="line">	export default &#123;</span><br><span class="line">		computed: mapGetters([&#39;mmm&#39;])</span><br><span class="line">		methods: mapActions([&#39;zzz&#39;])</span><br><span class="line">	&#125;</span><br><span class="line">	&#123;&#123;mmm&#125;&#125; @click&#x3D;&quot;zzz(data)&quot;</span><br><span class="line">8). 映射store</span><br><span class="line">	import store from &#39;.&#x2F;store&#39;</span><br><span class="line">	new Vue(&#123;</span><br><span class="line">		store</span><br><span class="line">	&#125;)</span><br><span class="line">9). store对象</span><br><span class="line">	1.所有用vuex管理的组件中都多了一个属性$store, 它就是一个store对象</span><br><span class="line">	2.属性:</span><br><span class="line">	  state: 注册的state对象</span><br><span class="line">	  getters: 注册的getters对象</span><br><span class="line">	3.方法:</span><br><span class="line">	  dispatch(actionName, data): 分发action </span><br><span class="line">5. 将vuex引到项目中</span><br><span class="line">1). 下载: npm install vuex --save</span><br><span class="line">2). 使用vuex</span><br><span class="line">	1.store.js</span><br><span class="line">		import Vuex from &#39;vuex&#39;</span><br><span class="line">		export default new Vuex.Store(&#123;</span><br><span class="line">			state, &#x2F;&#x2F;状态对象</span><br><span class="line">			mutations,  &#x2F;&#x2F;包含多个更新state函数的对象</span><br><span class="line">			actions,  &#x2F;&#x2F;包含多个对应事件回调函数的对象</span><br><span class="line">			getters,  &#x2F;&#x2F;包含多个getter计算属性函数的对象</span><br><span class="line">			modules</span><br><span class="line">		&#125;)</span><br><span class="line">	2.main.js</span><br><span class="line">		import store from &#39;.&#x2F;store.js&#39;</span><br><span class="line">		new Vue(&#123;</span><br><span class="line">			store</span><br><span class="line">		&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giab6jdw04j30gc07z751.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;click &#123;&#123;count&#125;&#125; times, count is &#123;&#123;evenOrOdd&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;increment&quot;&gt;+&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;decrement&quot;&gt;-&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;incrementIfOdd&quot;&gt;increment if odd&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;incrementAsync&quot;&gt;increment async&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F;  mapGetters返回值：对象</span><br><span class="line">import &#123; mapState, mapGetters, mapActions &#125; from &quot;vuex&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    &#x2F;&#x2F; console.log(this.$store);</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapState([&quot;count&quot;]),</span><br><span class="line">    &#x2F;&#x2F;名称不同需写成map对应</span><br><span class="line">    ...mapGetters(&#123;evenOrOdd:&#39;evenOrOdd2&#39;&#125;),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; computed: &#123;</span><br><span class="line">  &#x2F;&#x2F;   &#x2F;&#x2F; count() &#123;</span><br><span class="line">  &#x2F;&#x2F;   &#x2F;&#x2F;   return this.$store.state.count;</span><br><span class="line">  &#x2F;&#x2F;   &#x2F;&#x2F; &#125;,</span><br><span class="line">  &#x2F;&#x2F;   evenOrOdd() &#123;</span><br><span class="line">  &#x2F;&#x2F;     return this.$store.getters.evenOrOdd;</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F; &#125;,</span><br><span class="line">  &#x2F;&#x2F; methods: &#123;</span><br><span class="line">  &#x2F;&#x2F;   increment() &#123;</span><br><span class="line">  &#x2F;&#x2F;     this.$store.dispatch(&quot;increment&quot;);</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F;   decrement() &#123;</span><br><span class="line">  &#x2F;&#x2F;     this.$store.dispatch(&quot;decrement&quot;);</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F;   incrementIfOdd() &#123;</span><br><span class="line">  &#x2F;&#x2F;     this.$store.dispatch(&quot;incrementIfOdd&quot;);</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F;   incrementAsync() &#123;</span><br><span class="line">  &#x2F;&#x2F;     this.$store.dispatch(&quot;incrementAsync&quot;);</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F; &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapActions([</span><br><span class="line">      &quot;increment&quot;,</span><br><span class="line">      &quot;decrement&quot;,</span><br><span class="line">      &quot;incrementIfOdd&quot;,</span><br><span class="line">      &quot;incrementAsync&quot;,</span><br><span class="line">    ]),</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">vuex最核心的管理对象store</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">相当于data对象的状态对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    count: <span class="number">0</span> <span class="comment">// 指定初始化数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含了n个直接更新状态的方法的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    INCREMENT(state) &#123;</span><br><span class="line">        state.count++</span><br><span class="line">    &#125;,</span><br><span class="line">    DECREMENT(state) &#123;</span><br><span class="line">        state.count--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含了n个间接更新状态的方法的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    increment(&#123; commit &#125;) &#123;</span><br><span class="line">        <span class="comment">// 提交一个mutation请求</span></span><br><span class="line">        commit(<span class="string">'INCREMENT'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    decrement(&#123; commit &#125;) &#123;</span><br><span class="line">        <span class="comment">// 提交一个mutation请求</span></span><br><span class="line">        commit(<span class="string">'DECREMENT'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    incrementIfOdd(&#123; commit, state &#125;) &#123;</span><br><span class="line">        <span class="keyword">if</span> (state.count % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 提交一个mutation请求</span></span><br><span class="line">            commit(<span class="string">'INCREMENT'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    incrementAsync(&#123; commit &#125;) &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 提交一个mutation请求</span></span><br><span class="line">            commit(<span class="string">'INCREMENT'</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含多个getter计算属性的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">    evenOrOdd2(state) &#123; <span class="comment">// 当读取属性值时自动调用并返回属性值</span></span><br><span class="line">        <span class="keyword">return</span> state.count % <span class="number">2</span> === <span class="number">0</span> ? <span class="string">'偶数'</span> : <span class="string">'奇数'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    state,</span><br><span class="line">    mutations,</span><br><span class="line">    actions,</span><br><span class="line">    getters</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    components: &#123; App &#125;,</span><br><span class="line">    template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">    store <span class="comment">//所有组件对象都多了一个属性:$store</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(6)</title>
    <url>/2020/08/30/vue-6/</url>
    <content><![CDATA[<p>1、路由路径携带参数</p>
<p>Param/query/router-view也可以携带数据</p>
<p>2、编程式路由导航，使用除了<router-link>来定义导航链接，借助router来实现</p>
<p>this.$router.push  相当于点击路由链接(可以返回到当前路由界面)</p>
<p>this.$router.replace 用新路由替换当前路由(不可以返回到当前路由界面)</p>
<p>this.$router.back()请求返回上一个路由</p>
<p>this.$router.go(-1)请求返回上一个路由</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--App.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;col-xs-offset-2 col-xs-8&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;page-header&quot;&gt;&lt;h2&gt;Router Test&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;col-xs-2 col-xs-offset-2&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;list-group&quot;&gt;</span><br><span class="line">          &lt;!--生成路由链接--&gt;</span><br><span class="line">          &lt;router-link to&#x3D;&quot;&#x2F;about&quot; class&#x3D;&quot;list-group-item&quot;&gt;About&lt;&#x2F;router-link&gt;</span><br><span class="line">          &lt;router-link to&#x3D;&quot;&#x2F;home&quot; class&#x3D;&quot;list-group-item&quot;&gt;Home&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;col-xs-6&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;panel-body&quot;&gt;</span><br><span class="line">            &lt;!--显示当前组件  保持当前组件存活，切换后还可以看见之前输入的数据--&gt;</span><br><span class="line">            &lt;keep-alive&gt;</span><br><span class="line">            &lt;!--router-view也可以携带数据--&gt;</span><br><span class="line">              &lt;router-view msg&#x3D;&quot;abc&quot;&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">            &lt;&#x2F;keep-alive&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--Home.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;Home&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;ul class&#x3D;&quot;nav nav-tabs&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;router-link to&#x3D;&quot;&#x2F;home&#x2F;news&quot;&gt;News&lt;&#x2F;router-link&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;router-link to&#x3D;&quot;&#x2F;home&#x2F;message&quot;&gt;Message&lt;&#x2F;router-link&gt;&lt;&#x2F;li&gt;</span><br><span class="line">      &lt;&#x2F;ul&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123; &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--About.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;About&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">      msg: String</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--News.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for&#x3D;&quot;(news,index) in newsArr&quot; :key&#x3D;&quot;index&quot;&gt;&#123;&#123;news&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        newsArr:[&#39;news001&#39;,&#39;news002&#39;,&#39;news003&#39;]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--Message.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for&#x3D;&quot;message in messages&quot; :key&#x3D;&quot;message.id&quot;&gt;</span><br><span class="line">        &lt;router-link :to&#x3D;&quot;&#96;&#x2F;home&#x2F;message&#x2F;detail&#x2F;$&#123;message.id&#125;&#96;&quot;&gt;&#123;&#123;message.title&#125;&#125;&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;pushshow(message.id)&quot;&gt;push查看&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;replaceshow(message.id)&quot;&gt;replace查看&lt;&#x2F;button&gt;</span><br><span class="line">      &lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;$router.back()&quot;&gt;回退&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      messages: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    &#x2F;&#x2F; 模拟ajax请求从后台获取数据</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">      const messages &#x3D; [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1,</span><br><span class="line">          title: &quot;message01&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 2,</span><br><span class="line">          title: &quot;message02&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 4,</span><br><span class="line">          title: &quot;message04&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ];</span><br><span class="line">      this.messages &#x3D; messages;</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    pushshow(id) &#123;</span><br><span class="line">      this.$router.push(&#96;&#x2F;home&#x2F;message&#x2F;detail&#x2F;$&#123;id&#125;&#96;);</span><br><span class="line">    &#125;,</span><br><span class="line">    replaceshow(id) &#123;</span><br><span class="line">      this.$router.replace(&#96;&#x2F;home&#x2F;message&#x2F;detail&#x2F;$&#123;id&#125;&#96;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--MessageDetail.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li&gt;id:&#123;&#123;messagedetail.id&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">      &lt;li&gt;title:&#123;&#123;messagedetail.title&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">      &lt;li&gt;content:&#123;&#123;messagedetail.content&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">const allmessagedetail &#x3D; [</span><br><span class="line">  &#123;</span><br><span class="line">    id: 1,</span><br><span class="line">    title: &quot;message01&quot;,</span><br><span class="line">    content: &quot;message01 content&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id: 2,</span><br><span class="line">    title: &quot;message02&quot;,</span><br><span class="line">    content: &quot;message02 content&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id: 4,</span><br><span class="line">    title: &quot;message04&quot;,</span><br><span class="line">    content: &quot;message04 content&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      messagedetail: &#123;&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;&#x2F;&#x2F;异步任务启动</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">      const allmessagedetail &#x3D; [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1,</span><br><span class="line">          title: &quot;message01&quot;,</span><br><span class="line">          content: &quot;message01 content&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 2,</span><br><span class="line">          title: &quot;message02&quot;,</span><br><span class="line">          content: &quot;message02 content&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 4,</span><br><span class="line">          title: &quot;message04&quot;,</span><br><span class="line">          content: &quot;message04 content&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ];</span><br><span class="line">      this.allmessagedetail &#x3D; allmessagedetail;&#x2F;&#x2F;请求数据保存</span><br><span class="line">      const id &#x3D; this.$route.params.id * 1;</span><br><span class="line">      this.messagedetail &#x3D; allmessagedetail.find((detail) &#x3D;&gt; detail.id &#x3D;&#x3D;&#x3D; id);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;&#x2F;&#x2F;监视路由</span><br><span class="line">    $route: function (value) &#123;</span><br><span class="line">      &#x2F;&#x2F;路由路径(param)发生了改变</span><br><span class="line">      const id &#x3D; value.params.id * 1;</span><br><span class="line">      this.messagedetail &#x3D; this.allmessagedetail.find((detail) &#x3D;&gt; detail.id &#x3D;&#x3D;&#x3D; id);&#x2F;&#x2F;比较点击的id后筛选显示出来</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">'../views/About.vue'</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'../views/Home.vue'</span></span><br><span class="line"><span class="keyword">import</span> Message <span class="keyword">from</span> <span class="string">'../views/Message.vue'</span></span><br><span class="line"><span class="keyword">import</span> News <span class="keyword">from</span> <span class="string">'../views/News.vue'</span></span><br><span class="line"><span class="keyword">import</span> MessageDetail <span class="keyword">from</span> <span class="string">'../views/MessageDetail.vue'</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    <span class="comment">// 配置路由</span></span><br><span class="line">    routes: [&#123;</span><br><span class="line">            path: <span class="string">'/about'</span>,</span><br><span class="line">            component: About</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'/home'</span>,</span><br><span class="line">            component: Home,</span><br><span class="line">            <span class="comment">// 子组件</span></span><br><span class="line">            children: [&#123;</span><br><span class="line">                path: <span class="string">'/home/message'</span>, <span class="comment">//path最左侧的/永远代表跟路由</span></span><br><span class="line">                component: Message,</span><br><span class="line">                children: [&#123;</span><br><span class="line">                    <span class="comment">//路由路径携带参数(param-一般/query)</span></span><br><span class="line">                    path: <span class="string">'/home/message/detail/:id'</span>,</span><br><span class="line">                    component: MessageDetail</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                path: <span class="string">'/home/news'</span>,</span><br><span class="line">                component: News</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                path: <span class="string">''</span>,</span><br><span class="line">                redirect: <span class="string">'/home/news'</span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 设置初始值</span></span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'/'</span>,</span><br><span class="line">            redirect: <span class="string">'/about'</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123; <span class="comment">//配置对象的属性名都是一些确定的名称，不能随便修改</span></span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    router,</span><br><span class="line">    components: &#123; App &#125;,</span><br><span class="line">    template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(5)</title>
    <url>/2020/08/24/vue-5/</url>
    <content><![CDATA[<p>查询github中匹配的user信息</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/css/bootstrap.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue_fouth<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.router-link-active</span> &#123;</span></span><br><span class="line">            color: red !important;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--App.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">    &lt;Search&#x2F;&gt;</span><br><span class="line">    &lt;UsersMain&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Search from &#39;.&#x2F;components&#x2F;search.vue&#39;</span><br><span class="line">  import Main from &#39;.&#x2F;components&#x2F;main.vue&#39;</span><br><span class="line">  export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">      Search,</span><br><span class="line">      UsersMain: Main</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--search.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;section class&#x3D;&quot;jumbotron&quot;&gt;</span><br><span class="line">    &lt;h3 class&#x3D;&quot;jumbotron-heading&quot;&gt;Search Github Users&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;enter the name you search&quot; v-model&#x3D;&quot;searchName&quot;&#x2F;&gt;</span><br><span class="line">      &lt;button @click&#x3D;&quot;search&quot;&gt;Search&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;section&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Pubsub from &quot;pubsub-js&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      searchName: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    search() &#123;</span><br><span class="line">      const searchName &#x3D; this.searchName.trim();</span><br><span class="line">      if (searchName) &#123;</span><br><span class="line">        &#x2F;&#x2F; 发布搜索的消息</span><br><span class="line">        Pubsub.publish(&quot;search&quot;, searchName);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        alert(&quot;请输入搜索信息&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--main.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2 v-show&#x3D;&quot;firstView&quot;&gt;请输入关键字搜索&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;h2 v-show&#x3D;&quot;loading&quot;&gt;请求中...&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;h2 v-show&#x3D;&quot;errormsg&quot;&gt;&#123;&#123;errormsg&#125;&#125;&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;!--v-show&#x3D;&quot;users.length&gt;0&quot;--&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;card&quot; v-for&#x3D;&quot;(user, index) in users&quot; :key&#x3D;&quot;index&quot;&gt;</span><br><span class="line">        &lt;a :href&#x3D;&quot;user.url&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">          &lt;img :src&#x3D;&quot;user.avatarUrl&quot; style&#x3D;&quot;width: 100px&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;card-text&quot;&gt;&#123;&#123;user.username&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Pubsub from &quot;pubsub-js&quot;;</span><br><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      firstView: true,</span><br><span class="line">      loading: false,</span><br><span class="line">      users: null,</span><br><span class="line">      errormsg: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    &#x2F;&#x2F;订阅搜索的消息</span><br><span class="line">    Pubsub.subscribe(&quot;search&quot;, (msg, searchname) &#x3D;&gt; &#123;</span><br><span class="line">      &#x2F;&#x2F;需要发ajax请求</span><br><span class="line">      const url &#x3D; &#96;https:&#x2F;&#x2F;api.github.com&#x2F;search&#x2F;users?q&#x3D;$&#123;searchname&#125;&#96;;</span><br><span class="line">      &#x2F;&#x2F; 更新状态</span><br><span class="line">      this.firstView &#x3D; false;</span><br><span class="line">      this.loading &#x3D; true;</span><br><span class="line">      this.users &#x3D; null;</span><br><span class="line">      this.errormsg &#x3D; &quot;&quot;;</span><br><span class="line">      &#x2F;&#x2F; 发ajax请求</span><br><span class="line">      axios</span><br><span class="line">        .get(url)</span><br><span class="line">        .then((response) &#x3D;&gt; &#123;</span><br><span class="line">          const result &#x3D; response.data;</span><br><span class="line">          const users &#x3D; result.items.map((item) &#x3D;&gt; (&#123;</span><br><span class="line">            url: item.html_url,</span><br><span class="line">            avatarUrl: item.avatar_url,</span><br><span class="line">            username: item.login,</span><br><span class="line">          &#125;));</span><br><span class="line">          this.loading &#x3D; false;</span><br><span class="line">          this.users &#x3D; users;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((error) &#x3D;&gt; &#123;</span><br><span class="line">          this.loading &#x3D; false;</span><br><span class="line">          this.errormsg &#x3D; &quot;请求失败&quot;;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.card &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  width: 33.333%;</span><br><span class="line">  padding: 0.75rem;</span><br><span class="line">  margin-bottom: 2rem;</span><br><span class="line">  border: 1px solid #efefef;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.card &gt; img &#123;</span><br><span class="line">  margin-bottom: 0.75rem;</span><br><span class="line">  border-radius: 100px;</span><br><span class="line">&#125;</span><br><span class="line">.card-text &#123;</span><br><span class="line">  font-size: 85%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<p>UI组件库</p>
<p>npm install –save mint-ui</p>
<p>npm install –save-dev babel-plugin-component  按需打包</p>
<p>babelrc中plugins中添加</p>
<p>[“component”,[<br>    {<br>      “libraryName”:”mint-ui”,<br>      “style”:true<br>    }<br>  ]]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;mt-button type&#x3D;&quot;primary&quot; @click.native&#x3D;&quot;handleClick&quot; style&#x3D;&quot;width: 100%&quot;&gt;Test&lt;&#x2F;mt-button&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; Toast &#125; from &#39;mint-ui&#39;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      handleClick () &#123;</span><br><span class="line">        Toast(&#39;提示信息&#39;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&#x2F;*</span><br><span class="line">入口JS</span><br><span class="line"> *&#x2F;</span><br><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import App from &#39;.&#x2F;App.vue&#39;</span><br><span class="line">import &#123;Button&#125; from &#39;mint-ui&#39;</span><br><span class="line">&#x2F;&#x2F; 注册成标签(全局)</span><br><span class="line">Vue.component(Button.name, Button)</span><br><span class="line">&#x2F;* eslint-disable no-new *&#x2F;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;,</span><br><span class="line">  components: &#123;App&#125;, &#x2F;&#x2F; 映射组件标签</span><br><span class="line">  template: &#39;&lt;App&#x2F;&gt;&#39; &#x2F;&#x2F; 指定需要渲染到页面的模板</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>Vue 路由</p>
<p>npm install vue-router –save</p>
<p>Key-value=&gt;path-components</p>
<p>后台路由 处理请求的回调函数   前台路由 组件</p>
]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(4)</title>
    <url>/2020/08/24/vue-4/</url>
    <content><![CDATA[<p>组件间通信</p>
<p>1、props</p>
<p>2、vue自定义事件  &lt;TodoHeader @addtodo=”addtodo” /&gt;  … this.$emit(‘addtodo’,todo)</p>
<p>3、npm install –save pubsub-js 实现任意关系组件之间的通信 父子、子孙、兄弟之间可以便捷通信</p>
<p>pubsub-js库  订阅消息与发布消息</p>
<p>4、slot 用于父组件向子组件传递  标签数据  当某一标签多次使用可以较好地利用该功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--APP.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;todo-container&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;todo-wrap&quot;&gt;</span><br><span class="line">      &lt;!-- 使用自定义事件传递 绑定addtodo时间监听--&gt;</span><br><span class="line">      &lt;TodoHeader @addtodo&#x3D;&quot;addtodo&quot; &#x2F;&gt;</span><br><span class="line">      &lt;!--:deletetodo&#x3D;&quot;deletetodo&quot; --&gt;</span><br><span class="line">      &lt;TodoList :todos&#x3D;&quot;todos&quot; &#x2F;&gt;</span><br><span class="line">      &lt;TodoFooter</span><br><span class="line">        :todos&#x3D;&quot;todos&quot;</span><br><span class="line">        :deletecompleteTodos&#x3D;&quot;deletecompleteTodos&quot;</span><br><span class="line">        :selectAlltodos&#x3D;&quot;selectAlltodos&quot;</span><br><span class="line">      &#x2F;&gt;</span><br><span class="line">      &lt;TodoFooter&gt;</span><br><span class="line">        &lt;!--使用slot后计算属性需要放在父组件中--&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;isallcheck&quot; slot&#x3D;&quot;checkall&quot; &#x2F;&gt;</span><br><span class="line">        &lt;span slot&#x3D;&quot;count&quot;&gt;</span><br><span class="line">          &lt;span&gt;已完成&#123;&#123;completeSize&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">          &#x2F;全部&#123;&#123;todos.length&#125;&#125;</span><br><span class="line">        &lt;&#x2F;span&gt;</span><br><span class="line">        &lt;button class&#x3D;&quot;btn btn-danger&quot; v-show&#x3D;&quot;completeSize&quot; @click&#x3D;&quot;deletecompleteTodos&quot; slot&#x3D;&quot;delete&quot;&gt;清除已完成任务&lt;&#x2F;button&gt;</span><br><span class="line">      &lt;&#x2F;TodoFooter&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import PubSub from &quot;pubsub-js&quot;;</span><br><span class="line">import TodoHeader from &quot;.&#x2F;components&#x2F;TodoHeader.vue&quot;;</span><br><span class="line">import TodoList from &quot;.&#x2F;components&#x2F;TodoList.vue&quot;;</span><br><span class="line">import TodoFooter from &quot;.&#x2F;components&#x2F;TodoFooter.vue&quot;;</span><br><span class="line">import storageUtil from &quot;.&#x2F;util&#x2F;storageUtil.js&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      &#x2F;&#x2F;用于存储数据</span><br><span class="line">      &#x2F;&#x2F; 从localstorage中读取todos 取出的是json</span><br><span class="line">      todos: storageUtil.readtodos()</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    completeSize() &#123;</span><br><span class="line">      return this.todos.reduce(</span><br><span class="line">        (preTotal, todo) &#x3D;&gt; preTotal + (todo.complete ? 1 : 0),</span><br><span class="line">        0 &#x2F;&#x2F;初始数量</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">    isallcheck: &#123;</span><br><span class="line">      &#x2F;&#x2F; 选中check</span><br><span class="line">      get() &#123;</span><br><span class="line">        return this.completeSize &#x3D;&#x3D;&#x3D; this.todos.length &amp;&amp; this.completeSize &gt; 0;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;根据选中来设置列表复选框</span><br><span class="line">      set(value) &#123;</span><br><span class="line">        &#x2F;&#x2F;当前checkbox最新的值</span><br><span class="line">        this.selectAlltodos(value);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    &#x2F;&#x2F;执行异步代码</span><br><span class="line">    &#x2F;&#x2F; 订阅消息</span><br><span class="line">    PubSub.subscribe(&quot;deletetodo&quot;, (msg, index) &#x3D;&gt; &#123;</span><br><span class="line">      &#x2F;&#x2F; 使用主键的this</span><br><span class="line">      this.deletetodo(index);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    addtodo(todo) &#123;</span><br><span class="line">      this.todos.unshift(todo);</span><br><span class="line">    &#125;,</span><br><span class="line">    deletetodo(index) &#123;</span><br><span class="line">      this.todos.splice(index, 1);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 删除所有选中</span><br><span class="line">    deletecompleteTodos() &#123;</span><br><span class="line">      this.todos &#x3D; this.todos.filter((todo) &#x3D;&gt; !todo.complete);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 全选或者全不选</span><br><span class="line">    selectAlltodos(check) &#123;</span><br><span class="line">      this.todos.forEach((todo) &#x3D;&gt; (todo.complete &#x3D; check));</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    &#x2F;&#x2F;深度监视</span><br><span class="line">    todos: &#123;</span><br><span class="line">      deep: true, &#x2F;&#x2F;深度监视</span><br><span class="line">      handler: function (value) &#123;</span><br><span class="line">        &#x2F;&#x2F; 将todos最新的值保存到localstorage  存的也要保证是json</span><br><span class="line">        storageUtil.savetodos(value)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F; handler:storageUtil.savetodos  </span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    TodoHeader,</span><br><span class="line">    TodoList,</span><br><span class="line">    TodoFooter,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.todo-container &#123;</span><br><span class="line">  width: 600px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.todo-container .todo-wrap &#123;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  border: 1px solid #ddd;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--TodoHeader.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;todo-header&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;请输入你的任务名称,按回车键确认&quot; v-model&#x3D;&quot;title&quot; @keyup.enter&#x3D;&quot;addItem&quot; &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    addtodo: Function</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    addItem() &#123;</span><br><span class="line">      const title &#x3D; this.title.trim();</span><br><span class="line">      if (!title) &#123;</span><br><span class="line">        alert(&quot;输入为空&quot;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      const todo &#x3D; &#123;</span><br><span class="line">        title,</span><br><span class="line">        complete: false,</span><br><span class="line">      &#125;;</span><br><span class="line">      &#x2F;&#x2F; this.addtodo(todo);</span><br><span class="line">      &#x2F;&#x2F; 触发自定义事件</span><br><span class="line">      this.$emit(&#39;addtodo&#39;,todo)</span><br><span class="line">      this.title &#x3D; &quot;&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.todo-header input &#123;</span><br><span class="line">  width: 570px;</span><br><span class="line">  height: 28px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">&#125;</span><br><span class="line">.todo-header input:focus &#123;</span><br><span class="line">  outline: none;</span><br><span class="line">  border-color: rgba(82, 168, 236, 0.8);</span><br><span class="line">  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),</span><br><span class="line">    0 0 8px rgba(82, 168, 236, 0.8);</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--TodoList.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;ul class&#x3D;&quot;todo-main&quot;&gt;</span><br><span class="line">  &lt;TodoItem v-for&#x3D;&quot;(todo,index) in todos&quot; :key&#x3D;&quot;index&quot; :todo&#x3D;&quot;todo&quot; :index&#x3D;&quot;index&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;ul&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import TodoItem from &#39;.&#x2F;TodoItem.vue&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    props:&#123;</span><br><span class="line">        todos:Array,</span><br><span class="line">        &#x2F;&#x2F; deletetodo:Function</span><br><span class="line">    &#125;,</span><br><span class="line">    components:&#123;</span><br><span class="line">        TodoItem</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.todo-main&#123;</span><br><span class="line">    margin-left: 0px;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">    padding: 0px;</span><br><span class="line">&#125;</span><br><span class="line">.todo-empty&#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">    padding-left: 5px;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--TodoItem.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;li @mouseenter&#x3D;&quot;handleshow(true)&quot; @mouseleave&#x3D;&quot;handleshow(false)&quot; :style&#x3D;&quot;&#123;background:bgcolor&#125;&quot;&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;todo.complete&quot; &#x2F;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123;todo.title&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;label&gt;</span><br><span class="line">    &lt;button class&#x3D;&quot;btn btn-danger&quot; v-show&#x3D;&quot;isshow&quot; @click&#x3D;&quot;deleteItem&quot;&gt;删除&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import PubSub from &#39;pubsub-js&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    todo: Object,</span><br><span class="line">    index: Number,</span><br><span class="line">    &#x2F;&#x2F; deletetodo: Function</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      bgcolor: &quot;white&quot;, &#x2F;&#x2F;背景颜色</span><br><span class="line">      isshow: false, &#x2F;&#x2F;按钮显示与否</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleshow(isenter) &#123;</span><br><span class="line">      if (isenter) &#123;</span><br><span class="line">        (this.bgcolor &#x3D; &quot;#ccc&quot;), (this.isshow &#x3D; true);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        (this.bgcolor &#x3D; &quot;white&quot;), (this.isshow &#x3D; false);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    deleteItem() &#123;</span><br><span class="line">      const &#123; todo, index, deletetodo &#125; &#x3D; this;</span><br><span class="line">      if (window.confirm(&#96;确认删除$&#123;todo.title&#125;吗？&#96;)) &#123;</span><br><span class="line">        &#x2F;&#x2F; deletetodo(index);</span><br><span class="line">        &#x2F;&#x2F;发布消息</span><br><span class="line">        PubSub.publish(&#39;deletetodo&#39;,index)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">li &#123;</span><br><span class="line">  list-style-type: none;</span><br><span class="line">  height: 36px;</span><br><span class="line">  line-height: 36px;</span><br><span class="line">  padding: 0 5px;</span><br><span class="line">  border-bottom: 1px solid #ddd;</span><br><span class="line">&#125;</span><br><span class="line">li label &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">li label li input &#123;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  margin-right: 6px;</span><br><span class="line">  position: relative;</span><br><span class="line">  top: -1px;</span><br><span class="line">&#125;</span><br><span class="line">li button &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  display: none;</span><br><span class="line">  margin-top: 3px;</span><br><span class="line">&#125;</span><br><span class="line">li::before &#123;</span><br><span class="line">  content: initial;</span><br><span class="line">&#125;</span><br><span class="line">li:last-child &#123;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--TodoFooter.vue--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;todo-footer&quot;&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;!--&lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;isallcheck&quot; &#x2F;&gt;--&gt;</span><br><span class="line">      &lt;slot name&#x3D;&quot;checkall&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">    &lt;&#x2F;label&gt;</span><br><span class="line">    &lt;!--&lt;span&gt;</span><br><span class="line">      &lt;span&gt;已完成&#123;&#123;completeSize&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">      &#x2F;全部&#123;&#123;todos.length&#125;&#125;</span><br><span class="line">    &lt;&#x2F;span&gt;--&gt;</span><br><span class="line">    &lt;span&gt;</span><br><span class="line">      &lt;slot name&#x3D;&quot;count&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">    &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;!--&lt;button class&#x3D;&quot;btn btn-danger&quot; v-show&#x3D;&quot;completeSize&quot; @click&#x3D;&quot;deletecompleteTodos&quot;&gt;清除已完成任务&lt;&#x2F;button&gt;--&gt;</span><br><span class="line">    &lt;slot name&#x3D;&quot;delete&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    &#x2F;&#x2F; todos: Array,</span><br><span class="line">    &#x2F;&#x2F; deletecompleteTodos: Function,</span><br><span class="line">    &#x2F;&#x2F; selectAlltodos: Function,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; computed: &#123;</span><br><span class="line">  &#x2F;&#x2F;   completeSize() &#123;</span><br><span class="line">  &#x2F;&#x2F;     return this.todos.reduce(</span><br><span class="line">  &#x2F;&#x2F;       (preTotal, todo) &#x3D;&gt; preTotal + (todo.complete ? 1 : 0),</span><br><span class="line">  &#x2F;&#x2F;       0 &#x2F;&#x2F;初始数量</span><br><span class="line">  &#x2F;&#x2F;     );</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F;   isallcheck: &#123;</span><br><span class="line">  &#x2F;&#x2F;     &#x2F;&#x2F; 选中check</span><br><span class="line">  &#x2F;&#x2F;     get() &#123;</span><br><span class="line">  &#x2F;&#x2F;       return this.completeSize &#x3D;&#x3D;&#x3D; this.todos.length &amp;&amp; this.completeSize &gt; 0;</span><br><span class="line">  &#x2F;&#x2F;     &#125;,</span><br><span class="line">  &#x2F;&#x2F;     &#x2F;&#x2F;根据选中来设置列表复选框</span><br><span class="line">  &#x2F;&#x2F;     set(value) &#123;</span><br><span class="line">  &#x2F;&#x2F;       &#x2F;&#x2F;当前checkbox最新的值</span><br><span class="line">  &#x2F;&#x2F;       this.selectAlltodos(value);</span><br><span class="line">  &#x2F;&#x2F;     &#125;,</span><br><span class="line">  &#x2F;&#x2F;   &#125;,</span><br><span class="line">  &#x2F;&#x2F; &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.todo-footer &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  padding-left: 6px;</span><br><span class="line">  margin-top: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.todo-footer label &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin-right: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.todo-footer label input &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  top: -1px;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  margin-right: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.todo-footer button &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  margin-top: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* base.css */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-danger</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#da4f49</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#bd362f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-danger</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bd362f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-danger</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用localstorage存储数据的工具模块  storageUtil.js</span></span><br><span class="line"><span class="comment">// 1、函数  向外暴露一个功能</span></span><br><span class="line"><span class="comment">// 2、对象  向外暴露多个功能</span></span><br><span class="line"><span class="keyword">const</span> TODOS_KEY = <span class="string">'todos_key'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    savetodos(todos) &#123;</span><br><span class="line">        <span class="built_in">window</span>.localStorage.setItem(TODOS_KEY, <span class="built_in">JSON</span>.stringify(todos));</span><br><span class="line">    &#125;,</span><br><span class="line">    readtodos() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(<span class="built_in">window</span>.localStorage.getItem(TODOS_KEY) || <span class="string">"[]"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>vue-resource</p>
<p>npm install vue-resource –save</p>
<p>axios</p>
<p>npm install axios –save    ajax请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div v-if&#x3D;&quot;!repoUrl&quot;&gt;loading&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div v-else&gt;</span><br><span class="line">      most star repo is</span><br><span class="line">      &lt;a href&#x3D;&quot;repoUrl&quot;&gt;&#123;&#123;repoName&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      repoUrl: &quot;&quot;,</span><br><span class="line">      repoName: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    &#x2F;&#x2F; 发ajax请求获取数据</span><br><span class="line">    const url &#x3D; &#96;https:&#x2F;&#x2F;api.github.com&#x2F;search&#x2F;repositories?q&#x3D;v&amp;sort&#x3D;stars&#96;;</span><br><span class="line">    &#x2F;&#x2F; this.$http.get(url).then(</span><br><span class="line">    &#x2F;&#x2F;   (response) &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F;     const result &#x3D; response.data;</span><br><span class="line">    &#x2F;&#x2F;     const mostRepo &#x3D; result.items[0];</span><br><span class="line">    &#x2F;&#x2F;     this.repoUrl &#x3D; mostRepo.html_url;</span><br><span class="line">    &#x2F;&#x2F;     this.repoName &#x3D; mostRepo.name;</span><br><span class="line">    &#x2F;&#x2F;     console.log(result);</span><br><span class="line">    &#x2F;&#x2F;   &#125;,</span><br><span class="line">    &#x2F;&#x2F;   (response) &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F;     alert(&quot;请求失败&quot;);</span><br><span class="line">    &#x2F;&#x2F;   &#125;</span><br><span class="line">    &#x2F;&#x2F; );</span><br><span class="line">    &#x2F;&#x2F; axio发送ajax请求</span><br><span class="line">    axios</span><br><span class="line">      .get(url)</span><br><span class="line">      .then((response) &#x3D;&gt; &#123;</span><br><span class="line">        const result &#x3D; response.data;</span><br><span class="line">        const mostRepo &#x3D; result.items[0];</span><br><span class="line">        this.repoUrl &#x3D; mostRepo.html_url;</span><br><span class="line">        this.repoName &#x3D; mostRepo.name;</span><br><span class="line">        console.log(this.repoUrl)</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch((error) &#x3D;&gt; &#123;</span><br><span class="line">        alert(&quot;请求失败&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueResource <span class="keyword">from</span> <span class="string">'vue-resource'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">Vue.use(VueResource)</span><br><span class="line">    <span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    components: &#123; App &#125;,</span><br><span class="line">    template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(3)</title>
    <url>/2020/08/24/vue-3/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>增删改查<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="css">        <span class="selector-id">#test</span> &#123;</span></span><br><span class="line">            width: 800px;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">        &#125;</span><br><span class="line">        table &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">        &#125;    </span><br><span class="line">        tr &#123;</span><br><span class="line">            background-color: aliceblue;</span><br><span class="line">        &#125;</span><br><span class="line">        form &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            width: 100%;</span><br><span class="line">            justify-content: space-between;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">v-show</span>=<span class="string">"isshow"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"输入序号"</span> <span class="attr">v-model</span>=<span class="string">"person.id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"输入名称"</span> <span class="attr">v-model</span>=<span class="string">"person.name"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"输入分数"</span> <span class="attr">v-model</span>=<span class="string">"person.score"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"新增"</span> @<span class="attr">click.prevent</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"查询"</span> @<span class="attr">click.prevent</span>=<span class="string">"query"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>分数<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">"(person,index) in persons"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"person.id"</span> <span class="attr">:disabled</span>=<span class="string">"isdisabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"person.name"</span> <span class="attr">:disabled</span>=<span class="string">"isdisabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"person.score"</span> <span class="attr">:disabled</span>=<span class="string">"isdisabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"person.time|dateFormate"</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> @<span class="attr">click.prevent</span>=<span class="string">"edit"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> @<span class="attr">click.prevent</span>=<span class="string">"del(index)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> @<span class="attr">click.prevent</span>=<span class="string">"toggle"</span>&gt;</span>更多操作<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义过滤器</span></span></span><br><span class="line"><span class="actionscript">        Vue.filter(<span class="string">'dateFormate'</span>, <span class="function"><span class="keyword">function</span><span class="params">(origin)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(origin)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> y = dt.getFullYear()</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> m = (dt.getMonth() + <span class="number">1</span> + <span class="string">''</span>).padStart(<span class="number">2</span>, <span class="string">'0'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> d = (dt.getDate() + <span class="string">''</span>).padStart(<span class="number">2</span>, <span class="string">'0'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> hh = (dt.getHours() + <span class="string">''</span>).padStart(<span class="number">2</span>, <span class="string">'0'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> mm = (dt.getMinutes() + <span class="string">''</span>).padStart(<span class="number">2</span>, <span class="string">'0'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> ss = (dt.getSeconds() + <span class="string">''</span>).padStart(<span class="number">2</span>, <span class="string">'0'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span> <span class="subst">$&#123;hh&#125;</span>:<span class="subst">$&#123;mm&#125;</span>:<span class="subst">$&#123;ss&#125;</span>`</span></span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#test'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                isdisabled: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">                isshow: <span class="literal">false</span>,</span></span><br><span class="line">                persons: [&#123;</span><br><span class="line">                    id: 1,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"ss"</span>,</span></span><br><span class="line"><span class="actionscript">                    score: <span class="string">"33"</span>,</span></span><br><span class="line"><span class="javascript">                    time: <span class="built_in">Date</span>.now()</span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 2,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"sww"</span>,</span></span><br><span class="line"><span class="actionscript">                    score: <span class="string">"44"</span>,</span></span><br><span class="line"><span class="javascript">                    time: <span class="built_in">Date</span>.now()</span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 3,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"gg"</span>,</span></span><br><span class="line"><span class="actionscript">                    score: <span class="string">"55"</span>,</span></span><br><span class="line"><span class="javascript">                    time: <span class="built_in">Date</span>.now()</span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 4,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"swww"</span>,</span></span><br><span class="line"><span class="actionscript">                    score: <span class="string">"66"</span>,</span></span><br><span class="line"><span class="javascript">                    time: <span class="built_in">Date</span>.now()</span></span><br><span class="line">                &#125;],</span><br><span class="line">                person: &#123;</span><br><span class="line"><span class="actionscript">                    id: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                    name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">                    score: <span class="string">''</span>,</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                edit() &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isdisabled = !<span class="keyword">this</span>.isdisabled</span></span><br><span class="line">                &#125;,</span><br><span class="line">                toggle() &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isshow = !<span class="keyword">this</span>.isshow</span></span><br><span class="line">                &#125;,</span><br><span class="line">                del(index) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.splice(index, <span class="number">1</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                add() &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.persons.time = <span class="built_in">Date</span>.now()</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.push(<span class="keyword">this</span>.person)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.person = &#123;</span></span><br><span class="line"><span class="actionscript">                        id: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                        name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">                        score: <span class="string">''</span>,</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                query() &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> newPerson = <span class="keyword">this</span>.persons.filter(<span class="function">(<span class="params">person</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">if</span> (person.score === <span class="keyword">this</span>.person.score) &#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="keyword">return</span> <span class="literal">true</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons = newPerson</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>插件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-my-directive</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue-myPlugin.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 声明使用插件(安装插件: 调用插件的install())</span></span></span><br><span class="line"><span class="actionscript">  Vue.use(MyPlugin) <span class="comment">// 内部会调用插件对象的install()</span></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#test'</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="actionscript">      msg: <span class="string">'HaHa'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  Vue.myGlobalMethod()</span><br><span class="line">  vm.$myMethod()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">window</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> MyPlugin = &#123;&#125;</span><br><span class="line">    MyPlugin.install = <span class="function"><span class="keyword">function</span>(<span class="params">Vue, options</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 添加全局方法或属性</span></span><br><span class="line">        Vue.myGlobalMethod = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Vue函数对象的myGlobalMethod()'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 2. 添加全局资源</span></span><br><span class="line">        Vue.directive(<span class="string">'my-directive'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">el, binding</span>) </span>&#123;</span><br><span class="line">            el.textContent = <span class="string">'my-directive----'</span> + binding.value</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// 4. 添加实例方法</span></span><br><span class="line">        Vue.prototype.$myMethod = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'vm $myMethod()'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.MyPlugin = MyPlugin</span><br><span class="line">&#125;)(<span class="built_in">window</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>组件构造器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">my-component1</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">my-component1</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125; aka &#123;&#123;alias&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// Vue.component('my-component', Profile)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// Vue.component('my-component', obj)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 1)注册组件，传入一个扩展过的构造器</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let Profile = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         // 注意 创建组件指定组件的模板的时候，模板只能有一个根元素</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        //         template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;firstName&#125;&#125;</span><span class="xml"> </span><span class="template-variable">&#123;&#123;lastName&#125;&#125;</span><span class="xml"> aka </span><span class="template-variable">&#123;&#123;alias&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         data: function() &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             return &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//                 img: 'https://cn.vuejs.org/images/logo.png',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//                 firstName: 'Walter',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//                 lastName: 'White',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//                 alias: 'Heisenberg'</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     &#125;)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 2)注册组件，传入一个选项对象 (自动调用 Vue.extend)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let obj = &#123;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        //     template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;firstName&#125;&#125;</span><span class="xml"> </span><span class="template-variable">&#123;&#123;lastName&#125;&#125;</span><span class="xml"> aka </span><span class="template-variable">&#123;&#123;alias&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     data: function() &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         return &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             img: 'https://cn.vuejs.org/images/logo.png',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             firstName: 'Walter',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             lastName: 'White',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             alias: 'Heisenberg'</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 3)获取注册的组件 (始终返回构造器)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// Vue.component('my-component', &#123;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        //     template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;firstName&#125;&#125;</span><span class="xml"> </span><span class="template-variable">&#123;&#123;lastName&#125;&#125;</span><span class="xml"> aka </span><span class="template-variable">&#123;&#123;alias&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     data: function() &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         return &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             img: 'https://cn.vuejs.org/images/logo.png',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             firstName: 'Walter',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             lastName: 'White',</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//             alias: 'Heisenberg'</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//自定义组件</span></span></span><br><span class="line"><span class="actionscript">        Vue.component(<span class="string">'my-component'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            template: <span class="string">'#info'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    img: <span class="string">'https://cn.vuejs.org/images/logo.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    firstName: <span class="string">'Walter'</span>,</span></span><br><span class="line"><span class="actionscript">                    lastName: <span class="string">'White'</span>,</span></span><br><span class="line"><span class="actionscript">                    alias: <span class="string">'Heisenberg'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo'</span>,</span></span><br><span class="line">            data: &#123;&#125;,</span><br><span class="line">            methods: &#123;&#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo2'</span>,</span></span><br><span class="line">            data: &#123;&#125;,</span><br><span class="line">            methods: &#123;&#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">// 局部组件</span></span></span><br><span class="line">            components: &#123;</span><br><span class="line"><span class="actionscript">                <span class="string">'my-component1'</span>: &#123;</span></span><br><span class="line"><span class="actionscript">                    template: <span class="string">'#info'</span>,</span></span><br><span class="line"><span class="actionscript">                    data: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                            img: <span class="string">'https://cn.vuejs.org/images/logo.png'</span>,</span></span><br><span class="line"><span class="actionscript">                            firstName: <span class="string">'Walter'</span>,</span></span><br><span class="line"><span class="actionscript">                            lastName: <span class="string">'White'</span>,</span></span><br><span class="line"><span class="actionscript">                            alias: <span class="string">'Heisenberg'</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义组件使用data&amp;method<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo2"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 需要在vue的实例中实现对应的方法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">my-component</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"appFun"</span>&gt;</span>点击1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"xxxFun"</span>&gt;</span>点击2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125; aka &#123;&#123;alias&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//自定义组件</span></span></span><br><span class="line"><span class="actionscript">        Vue.component(<span class="string">'my-component'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            template: <span class="string">'#info'</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="comment">//使用函数返回data，每次创建一次新的组件都会调用并绑定数据</span></span></span><br><span class="line"><span class="actionscript">            data: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    img: <span class="string">'https://cn.vuejs.org/images/logo.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    firstName: <span class="string">'Walter'</span>,</span></span><br><span class="line"><span class="actionscript">                    lastName: <span class="string">'White'</span>,</span></span><br><span class="line"><span class="actionscript">                    alias: <span class="string">'Heisenberg'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                xxxFun() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"xxxFun"</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo2'</span>,</span></span><br><span class="line">            data: &#123;&#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                appFun() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"appFun"</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义动态组件切换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"toggle"</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;first v-if="isShow"&gt;&lt;/first&gt;</span></span><br><span class="line"><span class="comment">        &lt;second v-else&gt;&lt;/second&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 动态组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">component</span> <span class="attr">v-bind:is</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"info1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"info2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        Vue.component(<span class="string">'first'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            template: <span class="string">'#info1'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    img: <span class="string">'https://cn.vuejs.org/images/logo.png'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        Vue.component(<span class="string">'second'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            template: <span class="string">'#info2'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    img2: <span class="string">'http://www.staticfile.org/assets/images/qiniu.png'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo2'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                name: <span class="string">'first'</span>,</span></span><br><span class="line"><span class="actionscript">                isShow: <span class="literal">false</span>,</span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                toggle() &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isShow = !<span class="keyword">this</span>.isShow</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.name = <span class="keyword">this</span>.name === <span class="string">"first"</span> ? <span class="string">"second"</span> : <span class="string">"first"</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(2)</title>
    <url>/2020/08/24/vue-2/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件处理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 绑定监听:</span></span><br><span class="line"><span class="comment">  v-on:xxx="fun"</span></span><br><span class="line"><span class="comment">  @xxx="fun"</span></span><br><span class="line"><span class="comment">  @xxx="fun(参数)"</span></span><br><span class="line"><span class="comment">  默认事件形参: event</span></span><br><span class="line"><span class="comment">  隐含属性对象: $event</span></span><br><span class="line"><span class="comment">2. 事件修饰符:</span></span><br><span class="line"><span class="comment">  .prevent : 阻止事件的默认行为 event.preventDefault()</span></span><br><span class="line"><span class="comment">  .stop : 停止事件冒泡 event.stopPropagation()</span></span><br><span class="line"><span class="comment">.self:只有当前元素触发才会执行</span></span><br><span class="line"><span class="comment">.capture:事件冒泡变为事件捕获（反向传递）</span></span><br><span class="line"><span class="comment">3. 按键修饰符</span></span><br><span class="line"><span class="comment">  .keycode : 操作的是某个keycode值的健</span></span><br><span class="line"><span class="comment">  .enter : 操作的是enter键</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>绑定监听<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">"test1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"test1"</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"test2('abc')"</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"test3('abcd', $event)"</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> @<span class="attr">click.prevent</span>=<span class="string">"test4"</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 200px;height: 200px;background: red"</span> @<span class="attr">click.self</span>=<span class="string">"test5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 100px;height: 100px;background: blue"</span> @<span class="attr">click.stop</span>=<span class="string">"test6"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>按键修饰符<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当点击enter是事件触发，keycode值为13或者直接设置keyup为enter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.13</span>=<span class="string">"test7"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.112</span>=<span class="string">"test7"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.enter</span>=<span class="string">"test7"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//自定义别名</span></span></span><br><span class="line">      Vue.config.keyCodes.f1=112</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#example'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                test1(event) &#123;</span><br><span class="line">                    alert(event.target.innerHTML)</span><br><span class="line">                &#125;,</span><br><span class="line">                test2(msg) &#123;</span><br><span class="line">                    alert(msg)</span><br><span class="line">                &#125;,</span><br><span class="line">                test3(msg, event) &#123;</span><br><span class="line"><span class="actionscript">                    alert(msg + <span class="string">'---'</span> + event.target.textContent)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                test4() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'点击了链接'</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                test5() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'out'</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                test6() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'inner'</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                test7(event) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(event.keyCode)</span></span><br><span class="line">                    alert(event.target.value)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单输入绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 使用v-model(双向数据绑定)自动收集数据</span></span><br><span class="line"><span class="comment">  text/textarea</span></span><br><span class="line"><span class="comment">  checkbox</span></span><br><span class="line"><span class="comment">  radio</span></span><br><span class="line"><span class="comment">  select</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/xxx"</span> @<span class="attr">submit.prevent</span>=<span class="string">"handleSubmit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">v-model</span>=<span class="string">"pwd"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">value</span>=<span class="string">"女"</span> <span class="attr">v-model</span>=<span class="string">"sex"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">v-model</span>=<span class="string">"sex"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>爱好: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"basket"</span> <span class="attr">value</span>=<span class="string">"basket"</span> <span class="attr">v-model</span>=<span class="string">"likes"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"basket"</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"foot"</span> <span class="attr">value</span>=<span class="string">"foot"</span> <span class="attr">v-model</span>=<span class="string">"likes"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"foot"</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"pingpang"</span> <span class="attr">value</span>=<span class="string">"pingpang"</span> <span class="attr">v-model</span>=<span class="string">"likes"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pingpang"</span>&gt;</span>乒乓<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>城市: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"cityId"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>未选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">:value</span>=<span class="string">"city.id"</span> <span class="attr">v-for</span>=<span class="string">"(city, index) in allCitys"</span> <span class="attr">:key</span>=<span class="string">"city.id"</span>&gt;</span>&#123;&#123;city.name&#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>介绍: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">v-model</span>=<span class="string">"info"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#demo'</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="actionscript">      username: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">      pwd: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">      sex: <span class="string">'男'</span>,</span></span><br><span class="line"><span class="actionscript">      likes: [<span class="string">'foot'</span>],</span></span><br><span class="line"><span class="actionscript">      allCitys: [&#123;id: <span class="number">1</span>, name: <span class="string">'BJ'</span>&#125;, &#123;id: <span class="number">2</span>, name: <span class="string">'SS'</span>&#125;, &#123;id: <span class="number">3</span>, name: <span class="string">'SZ'</span>&#125;],</span></span><br><span class="line"><span class="actionscript">      cityId: <span class="string">'2'</span>,</span></span><br><span class="line"><span class="actionscript">      info: <span class="string">''</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      handleSubmit () &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.username, <span class="keyword">this</span>.pwd, <span class="keyword">this</span>.sex, <span class="keyword">this</span>.likes, <span class="keyword">this</span>.cityId, <span class="keyword">this</span>.info)</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'提交注册的ajax请求'</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">常用的生命周期方法</span></span><br><span class="line"><span class="comment">  created()/mounted(): 发送ajax请求, 启动定时器等异步任务</span></span><br><span class="line"><span class="comment">  beforeDestory(): 做收尾工作, 如: 清除定时器</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"destroyVue"</span>&gt;</span>destory vue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span>河南城建学院<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#test'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                isShow: <span class="literal">true</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">//初始化阶段</span></span></span><br><span class="line">            beforeCreate() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'beforeCreate'</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            created() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'created'</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            beforeMount() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'beforeMount'</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            mounted() &#123; <span class="comment">//初始化后立即调用</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 执行异步任务</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'mounted'</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.intervalId = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'-----'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isShow = !<span class="keyword">this</span>.isShow</span></span><br><span class="line">                &#125;, 1000)</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">//更新阶段</span></span></span><br><span class="line">            beforeUpdate() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'beforeUpdate'</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            updated() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'updated'</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">//销毁阶段</span></span></span><br><span class="line">            beforeDestroy() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'beforeDestroy'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 执行收尾的工作</span></span></span><br><span class="line"><span class="actionscript">                clearInterval(<span class="keyword">this</span>.intervalId)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            destroyed() &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'destroyed'</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">              <span class="comment">//销毁vue实例: vm.$destory()</span></span></span><br><span class="line">                destroyVue() &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.$destroy()</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过渡&amp;动画<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/*v-enter v-enter-to v-enter-active 写transition时不用加name*/</span></span></span><br><span class="line"><span class="css">        <span class="comment">/*v-leav v-leav-to v-leav-active*/</span></span></span><br><span class="line"><span class="css">        <span class="comment">/*默认类名、自定义类名前缀、钩子函数、自定义类名*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.xxx-enter-active</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.xxx-leave-active</span> &#123;</span></span><br><span class="line">            transition: opacity 1s</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/*指定隐藏时的样式*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.xxx-enter</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.xxx-leave-to</span> &#123;</span></span><br><span class="line">            opacity: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.move-enter-active</span> &#123;</span></span><br><span class="line">            transition: all 1s</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.move-leave-active</span> &#123;</span></span><br><span class="line">            transition: all 3s</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.move-enter</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.move-leave-to</span> &#123;</span></span><br><span class="line">            opacity: 0;</span><br><span class="line">            transform: translateX(20px)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.bounce-enter-active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation</span>: <span class="selector-tag">bounce-in</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.bounce-leave-active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation</span>: <span class="selector-tag">bounce-in</span> <span class="selector-class">.5s</span> <span class="selector-tag">reverse</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> bounce-in &#123;</span></span><br><span class="line">            0% &#123;</span><br><span class="line">                transform: scale(0);</span><br><span class="line">            &#125;</span><br><span class="line">            50% &#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.5</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">            100% &#123;</span><br><span class="line">                transform: scale(1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /* .v-enter &#123;</span><br><span class="line">            opacity: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.v-enter-active</span> &#123;</span></span><br><span class="line">            transition: all 2s;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.v-enter-to</span> &#123;</span></span><br><span class="line">            opacity: 1;</span><br><span class="line">            margin-left: 100px;</span><br><span class="line">        &#125; */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. vue动画的理解</span></span><br><span class="line"><span class="comment">  操作css的trasition或animation</span></span><br><span class="line"><span class="comment">  vue会给目标元素添加/移除特定的class</span></span><br><span class="line"><span class="comment">2. 基本过渡动画的编码</span></span><br><span class="line"><span class="comment">  1). 在目标元素外包裹&lt;transition name="xxx"&gt;</span></span><br><span class="line"><span class="comment">  2). 定义class样式</span></span><br><span class="line"><span class="comment">    1&gt;. 指定过渡样式: transition</span></span><br><span class="line"><span class="comment">    2&gt;. 指定隐藏时的样式: opacity/其它</span></span><br><span class="line"><span class="comment">3. 过渡的类名</span></span><br><span class="line"><span class="comment">  xxx-enter-active: 指定显示的transition</span></span><br><span class="line"><span class="comment">  xxx-leave-active: 指定隐藏的transition</span></span><br><span class="line"><span class="comment">  xxx-enter-to:转换为的样式</span></span><br><span class="line"><span class="comment">  xxx-enter: 指定隐藏时的样式  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"show = !show"</span>&gt;</span>Toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"xxx"</span> <span class="attr">appear</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"show = !show"</span>&gt;</span>Toggle2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"move"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"show = !show"</span>&gt;</span>Toggle3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 保存动画完成效果  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">appear</span> <span class="attr">v-bind:css</span>=<span class="string">"false"</span> <span class="attr">v-on:before-enter</span>=<span class="string">"beforeEnter"</span> <span class="attr">v-on:enter</span>=<span class="string">"enter"</span> <span class="attr">v-on:after-enter</span>=<span class="string">"afterEnter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">              <span class="comment">&lt;!-- 自定义类名，名称可以随便改 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">appear</span> <span class="attr">enter-class</span>=<span class="string">"A"</span> <span class="attr">enter-active-class</span>=<span class="string">"B"</span> <span class="attr">enter-to-class</span>=<span class="string">"C"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example-2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"show = !show"</span>&gt;</span>Toggle show<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"bounce"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"show"</span> <span class="attr">style</span>=<span class="string">"display: inline-block"</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/velocity/1.2.3/velocity.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo2'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo3'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// beforeEnter(el) &#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     el.style.opacity = "0"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     console.log("beforeEnter")</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// enter(el, done) &#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     // 如果通过js钩子函数来执行过渡动画，必须在动画执行过程中的回调函数中写上el.offsetWidth/el.offsetheight</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     el.style.transition = "all 3s"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     el.offsetWidth</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     console.log("Enter")</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//         // 如果使用钩子函数在一进来就调用就需要延迟调用一下</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     setTimeout(() =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//         done()</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     &#125;, 0.5)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// afterEnter(el) &#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     el.style.opacity = "1"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     el.style.marginLeft = "500px"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     console.log("afterEnter")</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// &#125;</span></span></span><br><span class="line">              </span><br><span class="line"><span class="actionscript">                <span class="comment">//可以使用Velocity库来实现动画效果，只需要指定动画和时间即可</span></span></span><br><span class="line">                beforeEnter(el) &#123;</span><br><span class="line">                &#125;,</span><br><span class="line">                enter(el, done) &#123;</span><br><span class="line">                    Velocity(el, &#123;</span><br><span class="line">                        opacity: 1,</span><br><span class="line"><span class="actionscript">                        marginLeft: <span class="string">'500px'</span></span></span><br><span class="line">                    &#125;, 3000)</span><br><span class="line">                    done()</span><br><span class="line">                &#125;,</span><br><span class="line">                afterEnter(el) &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#example-2'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--直接通过animate.css实现动画--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过渡&amp;动画<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.staticfile.org/animate.css/3.5.1/animate.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"show = !show"</span>&gt;</span>Toggle3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">appear</span> <span class="attr">enter-class</span>=<span class="string">""</span> <span class="attr">enter-active-class</span>=<span class="string">"animated bounceInDown"</span> <span class="attr">enter-to-class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo3'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 理解过滤器</span></span><br><span class="line"><span class="comment">  功能: 对要显示的数据进行特定格式化后再显示</span></span><br><span class="line"><span class="comment">  注意: 并没有改变原本的数据, 可是产生新的对应的数据</span></span><br><span class="line"><span class="comment">只能在插值语法和v-bind中使用、过滤器可以连续使用</span></span><br><span class="line"><span class="comment">&lt;div&gt;&#123;&#123;myData | filterName1|filterName2&#125;&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">2. 编码</span></span><br><span class="line"><span class="comment">  1). 定义过滤器</span></span><br><span class="line"><span class="comment">    Vue.filter(filterName, function(value[,arg1,arg2,...])&#123;</span></span><br><span class="line"><span class="comment">      // 进行一定的数据处理</span></span><br><span class="line"><span class="comment">      return newValue</span></span><br><span class="line"><span class="comment">    &#125;)</span></span><br><span class="line"><span class="comment">  2). 使用过滤器</span></span><br><span class="line"><span class="comment">    &lt;div&gt;&#123;&#123;myData | filterName&#125;&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;div&gt;&#123;&#123;myData | filterName(arg)&#125;&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--需求: 对当前时间进行指定格式显示--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>显示格式化的日期时间<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;time&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>最完整的: &#123;&#123;time | dateString&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>年月日: &#123;&#123;time | dateString('YYYY-MM-DD')&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>时分秒: &#123;&#123;time | dateString('HH:mm:ss')&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;name|formateStr&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/moment.js/2.27.0/moment.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义过滤器</span></span></span><br><span class="line"><span class="actionscript">        Vue.filter(<span class="string">'dateString'</span>, <span class="function"><span class="keyword">function</span><span class="params">(value, format = <span class="string">'YYYY-MM-DD HH:mm:ss'</span>)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> moment(value).format(format);</span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#test'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                time: <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line">            &#125;,</span><br><span class="line">            mounted() &#123;</span><br><span class="line"><span class="javascript">                setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.time = <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line">                &#125;, 1000)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">'#test1'</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">          name:<span class="string">'李华，小明，小明2，小明3'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        filters:&#123;</span><br><span class="line"><span class="actionscript">            <span class="string">'formateStr'</span>:<span class="function"><span class="keyword">function</span><span class="params">(value)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">              value=value.replace(<span class="regexp">/小明/g</span>,<span class="string">"张三"</span>)</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">return</span> value</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 注册全局指令</span></span><br><span class="line"><span class="comment">  Vue.directive('my-directive', function(el, binding)&#123;</span></span><br><span class="line"><span class="comment">    el.innerHTML = binding.value.toupperCase()&#125;)</span></span><br><span class="line"><span class="comment">2. 注册局部指令</span></span><br><span class="line"><span class="comment">  directives : &#123;</span></span><br><span class="line"><span class="comment">    'my-directive' : &#123;</span></span><br><span class="line"><span class="comment">        bind (el, binding) &#123;</span></span><br><span class="line"><span class="comment">          el.innerHTML = binding.value.toupperCase()&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">3. 使用指令</span></span><br><span class="line"><span class="comment">  v-my-directive='xxx'</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">需求: 自定义2个指令</span></span><br><span class="line"><span class="comment">  1. 功能类型于v-text, 但转换为全大写</span></span><br><span class="line"><span class="comment">  2. 功能类型于v-text, 但转换为全小写</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-upper-text</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-lower-text</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-color</span>&gt;</span></span><br><span class="line">        一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-color</span>=<span class="string">"'blue'"</span>&gt;</span></span><br><span class="line">        一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line">        一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-upper-text</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-lower-text</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 注册一个全局指令</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// el: 指令所在的标签对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// binding: 包含指令相关数据的容器对象  bind:指令被绑定到元素上的时候执行</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//inserted:绑定指令的元素被添加到父元素上的时候调用</span></span></span><br><span class="line"><span class="actionscript">        Vue.directive(<span class="string">'upper-text'</span>, <span class="function"><span class="keyword">function</span><span class="params">(el, binding)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(el, binding)</span></span><br><span class="line">            el.textContent = binding.value.toUpperCase()</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">      <span class="comment">//注册的指令传参</span></span></span><br><span class="line"><span class="actionscript">      Vue.directive(<span class="string">'color'</span>, <span class="function"><span class="keyword">function</span><span class="params">(el, binding)</span> </span>&#123;</span></span><br><span class="line">            el.style.color = binding.value</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">      Vue.directive(<span class="string">'color'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">                              bind:<span class="function"><span class="keyword">function</span><span class="params">(el)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        											el.style.color=<span class="string">"red"</span></span></span><br><span class="line">      					&#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">      Vue.directive(<span class="string">'focus'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">                              inserted:<span class="function"><span class="keyword">function</span><span class="params">(el)</span></span>&#123;</span></span><br><span class="line">        											el.focus()</span><br><span class="line">      					&#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#test'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                msg: <span class="string">"I Like You"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">// 注册局部指令</span></span></span><br><span class="line">            directives: &#123;</span><br><span class="line"><span class="actionscript">                <span class="string">'lower-text'</span> (el, binding) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(el, binding)</span></span><br><span class="line">                    el.textContent = binding.value.toLowerCase()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#test2'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                msg: <span class="string">"I Like You Too"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">          directives:&#123;</span><br><span class="line"><span class="actionscript">            <span class="string">'color'</span>:&#123;</span></span><br><span class="line"><span class="actionscript">            bind:<span class="function"><span class="keyword">function</span><span class="params">(el)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        		el.style.color=<span class="string">"red"</span></span></span><br><span class="line">        &#125;&#125;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line">            display: none</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">常用内置指令</span></span><br><span class="line"><span class="comment">  v:text : 整体覆盖元素的 textContent</span></span><br><span class="line"><span class="comment">  v-html : 覆盖更新元素的 innerHTML</span></span><br><span class="line"><span class="comment">  v-if : 如果为true, 当前标签才会输出到页面</span></span><br><span class="line"><span class="comment">  v-else: 如果为false, 当前标签才会输出到页面</span></span><br><span class="line"><span class="comment">  v-show : 通过控制display样式来控制显示/隐藏</span></span><br><span class="line"><span class="comment">  v-for : 遍历数组/对象</span></span><br><span class="line"><span class="comment">  v-on : 绑定事件监听, 一般简写为@</span></span><br><span class="line"><span class="comment">  v-bind : 强制绑定解析表达式, 可以省略v-bind</span></span><br><span class="line"><span class="comment">  v-model : 双向数据绑定</span></span><br><span class="line"><span class="comment">  ref : 为某个元素注册一个唯一标识, vue对象通过$refs属性访问这个元素对象</span></span><br><span class="line"><span class="comment">  v-cloak : 使用它防止闪现表达式, 与css配合: [v-cloak] &#123; display: none &#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--p.textContent = content--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--p.innerHTML = content--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">ref</span>=<span class="string">"msg"</span>&gt;</span>abcd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hint"</span>&gt;</span>提示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#example'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">                content: '<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span>'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                hint() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="keyword">this</span>.$refs.msg.innerHTML)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue(1)</title>
    <url>/2020/08/24/vue-1/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">数据驱动页面更新，无需操作dom更新页面（data中的数据可以绑定到html页面中）</span></span><br><span class="line"><span class="comment">      MVVM  View（展示数据与用户交互） ViewModel(&lt;-页面绑定 数据更新-&gt;) Model（数据模型保存数据，处理数据业务逻辑）</span></span><br><span class="line"><span class="comment">  1. 引入Vue.js</span></span><br><span class="line"><span class="comment">  2. 创建Vue对象</span></span><br><span class="line"><span class="comment">    el : 指定根element(选择器) </span></span><br><span class="line"><span class="comment">    data : 初始化数据(页面可以访问) </span></span><br><span class="line"><span class="comment">  3. 双向数据绑定 : v-model</span></span><br><span class="line"><span class="comment">  4. 显示数据 : &#123;&#123;xxx&#125;&#125;</span></span><br><span class="line"><span class="comment">  5. 理解vue的mvvm实现 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--模板--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指令--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"msg"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指令--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello &#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--大括号表达式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123; <span class="comment">// 配置对象 options</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 配置选项(option)</span></span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#test'</span>, <span class="comment">// element: 指定用vue来管理页面中的哪个标签区域</span></span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                msg: <span class="string">'atguigu'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 模板的理解:</span></span><br><span class="line"><span class="comment">  动态的html页面</span></span><br><span class="line"><span class="comment">  包含了一些JS语法代码</span></span><br><span class="line"><span class="comment">    大括号表达式</span></span><br><span class="line"><span class="comment">    指令(以v-开头的自定义标签属性)</span></span><br><span class="line"><span class="comment">2. 双大括号表达式</span></span><br><span class="line"><span class="comment">  语法: &#123;&#123;exp&#125;&#125; 或 &#123;&#123;&#123;exp&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">  功能: 向页面输出数据</span></span><br><span class="line"><span class="comment">  可以调用对象的方法</span></span><br><span class="line"><span class="comment">3. 指令一: 强制数据绑定</span></span><br><span class="line"><span class="comment">  功能: 指定变化的属性值</span></span><br><span class="line"><span class="comment">  完整写法:</span></span><br><span class="line"><span class="comment">    v-bind:xxx='yyy'  //yyy会作为表达式解析执行</span></span><br><span class="line"><span class="comment">  简洁写法:</span></span><br><span class="line"><span class="comment">    :xxx='yyy'</span></span><br><span class="line"><span class="comment">4. 指令二: 绑定事件监听</span></span><br><span class="line"><span class="comment">  功能: 绑定指定事件名的回调函数</span></span><br><span class="line"><span class="comment">  完整写法:</span></span><br><span class="line"><span class="comment">    v-on:click='xxx'</span></span><br><span class="line"><span class="comment">  简洁写法:</span></span><br><span class="line"><span class="comment">    @click='xxx'</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1. 双大括号表达式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;content.toUpperCase()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- textcontent --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- innerhtml --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>2. 指令一: 强制数据绑定<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgurl"</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"url"</span>&gt;</span>访问指定站点<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span>访问指定站点2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span>访问指定站点2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>3. 指令二: 绑定事件监听<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"test"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"test2('hello')"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">                content: '<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span>NBA I Love This Game<span class="tag">&lt;/<span class="name">a</span>&gt;</span>',</span></span></span><br><span class="line"><span class="actionscript">                url: <span class="string">'https://www.baidu.com'</span>,</span></span><br><span class="line"><span class="actionscript">                imgurl: <span class="string">'https://hadoop.apache.org/hadoop-logo.jpg'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                test() &#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'好啊!!!'</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                test2(say) &#123;</span><br><span class="line">                    alert(say)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性和监视<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 计算属性</span></span><br><span class="line"><span class="comment">  在computed属性对象中定义计算属性的方法</span></span><br><span class="line"><span class="comment">  在页面中使用&#123;&#123;方法名&#125;&#125;来显示计算的结果</span></span><br><span class="line"><span class="comment">2. 监视属性:</span></span><br><span class="line"><span class="comment">  通过通过vm对象的$watch()或watch配置来监视指定的属性</span></span><br><span class="line"><span class="comment">  当属性变化时, 回调函数自动调用, 在函数内部进行计算</span></span><br><span class="line"><span class="comment">3. 计算属性高级:</span></span><br><span class="line"><span class="comment">  通过getter/setter实现对属性数据的显示和监视</span></span><br><span class="line"><span class="comment">  计算属性存在缓存, 多次读取只执行一次getter计算</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">  姓: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"First Name"</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Last Name"</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--fullName1是根据fistName和lastName计算产生--&gt;</span></span><br><span class="line">  姓名1(单向): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Full Name1"</span> <span class="attr">v-model</span>=<span class="string">"fullName1"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  姓名2(单向): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Full Name2"</span> <span class="attr">v-model</span>=<span class="string">"fullName2"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  姓名3(双向): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Full Name3"</span> <span class="attr">v-model</span>=<span class="string">"fullName3"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;fullName1&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;fullName1&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#demo'</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="actionscript">      firstName: <span class="string">'A'</span>,</span></span><br><span class="line"><span class="actionscript">      lastName: <span class="string">'B'</span>,</span></span><br><span class="line"><span class="actionscript">       fullName2: <span class="string">'A-B'</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="comment">// 计算属性配置: 值为对象</span></span></span><br><span class="line">    computed: &#123;</span><br><span class="line"><span class="actionscript">      fullName1 () &#123; <span class="comment">// 属性的get()</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'fullName1()'</span>, <span class="keyword">this</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">'-'</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">      &#125;,</span><br><span class="line">      fullName3: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当获取当前属性值时自动调用, 将返回值(根据相关的其它属性数据)作为属性值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">get</span> () &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'fullName3 get()'</span>)</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">'-'</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当属性值发生了改变时自动调用, 监视当前属性值变化, 同步更新相关的其它属性值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">set</span> (value) &#123;<span class="comment">// fullName3的最新value值  A-B23</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'fullName3 set()'</span>, value)</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 更新firstName和lastName</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">const</span> names = value.split(<span class="string">'-'</span>)</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.firstName = names[<span class="number">0</span>]</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.lastName = names[<span class="number">1</span>]</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 配置监视firstName</span></span></span><br><span class="line"><span class="actionscript">      firstName: <span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123; <span class="comment">// 相当于属性的set</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'watch firstName'</span>, value)</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 更新fullName2</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.fullName2 = value + <span class="string">'-'</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="actionscript">  <span class="comment">// 监视lastName</span></span></span><br><span class="line"><span class="actionscript">  vm.$watch(<span class="string">'lastName'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">'$watch lastName'</span>, value)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 更新fullName2</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.fullName2 = <span class="keyword">this</span>.firstName + <span class="string">'-'</span> + value</span></span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>class与style绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.classA</span> &#123;</span></span><br><span class="line">      color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.classB</span> &#123;</span></span><br><span class="line">      background: blue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.classC</span> &#123;</span></span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 理解</span></span><br><span class="line"><span class="comment">  在应用界面中, 某个(些)元素的样式是变化的</span></span><br><span class="line"><span class="comment">  class/style绑定就是专门用来实现动态样式效果的技术</span></span><br><span class="line"><span class="comment">2. class绑定: :class='xxx'</span></span><br><span class="line"><span class="comment">  xxx是字符串</span></span><br><span class="line"><span class="comment">  xxx是对象</span></span><br><span class="line"><span class="comment">  xxx是数组</span></span><br><span class="line"><span class="comment">3. style绑定</span></span><br><span class="line"><span class="comment">  :style="&#123; color: activeColor, fontSize: fontSize + 'px' &#125;"</span></span><br><span class="line"><span class="comment">  其中activeColor/fontSize是data属性</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1. class绑定: :class='xxx'<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">"myClass"</span>&gt;</span>xxx是字符串<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--通过hasClassA来决定样式 可以与三目嵌套 替换flag--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">"&#123;classA: hasClassA, classB: hasClassB&#125;"</span>&gt;</span>xxx是对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">"['classA', 'classB']"</span>&gt;</span>xxx是数组<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--三目运算符来设置样式&lt;p :class="['classA', 'classB',flag?'classC':'']"&gt;xxx是数组&lt;/p&gt;--&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--可以直接设置是否需要该样式,与hasClassA一样,其样式可以看成是从服务端获取的--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">"obj"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>2. style绑定<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">"&#123;color:activeColor/'red', fontSize&#125;"</span>&gt;</span>:style="&#123; color: activeColor, fontSize: fontSize + 'px' &#125;"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"update"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">"obj2"</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">"[obj1,obj2]"</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#demo'</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="actionscript">      flag:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">      myClass: <span class="string">'classA'</span>,</span></span><br><span class="line"><span class="actionscript">      hasClassA: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">      hasClassB: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">      activeColor: <span class="string">'red'</span>,</span></span><br><span class="line"><span class="actionscript">      fontSize: <span class="string">'20px'</span>,</span></span><br><span class="line">      obj:&#123;</span><br><span class="line"><span class="actionscript">      <span class="string">'classA'</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">'classB'</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">'classC'</span>:<span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">       obj1:&#123;</span><br><span class="line"><span class="actionscript">       <span class="string">"background"</span>:<span class="string">'yellow'</span></span></span><br><span class="line">    	&#125;,</span><br><span class="line">      obj2:&#123;</span><br><span class="line"><span class="actionscript">       <span class="string">"fontSize"</span>: <span class="string">'20px'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"color"</span>:<span class="string">'blue'</span></span></span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      update () &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.myClass = <span class="string">'classB'</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.hasClassA = !<span class="keyword">this</span>.hasClassA</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.hasClassB = !<span class="keyword">this</span>.hasClassB</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.activeColor = <span class="string">'yellow'</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.fontSize = <span class="string">'30px'</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 条件渲染指令</span></span><br><span class="line"><span class="comment">  v-if  v-else  v-show</span></span><br><span class="line"><span class="comment">2. 比较v-if与v-show</span></span><br><span class="line"><span class="comment">  如果需要频繁切换 v-show 较好</span></span><br><span class="line"><span class="comment">3. v-once</span></span><br><span class="line"><span class="comment">让该元素只渲染一次</span></span><br><span class="line"><span class="comment">4. v-cloak 在css中需设置 避免应网络问题导致表达式未显示</span></span><br><span class="line"><span class="comment">[v-cloak] &#123;</span></span><br><span class="line"><span class="comment">  display: none;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&lt;div v-cloak&gt;</span></span><br><span class="line"><span class="comment">  &#123;&#123; message &#125;&#125;</span></span><br><span class="line"><span class="comment">&lt;/div&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;p v-if="true"&gt;表白成功&lt;/p&gt;  &lt;p v-if="age&gt;=18"&gt;表白成功&lt;/p&gt;&lt;p v-if="age&lt;18"&gt;表白失败&lt;/p&gt;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"ok"</span>&gt;</span>表白成功<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>表白失败<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"ok"</span>&gt;</span>求婚成功<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"!ok"</span>&gt;</span>求婚失败<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"ok=!ok"</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#demo'</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="actionscript">      ok: <span class="literal">true</span>,</span></span><br><span class="line">      age:18</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 列表显示</span></span><br><span class="line"><span class="comment">  数组: v-for / index</span></span><br><span class="line"><span class="comment">  对象: v-for / key</span></span><br><span class="line"><span class="comment">2. 列表的更新显示</span></span><br><span class="line"><span class="comment">  删除item</span></span><br><span class="line"><span class="comment">  替换item--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试: v-for 遍历数组<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(p, index) in persons"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                &#123;&#123;index&#125;&#125;--&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125; --</span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"deleteP(index)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span> --</span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"updateP(index, &#123;name:'Cat', age: 16&#125;)"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"addP(&#123;name: 'xfzhang', age: 18&#125;)"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试: v-for 遍历对象<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, key) in persons[1]"</span> <span class="attr">:key</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123;key&#125;&#125;=&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// vue本身只是监视了person的改变，没有见识数组内部数据的改变</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                persons: [&#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Tom'</span>,</span></span><br><span class="line">                    age: 18</span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Jack'</span>,</span></span><br><span class="line">                    age: 17</span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Bob'</span>,</span></span><br><span class="line">                    age: 19</span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Mary'</span>,</span></span><br><span class="line">                    age: 16</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                deleteP(index) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.splice(index, <span class="number">1</span>) </span></span><br><span class="line">                &#125;,</span><br><span class="line">                updateP(index, newP) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'updateP'</span>, index, newP)</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// this.persons[index] = newP  // vue根本就不知道</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.splice(index, <span class="number">1</span>, newP)</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// this.persons = []</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                addP(newP) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.push(newP)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染需注意&amp;列表动画<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.v-enter</span> &#123;</span></span><br><span class="line">            opacity: 0;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="css">        <span class="selector-class">.v-enter-active</span> &#123;</span></span><br><span class="line">            transition: all 2s;</span><br><span class="line">        &#125;  </span><br><span class="line"><span class="css">        <span class="selector-class">.v-enter-to</span> &#123;</span></span><br><span class="line">            opacity: 1;</span><br><span class="line">        &#125;   </span><br><span class="line"><span class="css">        <span class="selector-class">.v-leave</span> &#123;</span></span><br><span class="line">            opacity: 1;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.v-leave-active</span> &#123;</span></span><br><span class="line">            transition: all 3s;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.v-leave-to</span> &#123;</span></span><br><span class="line">            opacity: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"添加"</span> @<span class="attr">click.prevent</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 会产生复用，如果在前面插入选中的框数据不会跟着改变 添加一个key，如果相同则复用，不同则重新创建，不能使用index作为key，当列表的内容新增或者删除时index都会发生变化 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">appear</span> <span class="attr">tag</span>=<span class="string">"ul"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(person,index) in persons"</span> <span class="attr">:key</span>=<span class="string">"person.id"</span> @<span class="attr">click</span>=<span class="string">"del(index)"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;index&#125;&#125;----&#123;&#123;person.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                persons: [&#123;</span><br><span class="line">                    id: 1,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"ss"</span></span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 2,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"sww"</span></span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 3,</span><br><span class="line"><span class="actionscript">                    name: <span class="string">"gg"</span></span></span><br><span class="line">                &#125;],</span><br><span class="line"><span class="actionscript">                name: <span class="string">''</span>,</span></span><br><span class="line">                id: 3</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                add() &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.id++</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> newPerson = &#123;</span></span><br><span class="line"><span class="actionscript">                            name: <span class="keyword">this</span>.name,</span></span><br><span class="line"><span class="actionscript">                            id: <span class="keyword">this</span>.id</span></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.unshift(newPerson)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.name = <span class="string">''</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                del(index) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.persons.splice(index, <span class="number">1</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染_过滤与排序<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1. 列表过滤2. 列表排序--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"searchName"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(p, index) in filterPersons"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                &#123;&#123;index&#125;&#125;--&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"setOrderType(2)"</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"setOrderType(1)"</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"setOrderType(0)"</span>&gt;</span>原本顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#demo'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                searchName: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                orderType: <span class="number">0</span>, <span class="comment">// 0代表不排序, 1代表降序, 2代表升序</span></span></span><br><span class="line">                persons: [&#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Tom'</span>,</span></span><br><span class="line">                    age: 18</span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Jack'</span>,</span></span><br><span class="line">                    age: 17</span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Bob'</span>,</span></span><br><span class="line">                    age: 19</span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'Mary'</span>,</span></span><br><span class="line">                    age: 16</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">          <span class="comment">//只要返回的结果没有发生变化，那么计算属性只会执行一次。会将计算属性返回结果缓存，若数据不经常发生变化建议使用，提高性能</span></span></span><br><span class="line">            computed: &#123;</span><br><span class="line">                filterPersons() &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 取出相关数据</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">const</span> &#123;searchName,persons,orderType&#125; = <span class="keyword">this</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> arr = [...persons]</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 过滤数组</span></span></span><br><span class="line">                    if (searchName.trim()) &#123;</span><br><span class="line"><span class="javascript">                        arr = persons.filter(<span class="function"><span class="params">p</span> =&gt;</span> p.name.indexOf(searchName) !== <span class="number">-1</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 排序</span></span></span><br><span class="line">                    if (orderType) &#123;</span><br><span class="line"><span class="actionscript">                        arr.sort(<span class="function"><span class="keyword">function</span><span class="params">(p1, p2)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="keyword">if</span> (orderType === <span class="number">1</span>) &#123; <span class="comment">// 降序</span></span></span><br><span class="line"><span class="actionscript">                                <span class="keyword">return</span> p2.age - p1.age</span></span><br><span class="line"><span class="actionscript">                            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 升序</span></span></span><br><span class="line"><span class="actionscript">                                <span class="keyword">return</span> p1.age - p2.age</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> arr</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">          <span class="comment">//函数每次调用都会执行</span></span></span><br><span class="line">            methods: &#123;</span><br><span class="line">                setOrderType(orderType) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.orderType = orderType</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>ES10-11</title>
    <url>/2020/08/23/ES10-11/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">//二维数组 转化为对象</span></span><br><span class="line">        <span class="keyword">const</span> result = <span class="built_in">Object</span>.fromEntries([</span><br><span class="line">            [<span class="string">'name'</span>, <span class="string">'尚硅谷'</span>],</span><br><span class="line">            [<span class="string">'xueke'</span>, <span class="string">'Java,大数据,前端,云计算'</span>]</span><br><span class="line">        ]);</span><br><span class="line">        <span class="built_in">console</span>.log(result)</span><br><span class="line">            <span class="comment">//Map</span></span><br><span class="line">            <span class="comment">// const m = new Map();</span></span><br><span class="line">            <span class="comment">// m.set('name','ATGUIGU');</span></span><br><span class="line">            <span class="comment">// const result = Object.fromEntries(m);</span></span><br><span class="line">        <span class="comment">//Object.entries ES8 对象转化为二维数组</span></span><br><span class="line">        <span class="keyword">const</span> arr = <span class="built_in">Object</span>.entries(&#123;</span><br><span class="line">            name: <span class="string">"尚硅谷"</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ trim 清除首部 尾部的空格</span></span><br><span class="line"><span class="regexp">        let str = '   iloveyou   ';</span></span><br><span class="line"><span class="regexp">        console.log(str);</span></span><br><span class="line"><span class="regexp">        console.log(str.trimStart());</span></span><br><span class="line"><span class="regexp">        console.log(str.trimEnd());</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">//flat 平</span></span><br><span class="line">        <span class="comment">//将多维数组转化为低位数组</span></span><br><span class="line">        <span class="comment">// const arr = [1,2,3,4,[5,6]];</span></span><br><span class="line">        <span class="comment">// const arr = [1,2,3,4,[5,6,[7,8,9]]];</span></span><br><span class="line">        <span class="comment">//参数为深度 是一个数字</span></span><br><span class="line">        <span class="comment">// console.log(arr.flat(2));  </span></span><br><span class="line">        <span class="comment">//flatMap</span></span><br><span class="line">        <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">        <span class="keyword">const</span> result = arr.flatMap(<span class="function"><span class="params">item</span> =&gt;</span> [item * <span class="number">10</span>]);</span><br><span class="line">        <span class="built_in">console</span>.log(result);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/创建 Symbol</span></span><br><span class="line"><span class="regexp">        let s = Symbol('尚硅谷');</span></span><br><span class="line"><span class="regexp">        console.log(s.description);</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//私有属性</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">            name;<span class="comment">//公有属性</span></span><br><span class="line">            #age;</span><br><span class="line">            #weight;</span><br><span class="line">            <span class="comment">//构造方法</span></span><br><span class="line">            <span class="keyword">constructor</span>(name, age, weight)&#123;</span><br><span class="line">                <span class="keyword">this</span>.name = name;</span><br><span class="line">                this.#age = age;</span><br><span class="line">                this.#weight = weight;</span><br><span class="line">            &#125;</span><br><span class="line">            intro()&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">                console.log(this.#age);</span><br><span class="line">                console.log(this.#weight);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实例化</span></span><br><span class="line">        <span class="keyword">const</span> girl = <span class="keyword">new</span> Person(<span class="string">'晓红'</span>, <span class="number">18</span>, <span class="string">'45kg'</span>);</span><br><span class="line">        <span class="comment">// console.log(girl.name);</span></span><br><span class="line">        <span class="comment">// console.log(girl.#age);</span></span><br><span class="line">        <span class="comment">// console.log(girl.#weight);</span></span><br><span class="line">        girl.intro();</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/allSettled</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/声明两个promise对象</span></span><br><span class="line"><span class="regexp">        const p1 = new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">            setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">                resolve('商品数据 - 1');</span></span><br><span class="line"><span class="regexp">            &#125;, 1000)</span></span><br><span class="line"><span class="regexp">        &#125;);</span></span><br><span class="line"><span class="regexp">        const p2 = new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">            setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">                resolve('商品数据 - 2');</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ reject('出错啦!');</span></span><br><span class="line"><span class="regexp">            &#125;, 1000)</span></span><br><span class="line"><span class="regexp">        &#125;);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 一直返回Promise执行成功 返回内容包括其pro结果和值</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ const result = Promise.allSettled([p1, p2]);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 返回只有两个pro都成功才行 内容都是成功</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 若有一个失败则返回失败，值与pro失败返回值一致</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ const res = Promise.all([p1, p2]);</span></span><br><span class="line"><span class="regexp">        console.log(p1)</span></span><br><span class="line"><span class="regexp">        console.log(res);</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line"><span class="comment">//批量提取页面中数据</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">`&lt;ul&gt;</span></span><br><span class="line"><span class="string">            &lt;li&gt;</span></span><br><span class="line"><span class="string">                &lt;a&gt;肖生克的救赎&lt;/a&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;上映日期: 1994-09-10&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li&gt;</span></span><br><span class="line"><span class="string">                &lt;a&gt;阿甘正传&lt;/a&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;上映日期: 1994-07-06&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;`</span>;</span><br><span class="line">        <span class="comment">//声明正则</span></span><br><span class="line">        <span class="keyword">const</span> reg = <span class="regexp">/&lt;li&gt;.*?&lt;a&gt;(.*?)&lt;\/a&gt;.*?&lt;p&gt;(.*?)&lt;\/p&gt;/</span>sg</span><br><span class="line">            <span class="comment">//调用方法</span></span><br><span class="line">        <span class="keyword">const</span> result = str.matchAll(reg);</span><br><span class="line">        <span class="comment">// for(let v of result)&#123;</span></span><br><span class="line">        <span class="comment">//     console.log(v);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">const</span> arr = [...result];</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ ?. 可以取代层层判断</span></span><br><span class="line"><span class="regexp">        function main(config) &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ const dbHost = config &amp;&amp; config.db &amp;&amp; config.db.host;</span></span><br><span class="line"><span class="regexp">            const dbHost = config ? .db ? .host;</span></span><br><span class="line"><span class="regexp">            console.log(dbHost);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        main(&#123;</span></span><br><span class="line"><span class="regexp">            db: &#123;</span></span><br><span class="line"><span class="regexp">                host: '192.168.1.100',</span></span><br><span class="line"><span class="regexp">                username: 'root'</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">            cache: &#123;</span></span><br><span class="line"><span class="regexp">                host: '192.168.1.200',</span></span><br><span class="line"><span class="regexp">                username: 'admin'</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;动态import</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;btn&quot;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;.&#x2F;js&#x2F;app.js&quot; type&#x3D;&quot;module&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">const btn &#x3D; document.getElementById(&#39;btn&#39;);</span><br><span class="line"></span><br><span class="line">btn.onclick &#x3D; function()&#123;</span><br><span class="line">    import(&#39;.&#x2F;hello.js&#39;).then(module &#x3D;&gt; &#123;</span><br><span class="line">        module.hello();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export function hello()&#123;</span><br><span class="line">    alert(&#39;Hello&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;大整形</span><br><span class="line">        &#x2F;&#x2F; let n &#x3D; 521n;</span><br><span class="line">        &#x2F;&#x2F; console.log(n, typeof(n));</span><br><span class="line">        &#x2F;&#x2F;函数</span><br><span class="line">        &#x2F;&#x2F; let n &#x3D; 123;</span><br><span class="line">        &#x2F;&#x2F; console.log(BigInt(n));</span><br><span class="line">        &#x2F;&#x2F; console.log(BigInt(1.2));&#x2F;&#x2F;不能用于浮点数</span><br><span class="line">        &#x2F;&#x2F;大数值运算</span><br><span class="line">        let max &#x3D; Number.MAX_SAFE_INTEGER;</span><br><span class="line">        console.log(max);</span><br><span class="line">        console.log(max + 1);</span><br><span class="line">        console.log(max + 2);</span><br><span class="line">        console.log(BigInt(max))</span><br><span class="line">        console.log(BigInt(max) + BigInt(1))</span><br><span class="line">        console.log(BigInt(max) + BigInt(2))</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    console.log(globalThis);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>ES</category>
      </categories>
  </entry>
  <entry>
    <title>ES8-9</title>
    <url>/2020/08/23/ES8-9/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Async</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">//async 函数</span></span><br><span class="line">        <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 返回一个字符串</span></span><br><span class="line">            <span class="comment">// return '尚硅谷';</span></span><br><span class="line">            <span class="comment">// 返回的结果不是一个 Promise 类型的对象, 返回的结果就是成功 Promise 对象</span></span><br><span class="line">            <span class="comment">// return;</span></span><br><span class="line">            <span class="comment">//抛出错误, 返回的结果是一个失败的 Promise</span></span><br><span class="line">            <span class="comment">// throw new Error('出错啦!');</span></span><br><span class="line">            <span class="comment">//返回的结果如果是一个 Promise 对象 成功失败返回结果也是成功失败</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                resolve(<span class="string">'成功的数据'</span>);</span><br><span class="line">                <span class="comment">// reject("失败的错误");</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> result = fn();</span><br><span class="line">        <span class="comment">//调用 then 方法</span></span><br><span class="line">        result.then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(value);</span><br><span class="line">        &#125;, reason =&gt; &#123;</span><br><span class="line">            <span class="built_in">console</span>.warn(reason);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/await</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/创建 promise 对象</span></span><br><span class="line"><span class="regexp">        const p = new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ resolve("用户数据");</span></span><br><span class="line"><span class="regexp">            reject("失败啦!");</span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ await 要放在 async 函数中.</span></span><br><span class="line"><span class="regexp">        async function main() &#123;</span></span><br><span class="line"><span class="regexp">            try &#123;</span></span><br><span class="line"><span class="regexp">                let result = await p;/</span><span class="regexp">/await返回结果是Promise成功的值</span></span><br><span class="line"><span class="regexp">                console.log(result);</span></span><br><span class="line"><span class="regexp">            &#125; catch (e) &#123;</span></span><br><span class="line"><span class="regexp">                console.log(e);</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/调用函数</span></span><br><span class="line"><span class="regexp">        main();</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line"><span class="comment">//两者结合实现异步编程</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readWeiXue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        fs.readFile(<span class="string">"./resources/为学.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">            <span class="comment">//如果失败</span></span><br><span class="line">            <span class="keyword">if</span> (err) reject(err);</span><br><span class="line">            <span class="comment">//如果成功</span></span><br><span class="line">            resolve(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readChaYangShi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        fs.readFile(<span class="string">"./resources/插秧诗.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">            <span class="comment">//如果失败</span></span><br><span class="line">            <span class="keyword">if</span> (err) reject(err);</span><br><span class="line">            <span class="comment">//如果成功</span></span><br><span class="line">            resolve(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readGuanShu</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        fs.readFile(<span class="string">"./resources/观书有感.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">            <span class="comment">//如果失败</span></span><br><span class="line">            <span class="keyword">if</span> (err) reject(err);</span><br><span class="line">            <span class="comment">//如果成功</span></span><br><span class="line">            resolve(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//声明一个 async 函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//获取为学内容</span></span><br><span class="line">    <span class="keyword">let</span> weixue = <span class="keyword">await</span> readWeiXue();</span><br><span class="line">    <span class="comment">//获取插秧诗内容</span></span><br><span class="line">    <span class="keyword">let</span> chayang = <span class="keyword">await</span> readChaYangShi();</span><br><span class="line">    <span class="comment">// 获取观书有感</span></span><br><span class="line">    <span class="keyword">let</span> guanshu = <span class="keyword">await</span> readGuanShu();</span><br><span class="line">    <span class="built_in">console</span>.log(weixue.toString());</span><br><span class="line">    <span class="built_in">console</span>.log(chayang.toString());</span><br><span class="line">    <span class="built_in">console</span>.log(guanshu.toString());</span><br><span class="line">&#125;</span><br><span class="line">main();</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;发送AJAX 请求&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 发送 AJAX 请求, 返回的结果是 Promise 对象</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">sendAJAX</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> x = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">                x.open(<span class="string">'GET'</span>, url);</span><br><span class="line">                x.send();</span><br><span class="line">                x.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (x.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (x.status &gt;= <span class="number">200</span> &amp;&amp; x.status &lt; <span class="number">300</span>) &#123;</span><br><span class="line">                            resolve(x.response);</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            reject(x.status);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//promise then 方法测试</span></span><br><span class="line">        <span class="comment">// sendAJAX("https://api.apiopen.top/getJoke").then(value=&gt;&#123;</span></span><br><span class="line">        <span class="comment">//     console.log(value);</span></span><br><span class="line">        <span class="comment">// &#125;, reason=&gt;&#123;&#125;)</span></span><br><span class="line">        <span class="comment">// async 与 await 测试  axios</span></span><br><span class="line">        <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//发送 AJAX 请求</span></span><br><span class="line">            <span class="keyword">let</span> result = <span class="keyword">await</span> sendAJAX(<span class="string">"https://api.apiopen.top/getJoke"</span>);</span><br><span class="line">            <span class="comment">//再次测试</span></span><br><span class="line">            <span class="keyword">let</span> tianqi = <span class="keyword">await</span> sendAJAX(<span class="string">'https://www.tianqiapi.com/api/?version=v1&amp;city=%E5%8C%97%E4%BA%AC&amp;appid=23941491&amp;appsecret=TXoD5e8P'</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(tianqi);</span><br><span class="line">        &#125;</span><br><span class="line">        main();</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ES8 对象方法扩展</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//声明对象</span></span><br><span class="line">        <span class="keyword">const</span> school = &#123;</span><br><span class="line">            name: <span class="string">"尚硅谷"</span>,</span><br><span class="line">            cities: [<span class="string">'北京'</span>, <span class="string">'上海'</span>, <span class="string">'深圳'</span>],</span><br><span class="line">            xueke: [<span class="string">'前端'</span>, <span class="string">'Java'</span>, <span class="string">'大数据'</span>, <span class="string">'运维'</span>]</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//获取对象所有的键</span></span><br><span class="line">        <span class="comment">// console.log(Object.keys(school));</span></span><br><span class="line">        <span class="comment">//获取对象所有的值</span></span><br><span class="line">        <span class="comment">// console.log(Object.values(school));</span></span><br><span class="line">        <span class="comment">//entries 键值对应的数组</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Object</span>.entries(school));</span><br><span class="line">        <span class="comment">//创建 Map 0 1 2 对应值</span></span><br><span class="line">        <span class="keyword">const</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>(<span class="built_in">Object</span>.entries(school));</span><br><span class="line">        <span class="built_in">console</span>.log(m.get(<span class="string">'cities'</span>));</span><br><span class="line">        <span class="comment">//对象属性的描述对象</span></span><br><span class="line">        <span class="comment">// console.log(Object.getOwnPropertyDescriptors(school));</span></span><br><span class="line">        <span class="comment">// const obj = Object.create(null, &#123;</span></span><br><span class="line">        <span class="comment">//     name: &#123;</span></span><br><span class="line">        <span class="comment">//         //设置值</span></span><br><span class="line">        <span class="comment">//         value: '尚硅谷',</span></span><br><span class="line">        <span class="comment">//         //属性特性</span></span><br><span class="line">        <span class="comment">//         writable: true,</span></span><br><span class="line">        <span class="comment">//         configurable: true,</span></span><br><span class="line">        <span class="comment">//         enumerable: true</span></span><br><span class="line">        <span class="comment">//     &#125; </span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">        Rest 参数与 spread 扩展运算符在 ES6 中已经引入，不过 ES6 中只针对于数组，</span><br><span class="line">        在 ES9 中为对象提供了像数组一样的 rest 参数和扩展运算符</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//rest 参数</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">            host,</span></span></span><br><span class="line"><span class="function"><span class="params">            port,</span></span></span><br><span class="line"><span class="function"><span class="params">            ...user</span></span></span><br><span class="line"><span class="function"><span class="params">        &#125;</span>) </span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(host);</span><br><span class="line">            <span class="built_in">console</span>.log(port);</span><br><span class="line">            <span class="built_in">console</span>.log(user);</span><br><span class="line">        &#125;</span><br><span class="line">        connect(&#123;</span><br><span class="line">            host: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">            port: <span class="number">3306</span>,</span><br><span class="line">            username: <span class="string">'root'</span>,</span><br><span class="line">            password: <span class="string">'root'</span>,</span><br><span class="line">            type: <span class="string">'master'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//对象合并</span></span><br><span class="line">        <span class="keyword">const</span> skillOne = &#123;</span><br><span class="line">            q: <span class="string">'天音波'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> skillTwo = &#123;</span><br><span class="line">            w: <span class="string">'金钟罩'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> skillThree = &#123;</span><br><span class="line">            e: <span class="string">'天雷破'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> skillFour = &#123;</span><br><span class="line">            r: <span class="string">'猛龙摆尾'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> mangseng = &#123;...skillOne,</span><br><span class="line">            ...skillTwo,</span><br><span class="line">            ...skillThree,</span><br><span class="line">            ...skillFour</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(mangseng)</span><br><span class="line">            <span class="comment">// ...skillOne   =&gt;  q: '天音波', w: '金钟罩'</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/正则命名分组</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/声明一个字符串</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let str = '&lt;a href="http:/</span><span class="regexp">/www.atguigu.com"&gt;尚硅谷&lt;/</span>a&gt;<span class="string">';</span></span><br><span class="line"><span class="string">        // //提取 url 与 『标签文本』</span></span><br><span class="line"><span class="string">        // const reg = /&lt;a href="(.*)"&gt;(.*)&lt;\/a&gt;/;</span></span><br><span class="line"><span class="string">        // //执行</span></span><br><span class="line"><span class="string">        // const result = reg.exec(str);</span></span><br><span class="line"><span class="string">        // console.log(result);</span></span><br><span class="line"><span class="string">        // // console.log(result[1]);</span></span><br><span class="line"><span class="string">        // // console.log(result[2]);</span></span><br><span class="line"><span class="string">        let str = '</span>&lt;a href=<span class="string">"http://www.atguigu.com"</span>&gt;尚硅谷&lt;<span class="regexp">/a&gt;';</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/分组命名</span></span><br><span class="line"><span class="regexp">        const reg = /</span>&lt;a href="(?&lt;url&gt;.*)"&gt;(?&lt;text&gt;.*)&lt;\/a&gt;/;</span><br><span class="line">        const result = reg.exec(str);</span><br><span class="line">        console.log(result.groups.url);</span><br><span class="line">        console.log(result.groups.text);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">//断言</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        //声明字符串</span><br><span class="line">        let str = 'JS5211314你知道么555啦啦啦';</span><br><span class="line">        //正向断言</span><br><span class="line">        const reg = /\d+(?=啦)/;</span><br><span class="line">        const result = reg.exec(str);</span><br><span class="line">        //反向断言</span><br><span class="line">        const reg = /(?&lt;=么)\d+/;</span><br><span class="line">        const result = reg.exec(str);</span><br><span class="line">        console.log(result);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        //dot  .  元字符  除换行符以外的任意单个字符</span><br><span class="line">        let str = `</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;a&gt;肖生克的救赎&lt;/a&gt;</span><br><span class="line">                &lt;p&gt;上映日期: 1994-09-10&lt;/p&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;a&gt;阿甘正传&lt;/a&gt;</span><br><span class="line">                &lt;p&gt;上映日期: 1994-07-06&lt;/p&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;`;</span><br><span class="line">        //声明正则</span><br><span class="line">        // const reg = /&lt;li&gt;\s+&lt;a&gt;(.*?)&lt;\/a&gt;\s+&lt;p&gt;(.*?)&lt;\/p&gt;/;</span><br><span class="line">        const reg = /&lt;li&gt;.*?&lt;a&gt;(.*?)&lt;\/a&gt;.*?&lt;p&gt;(.*?)&lt;\/p&gt;/gs;</span><br><span class="line">        //执行匹配</span><br><span class="line">        // const result = reg.exec(str);</span><br><span class="line">        let result;</span><br><span class="line">        let data = [];</span><br><span class="line">        while(result = reg.exec(str))&#123;</span><br><span class="line">            data.push(&#123;title: result[1], time: result[2]&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        //输出结果</span><br><span class="line">        console.log(data);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web</category>
        <category>ES</category>
      </categories>
  </entry>
  <entry>
    <title>ES6(3)</title>
    <url>/2020/08/21/ES6-3/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//set</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">//声明一个 set</span></span><br><span class="line">        <span class="keyword">let</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line">        <span class="keyword">let</span> s2 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'大事儿'</span>,<span class="string">'小事儿'</span>,<span class="string">'好事儿'</span>,<span class="string">'坏事儿'</span>,<span class="string">'小事儿'</span>]);</span><br><span class="line">        <span class="comment">//元素个数</span></span><br><span class="line">        <span class="comment">// console.log(s2.size);</span></span><br><span class="line">        <span class="comment">//添加新的元素</span></span><br><span class="line">        <span class="comment">// s2.add('喜事儿');</span></span><br><span class="line">        <span class="comment">//删除元素</span></span><br><span class="line">        <span class="comment">// s2.delete('坏事儿');</span></span><br><span class="line">        <span class="comment">//检测</span></span><br><span class="line">        <span class="comment">// console.log(s2.has('糟心事'));</span></span><br><span class="line">        <span class="comment">//清空</span></span><br><span class="line">        <span class="comment">// s2.clear();</span></span><br><span class="line">        <span class="comment">// console.log(s2);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> v <span class="keyword">of</span> s2)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        let arr = [1,2,3,4,5,4,3,2,1];</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/1. 数组去重</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let result = [...new Set(arr)];</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(result);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2. 交集</span></span><br><span class="line"><span class="regexp">        let arr2 = [4,5,6,5,6];</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let result = [...new Set(arr)].filter(item =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     let s2 = new Set(arr2);/</span><span class="regexp">/ 4 5 6</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     if(s2.has(item))&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/         return true;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     &#125;else&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/         return false;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let result = [...new Set(arr)].filter(item =&gt; new Set(arr2).has(item));</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(result);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/3. 并集</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let union = [...new Set([...arr, ...arr2])];</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(union);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/4. 差集</span></span><br><span class="line"><span class="regexp">        let diff = [...new Set(arr)].filter(item =&gt; !(new Set(arr2).has(item)));</span></span><br><span class="line"><span class="regexp">        console.log(diff);</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line"><span class="comment">//map</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//声明 Map</span></span><br><span class="line">        <span class="keyword">let</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">        <span class="comment">//添加元素</span></span><br><span class="line">        m.set(<span class="string">'name'</span>, <span class="string">'尚硅谷'</span>);</span><br><span class="line">        m.set(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"我们可以改变你!!"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//对象-数组</span></span><br><span class="line">        <span class="keyword">let</span> key = &#123;</span><br><span class="line">            school: <span class="string">'ATGUIGU'</span></span><br><span class="line">        &#125;;</span><br><span class="line">        m.set(key, [<span class="string">'北京'</span>, <span class="string">'上海'</span>, <span class="string">'深圳'</span>]);</span><br><span class="line">        <span class="comment">//size</span></span><br><span class="line">        <span class="comment">// console.log(m.size);</span></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        <span class="comment">// m.delete('name');</span></span><br><span class="line">        <span class="comment">//获取</span></span><br><span class="line">        <span class="comment">// console.log(m.get('change'));</span></span><br><span class="line">        <span class="comment">// console.log(m.get(key));</span></span><br><span class="line">        <span class="comment">//清空</span></span><br><span class="line">        <span class="comment">// m.clear();</span></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> v <span class="keyword">of</span> m) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(m);</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//class</span></span><br><span class="line">   &lt;script&gt;</span><br><span class="line">        <span class="comment">//手机  ES5</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">Phone</span>(<span class="params">brand, price</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.brand = brand;</span><br><span class="line">            <span class="keyword">this</span>.price = price;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加方法</span></span><br><span class="line">        Phone.prototype.call = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"我可以打电话"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实例化对象</span></span><br><span class="line">        <span class="keyword">let</span> Huawei = <span class="keyword">new</span> Phone(<span class="string">'华为'</span>, <span class="number">5999</span>);</span><br><span class="line">        Huawei.call();</span><br><span class="line">        <span class="built_in">console</span>.log(Huawei);</span><br><span class="line">        <span class="comment">//class  ES6</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Shouji</span> </span>&#123;</span><br><span class="line">            <span class="comment">//构造方法 名字不能修改</span></span><br><span class="line">            <span class="keyword">constructor</span>(brand, price) &#123;</span><br><span class="line">                <span class="keyword">this</span>.brand = brand;</span><br><span class="line">                <span class="keyword">this</span>.price = price;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//方法必须使用该语法, 不能使用 ES5 的对象完整形式</span></span><br><span class="line">            call() &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"我可以打电话!!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> onePlus = <span class="keyword">new</span> Shouji(<span class="string">"1+"</span>, <span class="number">1999</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(onePlus);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/静态成员</span></span><br><span class="line"><span class="regexp"> &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/函数对象</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ function Phone()&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ Phone.name = '手机';</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ Phone.change = function()&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     console.log("我可以改变世界");</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 函数对象的原型与实例对象对应</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ Phone.prototype.size = '5.5inch';</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let nokia = new Phone();</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(nokia.name);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ /</span><span class="regexp">/ nokia.change();</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(nokia.size);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/实例对象</span></span><br><span class="line"><span class="regexp">        class Phone &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/静态属性</span></span><br><span class="line"><span class="regexp">            static name = '手机';</span></span><br><span class="line"><span class="regexp">            static change() &#123;</span></span><br><span class="line"><span class="regexp">                console.log("我可以改变世界");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        let nokia = new Phone();</span></span><br><span class="line"><span class="regexp">        console.log(nokia.name); /</span><span class="regexp">/undefined</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/静态属性属于类而不是对象</span></span><br><span class="line"><span class="regexp">        console.log(Phone.name); /</span><span class="regexp">/手机</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ES5实现继承</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//手机</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">Phone</span>(<span class="params">brand, price</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.brand = brand;</span><br><span class="line">            <span class="keyword">this</span>.price = price;</span><br><span class="line">        &#125;</span><br><span class="line">        Phone.prototype.call = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"我可以打电话"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//智能手机</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">SmartPhone</span>(<span class="params">brand, price, color, size</span>)</span>&#123;</span><br><span class="line">            Phone.call(<span class="keyword">this</span>, brand, price);</span><br><span class="line">            <span class="keyword">this</span>.color = color;</span><br><span class="line">            <span class="keyword">this</span>.size = size;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置子级构造函数的原型</span></span><br><span class="line">        SmartPhone.prototype = <span class="keyword">new</span> Phone;</span><br><span class="line">        SmartPhone.prototype.constructor = SmartPhone;</span><br><span class="line">        <span class="comment">//声明子类的方法</span></span><br><span class="line">        SmartPhone.prototype.photo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"我可以拍照"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        SmartPhone.prototype.playGame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"我可以玩游戏"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> chuizi = <span class="keyword">new</span> SmartPhone(<span class="string">'锤子'</span>,<span class="number">2499</span>,<span class="string">'黑色'</span>,<span class="string">'5.5inch'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(chuizi);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ES6 class实现继承</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        class Phone&#123;</span></span><br><span class="line"><span class="regexp">            constructor(brand, price)&#123;/</span><span class="regexp">/构造方法</span></span><br><span class="line"><span class="regexp">                this.brand = brand;</span></span><br><span class="line"><span class="regexp">                this.price = price;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            call()&#123;/</span><span class="regexp">/父类的成员属性</span></span><br><span class="line"><span class="regexp">                console.log("我可以打电话!!");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        class SmartPhone extends Phone &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/构造方法</span></span><br><span class="line"><span class="regexp">            constructor(brand, price, color, size)&#123;</span></span><br><span class="line"><span class="regexp">                super(brand, price);/</span><span class="regexp">/ Phone.call(this, brand, price)</span></span><br><span class="line"><span class="regexp">                this.color = color;</span></span><br><span class="line"><span class="regexp">                this.size = size;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            photo()&#123;</span></span><br><span class="line"><span class="regexp">                console.log("拍照");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            playGame()&#123;</span></span><br><span class="line"><span class="regexp">                console.log("玩游戏");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            call()&#123;/</span><span class="regexp">/重写父类方法</span></span><br><span class="line"><span class="regexp">                console.log('我可以进行视频通话');</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        const xiaomi = new SmartPhone('小米',799,'黑色','4.7inch');</span></span><br><span class="line"><span class="regexp">        console.log(xiaomi);</span></span><br><span class="line"><span class="regexp">        xiaomi.call();</span></span><br><span class="line"><span class="regexp">        xiaomi.photo();</span></span><br><span class="line"><span class="regexp">        xiaomi.playGame();</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//set get</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// get 和 set  </span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">            <span class="keyword">get</span> price() &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"价格属性被读取了"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'iloveyou'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span> price(newVal) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'价格属性被修改了'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实例化对象</span></span><br><span class="line">        <span class="keyword">let</span> s = <span class="keyword">new</span> Phone();</span><br><span class="line">        <span class="built_in">console</span>.log(s.price); <span class="comment">//函数返回值就是该属性的值</span></span><br><span class="line">        s.price = <span class="string">'free'</span>;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ES6 数值</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/0. Number.EPSILON 是 JavaScript 表示的最小精度</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/EPSILON 属性的值接近于 2.2204460492503130808472633361816E-16</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ function equal(a, b)&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     if(Math.abs(a-b) &lt; Number.EPSILON)&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/         return true;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     &#125;else&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/         return false;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(0.1 + 0.2 === 0.3);/</span><span class="regexp">/浮点数相加存在误差</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(equal(0.1 + 0.2, 0.3))</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/1. 二进制和八进制</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let b = 0b1010;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let o = 0o777;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let d = 100;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ let x = 0xff;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(x);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2. Number.isFinite  检测一个数值是否为有限数</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(Number.isFinite(100));</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(Number.isFinite(100/</span><span class="number">0</span>));</span><br><span class="line">        <span class="comment">// console.log(Number.isFinite(Infinity));</span></span><br><span class="line">        <span class="comment">//3. Number.isNaN 检测一个数值是否为 NaN </span></span><br><span class="line">        <span class="comment">// console.log(Number.isNaN(123)); </span></span><br><span class="line">        <span class="comment">//4. Number.parseInt Number.parseFloat字符串转整数</span></span><br><span class="line">        <span class="comment">// console.log(Number.parseInt('5211314love'));//5211314</span></span><br><span class="line">        <span class="comment">// console.log(Number.parseFloat('3.1415926神奇'));//3.1415926</span></span><br><span class="line">        <span class="comment">//5. Number.isInteger 判断一个数是否为整数</span></span><br><span class="line">        <span class="comment">// console.log(Number.isInteger(5));</span></span><br><span class="line">        <span class="comment">// console.log(Number.isInteger(2.5));</span></span><br><span class="line">        <span class="comment">//6. Math.trunc 将数字的小数部分抹掉  </span></span><br><span class="line">        <span class="comment">// console.log(Math.trunc(3.5));</span></span><br><span class="line">        <span class="comment">//7. Math.sign 判断一个数到底为正数 负数 还是零</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">100</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">0</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">-20000</span>));</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/对象方法扩展</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/1. Object.is 判断两个值是否完全相等 </span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(Object.is(120, 120));/</span><span class="regexp">/ === </span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(Object.is(NaN, NaN));/</span><span class="regexp">/ === </span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(NaN === NaN);/</span><span class="regexp">/ === </span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2. Object.assign 对象的合并 有则覆盖，没有则合并</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ const config1 = &#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     host: 'localhost',</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     port: 3306,</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     test: 'test'</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ const config2 = &#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     host: 'http:/</span><span class="regexp">/atguigu.com',</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     port: 33060,</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     test2: 'test2'</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ console.log(Object.assign(config1, config2));</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/3. Object.setPrototypeOf 设置原型对象  Object.getPrototypeof</span></span><br><span class="line"><span class="regexp">        const school = &#123;</span></span><br><span class="line"><span class="regexp">            name: '尚硅谷'</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        const cities = &#123;</span></span><br><span class="line"><span class="regexp">            xiaoqu: ['北京', '上海', '深圳']</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        Object.setPrototypeOf(school, cities);</span></span><br><span class="line"><span class="regexp">        console.log(Object.getPrototypeOf(school));</span></span><br><span class="line"><span class="regexp">        console.log(school);</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;ES6 模块化&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script type=<span class="string">"module"</span>&gt;</span><br><span class="line">        <span class="comment">//1. 通用的导入方式</span></span><br><span class="line">        <span class="comment">//引入 m1.js 模块内容</span></span><br><span class="line">        <span class="comment">// import * as m1 from "./src/js/m1.js";</span></span><br><span class="line">        <span class="comment">// //引入 m2.js 模块内容</span></span><br><span class="line">        <span class="comment">// import * as m2 from "./src/js/m2.js";</span></span><br><span class="line">        <span class="comment">// //引入 m3.js </span></span><br><span class="line">        <span class="comment">// import * as m3 from "./src/js/m3.js";</span></span><br><span class="line">        <span class="comment">//m3.default.change()//调用默认暴露</span></span><br><span class="line">        <span class="comment">//2. 解构赋值形式</span></span><br><span class="line">        <span class="comment">// import &#123;school, teach&#125; from "./src/js/m1.js";</span></span><br><span class="line">        <span class="comment">// import &#123;school as guigu, findJob&#125; from "./src/js/m2.js";</span></span><br><span class="line">        <span class="comment">// import &#123;default as m3&#125; from "./src/js/m3.js";</span></span><br><span class="line">        <span class="comment">//3. 简便形式  针对默认暴露</span></span><br><span class="line">        <span class="comment">// import m3 from "./src/js/m3.js";</span></span><br><span class="line">        <span class="comment">// console.log(m3);</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="./</span>src/js/app.js<span class="string">" type="</span><span class="built_in">module</span><span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">//1分别暴露m1.js</span></span><br><span class="line"><span class="string">export let school = '尚硅谷';</span></span><br><span class="line"><span class="string">export function teach() &#123;</span></span><br><span class="line"><span class="string">    console.log("</span>我们可以教给你开发技能<span class="string">");</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">//2统一暴露m2.js</span></span><br><span class="line"><span class="string">let school = '尚硅谷';</span></span><br><span class="line"><span class="string">function findJob()&#123;</span></span><br><span class="line"><span class="string">    console.log("</span>我们可以帮助你找工作!!<span class="string">");</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">export &#123;school, findJob&#125;;</span></span><br><span class="line"><span class="string">//3默认暴露m3.js</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">    school: 'ATGUIGU',</span></span><br><span class="line"><span class="string">    change: function()&#123;</span></span><br><span class="line"><span class="string">        console.log("</span>我们可以改变你!!<span class="string">");&#125;&#125;</span></span><br><span class="line"><span class="string">//4入口文件app.js</span></span><br><span class="line"><span class="string">//模块引入</span></span><br><span class="line"><span class="string">import * as m1 from "</span>./m1.js<span class="string">";</span></span><br><span class="line"><span class="string">import * as m2 from "</span>./m2.js<span class="string">";</span></span><br><span class="line"><span class="string">import * as m3 from "</span>./m3.js<span class="string">";</span></span><br><span class="line"><span class="string">// console.log(m1);</span></span><br><span class="line"><span class="string">// console.log(m2);</span></span><br><span class="line"><span class="string">// console.log(m3);</span></span><br><span class="line"><span class="string">// m1.teach();</span></span><br><span class="line"><span class="string">// m2.findJob();</span></span><br><span class="line"><span class="string">// m3.default.change();</span></span><br><span class="line"><span class="string">//修改背景颜色为粉色，引入npm包</span></span><br><span class="line"><span class="string">import $ from 'jquery';// const $ = require("</span>jquery<span class="string">");</span></span><br><span class="line"><span class="string">$('body').css('background','pink');</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        //ES6模块化代码打包,对上方js代码打包</span></span><br><span class="line"><span class="comment">        1. 安装工具 npm i babel-cli babel-preset-env browserify(webpack) -D</span></span><br><span class="line"><span class="comment">        2. 编译 npx babel src/js -d dist/js --presets=babel-preset-env</span></span><br><span class="line"><span class="comment">        3. 打包 npx browserify dist/js/app.js -o dist/bundle.js</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dist/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">// includes   indexOf-返回结果是数字  ES7语法</span></span><br><span class="line">        <span class="comment">// const mingzhu = ['西游记','红楼梦','三国演义','水浒传'];</span></span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="comment">// console.log(mingzhu.includes('西游记'));</span></span><br><span class="line">        <span class="comment">// console.log(mingzhu.includes('金瓶梅'));</span></span><br><span class="line">        <span class="comment">// ** 幂运算</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">2</span> ** <span class="number">10</span>);  </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">10</span>));</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>ES</category>
      </categories>
  </entry>
  <entry>
    <title>ES6(2)</title>
    <url>/2020/08/21/ES6-2/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;symbol&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//创建Symbol</span></span><br><span class="line">        <span class="keyword">let</span> s = <span class="built_in">Symbol</span>();</span><br><span class="line">        <span class="comment">// console.log(s, typeof s);</span></span><br><span class="line">        <span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>(<span class="string">'尚硅谷'</span>);</span><br><span class="line">        <span class="keyword">let</span> s3 = <span class="built_in">Symbol</span>(<span class="string">'尚硅谷'</span>);</span><br><span class="line">        <span class="comment">//Symbol.for 创建</span></span><br><span class="line">        <span class="keyword">let</span> s4 = <span class="built_in">Symbol</span>.for(<span class="string">'尚硅谷'</span>);</span><br><span class="line">        <span class="keyword">let</span> s5 = <span class="built_in">Symbol</span>.for(<span class="string">'尚硅谷'</span>);</span><br><span class="line">        <span class="comment">//不能与其他数据进行运算</span></span><br><span class="line">        <span class="comment">//    let result = s + 100;</span></span><br><span class="line">        <span class="comment">//    let result = s &gt; 100;</span></span><br><span class="line">        <span class="comment">//    let result = s + s;</span></span><br><span class="line">        <span class="comment">// USONB  you are so niubility </span></span><br><span class="line">        <span class="comment">// u  undefined</span></span><br><span class="line">        <span class="comment">// s  string  symbol</span></span><br><span class="line">        <span class="comment">// o  object</span></span><br><span class="line">        <span class="comment">// n  null number</span></span><br><span class="line">        <span class="comment">// b  boolean</span></span><br><span class="line">        <span class="comment">//向对象中添加方法 up down</span></span><br><span class="line">        <span class="keyword">let</span> game = &#123;</span><br><span class="line">            name: <span class="string">'俄罗斯方块'</span>,</span><br><span class="line">            up: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">            down: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//声明一个对象</span></span><br><span class="line">        <span class="comment">// let methods = &#123;</span></span><br><span class="line">        <span class="comment">//     up: Symbol(),</span></span><br><span class="line">        <span class="comment">//     down: Symbol()</span></span><br><span class="line">        <span class="comment">// &#125;;</span></span><br><span class="line">        <span class="comment">// game[methods.up] = function()&#123;</span></span><br><span class="line">        <span class="comment">//     console.log("我可以改变形状");</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// game[methods.down] = function()&#123;</span></span><br><span class="line">        <span class="comment">//     console.log("我可以快速下降!!");</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// console.log(game);</span></span><br><span class="line">        <span class="comment">//添加一个属性</span></span><br><span class="line">        <span class="keyword">let</span> youxi = &#123;</span><br><span class="line">            name: <span class="string">"狼人杀"</span>,</span><br><span class="line">            [<span class="built_in">Symbol</span>(<span class="string">'say'</span>)]: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"我可以发言"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            [<span class="built_in">Symbol</span>(<span class="string">'zibao'</span>)]: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'我可以自爆'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(youxi)</span><br><span class="line">				<span class="comment">//以下都是Symbol内属性，而其所组成的整体作为对象的属性设置，来扩展对象功能</span></span><br><span class="line">         <span class="comment">//其他对象使用instanceof运算符，判断是否为该对象的实例时，会调用</span></span><br><span class="line">        <span class="comment">// class Person &#123;</span></span><br><span class="line">        <span class="comment">//     static[Symbol.hasInstance](param) &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(param);</span></span><br><span class="line">        <span class="comment">//         console.log("我被用来检测类型了");</span></span><br><span class="line">        <span class="comment">//         return false;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// let o = &#123;&#125;;</span></span><br><span class="line">        <span class="comment">// console.log(o instanceof Person);</span></span><br><span class="line">        <span class="comment">// const arr = [1,2,3];</span></span><br><span class="line">        <span class="comment">// const arr2 = [4,5,6];</span></span><br><span class="line">        <span class="comment">//控制值是否可以展开，当前是合并的时候arr2是否为一个整体来做</span></span><br><span class="line">        <span class="comment">// arr2[Symbol.isConcatSpreadable] = false;</span></span><br><span class="line">        <span class="comment">// console.log(arr.concat(arr2));</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;生成器函数&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//生成器其实就是一个特殊的函数</span></span><br><span class="line">        <span class="comment">//异步编程  纯回调函数  node fs  ajax mongodb</span></span><br><span class="line">        <span class="comment">//函数代码的分隔符</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span>* <span class="title">gen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// console.log(111);</span></span><br><span class="line">                <span class="keyword">yield</span> <span class="string">'一只没有耳朵'</span>;</span><br><span class="line">                <span class="comment">// console.log(222);</span></span><br><span class="line">                <span class="keyword">yield</span> <span class="string">'一只没有尾部'</span>;</span><br><span class="line">                <span class="comment">// console.log(333);</span></span><br><span class="line">                <span class="keyword">yield</span> <span class="string">'真奇怪'</span>;</span><br><span class="line">                <span class="comment">// console.log(444);</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// let iterator = gen();</span></span><br><span class="line">            <span class="comment">// console.log(iterator.next());</span></span><br><span class="line">            <span class="comment">// console.log(iterator.next());</span></span><br><span class="line">            <span class="comment">// console.log(iterator.next());</span></span><br><span class="line">            <span class="comment">// console.log(iterator.next());</span></span><br><span class="line">            <span class="comment">//遍历</span></span><br><span class="line">            <span class="comment">// for(let v of gen())&#123;</span></span><br><span class="line">            <span class="comment">//     console.log(v);</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span>* <span class="title">gen</span>(<span class="params">arg</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(arg); <span class="comment">//AAA</span></span><br><span class="line">            <span class="keyword">let</span> one = <span class="keyword">yield</span> <span class="number">111</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(one); <span class="comment">//BBB</span></span><br><span class="line">            <span class="keyword">let</span> two = <span class="keyword">yield</span> <span class="number">222</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(two); <span class="comment">//CCC</span></span><br><span class="line">            <span class="keyword">let</span> three = <span class="keyword">yield</span> <span class="number">333</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(three); <span class="comment">//DDD</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//执行获取迭代器对象</span></span><br><span class="line">        <span class="keyword">let</span> iterator = gen(<span class="string">'AAA'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(iterator.next()); <span class="comment">//111 false</span></span><br><span class="line">        <span class="comment">//next方法可以传入实参，实参作为上一个yield整体返回结果</span></span><br><span class="line">        <span class="built_in">console</span>.log(iterator.next(<span class="string">'BBB'</span>)); <span class="comment">//222 false</span></span><br><span class="line">        <span class="built_in">console</span>.log(iterator.next(<span class="string">'CCC'</span>)); <span class="comment">//333 false</span></span><br><span class="line">        <span class="built_in">console</span>.log(iterator.next(<span class="string">'DDD'</span>)); <span class="comment">//undefined true</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;生成器函数&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 异步编程  文件操作 网络操作(ajax, request) 数据库操作</span></span><br><span class="line">        <span class="comment">// 1s 后控制台输出 111  2s后输出 222  3s后输出 333 </span></span><br><span class="line">        <span class="comment">// 回调地狱</span></span><br><span class="line">        <span class="comment">// setTimeout(() =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(111);</span></span><br><span class="line">        <span class="comment">//     setTimeout(() =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(222);</span></span><br><span class="line">        <span class="comment">//         setTimeout(() =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//             console.log(333);</span></span><br><span class="line">        <span class="comment">//         &#125;, 3000);</span></span><br><span class="line">        <span class="comment">//     &#125;, 2000);</span></span><br><span class="line">        <span class="comment">// &#125;, 1000);</span></span><br><span class="line">        <span class="comment">// function one() &#123;</span></span><br><span class="line">        <span class="comment">//     setTimeout(() =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(111);</span></span><br><span class="line">        <span class="comment">//         iterator.next();</span></span><br><span class="line">        <span class="comment">//     &#125;, 1000)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// function two() &#123;</span></span><br><span class="line">        <span class="comment">//     setTimeout(() =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(222);</span></span><br><span class="line">        <span class="comment">//         iterator.next();</span></span><br><span class="line">        <span class="comment">//     &#125;, 2000)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// function three() &#123;</span></span><br><span class="line">        <span class="comment">//     setTimeout(() =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(333);</span></span><br><span class="line">        <span class="comment">//         iterator.next();</span></span><br><span class="line">        <span class="comment">//     &#125;, 3000)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// function* gen() &#123;</span></span><br><span class="line">        <span class="comment">//         yield one();</span></span><br><span class="line">        <span class="comment">//         yield two();</span></span><br><span class="line">        <span class="comment">//         yield three();</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">//     //调用生成器函数</span></span><br><span class="line">        <span class="comment">// let iterator = gen();</span></span><br><span class="line">        <span class="comment">// iterator.next();</span></span><br><span class="line">        <span class="comment">//模拟获取  用户数据  订单数据  商品数据 </span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getUsers</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> data = <span class="string">'用户数据'</span>;</span><br><span class="line">                <span class="comment">//调用 next 方法, 并且将数据传入</span></span><br><span class="line">                iterator.next(data);</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getOrders</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> data = <span class="string">'订单数据'</span>;</span><br><span class="line">                iterator.next(data);</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getGoods</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> data = <span class="string">'商品数据'</span>;</span><br><span class="line">                iterator.next(data);</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span>* <span class="title">gen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> users = <span class="keyword">yield</span> getUsers();</span><br><span class="line">            <span class="built_in">console</span>.log(users)</span><br><span class="line">            <span class="keyword">let</span> orders = <span class="keyword">yield</span> getOrders();</span><br><span class="line">            <span class="built_in">console</span>.log(orders)</span><br><span class="line">            <span class="keyword">let</span> goods = <span class="keyword">yield</span> getGoods();</span><br><span class="line">            <span class="built_in">console</span>.log(goods)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用生成器函数</span></span><br><span class="line">        <span class="keyword">let</span> iterator = gen();</span><br><span class="line">        iterator.next();</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<p>promise：异步编程解决方案，用来封装异步操作并可以获取成功或失败的结果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//异步编程解决方案，用来封装异步操作并可以后去成功或失败的结果</span></span><br><span class="line">        <span class="comment">//实例化 Promise 对象</span></span><br><span class="line">        <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//两种情况，成功或失败，分别对应then方法的回调函数</span></span><br><span class="line">                <span class="keyword">let</span> data = <span class="string">'数据库中的用户数据'</span>;</span><br><span class="line">                resolve(data);</span><br><span class="line">                <span class="comment">// let err = '数据读取失败';</span></span><br><span class="line">                <span class="comment">// reject(err);</span></span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//调用 promise 对象的 then 方法</span></span><br><span class="line">        p.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(value);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">reason</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.error(reason);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"><span class="comment">//promise读取文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 引入 fs 模块</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//2. 调用方法读取文件</span></span><br><span class="line"><span class="comment">// fs.readFile('./resources/为学.md', (err, data)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     //如果失败, 则抛出错误</span></span><br><span class="line"><span class="comment">//     if(err) throw err;</span></span><br><span class="line"><span class="comment">//     //如果没有出错, 则输出内容</span></span><br><span class="line"><span class="comment">//     console.log(data.toString());</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">//3. 使用 Promise 封装</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    fs.readFile(<span class="string">"./resources/为学.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">        <span class="comment">//判断如果失败</span></span><br><span class="line">        <span class="keyword">if</span> (err) reject(err);</span><br><span class="line">        <span class="comment">//如果成功</span></span><br><span class="line">        resolve(data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value.toString());</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">reason</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"读取失败!!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//promise封装ajax  结构更加清晰明了</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 接口地址: https://api.apiopen.top/getJoke</span></span><br><span class="line">        <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();<span class="comment">//1. 创建对象</span></span><br><span class="line">            xhr.open(<span class="string">"GET"</span>, <span class="string">"https://api.apiopen.top/getJoke"</span>); <span class="comment">//2. 初始化</span></span><br><span class="line">            xhr.send();<span class="comment">//3. 发送</span></span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="comment">//4. 绑定事件, 处理响应结果</span></span><br><span class="line">                <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;<span class="comment">//判断</span></span><br><span class="line">                    <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span>) &#123;<span class="comment">//判断响应状态码 200-299</span></span><br><span class="line">                        resolve(xhr.response);<span class="comment">//表示成功</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        reject(xhr.status);<span class="comment">//如果失败</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//指定回调</span></span><br><span class="line">        p.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(value);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">reason</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.error(reason);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建 promise 对象</span></span><br><span class="line">        <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                resolve(<span class="string">'用户数据'</span>);</span><br><span class="line">                <span class="comment">// reject('出错啦');</span></span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//调用 then 方法  then方法的返回结果是 Promise 对象, 对象状态由回调函数的执行结果决定</span></span><br><span class="line">        <span class="comment">//1. 如果回调函数中返回的结果是 非 promise 类型的属性, 状态为成功, 返回值为对象的成功的值</span></span><br><span class="line">        <span class="comment">// const result = p.then(value =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(value);</span></span><br><span class="line">        <span class="comment">//     //1. 非 promise 类型的属性</span></span><br><span class="line">        <span class="comment">//     // return 'iloveyou';</span></span><br><span class="line">        <span class="comment">//     //2. 是 promise 对象</span></span><br><span class="line">        <span class="comment">//     // return new Promise((resolve, reject)=&gt;&#123;</span></span><br><span class="line">        <span class="comment">//     //     // resolve('ok');</span></span><br><span class="line">        <span class="comment">//     //     reject('error');</span></span><br><span class="line">        <span class="comment">//     // &#125;);</span></span><br><span class="line">        <span class="comment">//     //3. 抛出错误</span></span><br><span class="line">        <span class="comment">//     // throw new Error('出错啦!');</span></span><br><span class="line">        <span class="comment">//     throw '出错啦!';</span></span><br><span class="line">        <span class="comment">// &#125;, reason=&gt;&#123;</span></span><br><span class="line">        <span class="comment">//     console.warn(reason);</span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line">        <span class="comment">//链式调用</span></span><br><span class="line">        p.then(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="comment">//catch方法</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="comment">//设置 p 对象的状态为失败, 并设置失败的值</span></span><br><span class="line">                reject(<span class="string">"出错啦!"</span>);</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// p.then(function(value)&#123;&#125;, function(reason)&#123;</span></span><br><span class="line">        <span class="comment">//     console.error(reason);</span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line">        p.catch(<span class="function"><span class="keyword">function</span>(<span class="params">reason</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.warn(reason);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Promise读取多个文件</span></span><br><span class="line"><span class="comment">//引入 fs 模块</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"><span class="comment">// fs.readFile('./resources/为学.md', (err, data1)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     fs.readFile('./resources/插秧诗.md', (err, data2)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//         fs.readFile('./resources/观书有感.md', (err, data3)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//             let result = data1 + '\r\n' +data2  +'\r\n'+ data3;</span></span><br><span class="line"><span class="comment">//             console.log(result);</span></span><br><span class="line"><span class="comment">//         &#125;);</span></span><br><span class="line"><span class="comment">//     &#125;);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">//使用 promise 实现</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.readFile(<span class="string">"./resources/为学.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">        resolve(data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">p.then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value.toString())</span><br><span class="line">&#125;)</span><br><span class="line">p.then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        fs.readFile(<span class="string">"./resources/插秧诗.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">            resolve([value, data]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;).then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        fs.readFile(<span class="string">"./resources/观书有感.md"</span>, (err, data) =&gt; &#123;</span><br><span class="line">            <span class="comment">//压入</span></span><br><span class="line">            value.push(data);</span><br><span class="line">            resolve(value);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;).then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value.join(<span class="string">'\r\n'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>ES</category>
      </categories>
  </entry>
  <entry>
    <title>ES6(1)</title>
    <url>/2020/08/21/ES6-1/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>点击 DIV 换色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/twitter-bootstrap/3.3.7/css/bootstrap.min.css"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.item</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            border: solid 1px rgb(42, 156, 156);</span><br><span class="line">            float: left;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"page-header"</span>&gt;</span>点击切换颜色<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取div元素对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> items = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'item'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//遍历并绑定事件</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;items.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">            items[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//修改当前元素的背景颜色</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// this.style.background = 'pink';</span></span></span><br><span class="line"><span class="actionscript">                items[i].style.background = <span class="string">'pink'</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const常量：</span><br><span class="line">				&#x2F;&#x2F;1. 一定要赋初始值</span><br><span class="line">        &#x2F;&#x2F; const A;</span><br><span class="line">        &#x2F;&#x2F;2. 一般常量使用大写(潜规则)</span><br><span class="line">        &#x2F;&#x2F; const a &#x3D; 100;</span><br><span class="line">        &#x2F;&#x2F;3. 常量的值不能修改</span><br><span class="line">        &#x2F;&#x2F; SCHOOL &#x3D; &#39;ATGUIGU&#39;;</span><br><span class="line">        &#x2F;&#x2F;4. 块儿级作用域</span><br><span class="line">        &#x2F;&#x2F; &#123;</span><br><span class="line">        &#x2F;&#x2F;     const PLAYER &#x3D; &#39;UZI&#39;;</span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        &#x2F;&#x2F; console.log(PLAYER);</span><br><span class="line">        &#x2F;&#x2F;5. 对于数组和对象的元素修改, 不算做对常量的修改, 不会报错</span><br><span class="line">        const TEAM &#x3D; [&#39;UZI&#39;,&#39;MXLG&#39;,&#39;Ming&#39;,&#39;Letme&#39;];</span><br><span class="line">        &#x2F;&#x2F; TEAM.push(&#39;Meiko&#39;);</span><br><span class="line">        </span><br><span class="line">&#x2F;&#x2F;ES6 允许按照一定模式从数组和对象中提取值，对变量进行赋值，</span><br><span class="line">        &#x2F;&#x2F;这被称为解构赋值。</span><br><span class="line">        &#x2F;&#x2F;1. 数组的结构</span><br><span class="line">        &#x2F;&#x2F; const F4 &#x3D; [&#39;小沈阳&#39;,&#39;刘能&#39;,&#39;赵四&#39;,&#39;宋小宝&#39;];</span><br><span class="line">        &#x2F;&#x2F; let [xiao, liu, zhao, song] &#x3D; F4;</span><br><span class="line">        &#x2F;&#x2F; console.log(xiao);</span><br><span class="line">        &#x2F;&#x2F; console.log(liu);</span><br><span class="line">        &#x2F;&#x2F; console.log(zhao);</span><br><span class="line">        &#x2F;&#x2F; console.log(song);</span><br><span class="line">        &#x2F;&#x2F;2. 对象的解构</span><br><span class="line">        &#x2F;&#x2F; const zhao &#x3D; &#123;</span><br><span class="line">        &#x2F;&#x2F;     name: &#39;赵本山&#39;,</span><br><span class="line">        &#x2F;&#x2F;     age: &#39;不详&#39;,</span><br><span class="line">        &#x2F;&#x2F;     xiaopin: function()&#123;</span><br><span class="line">        &#x2F;&#x2F;         console.log(&quot;我可以演小品&quot;);</span><br><span class="line">        &#x2F;&#x2F;     &#125;</span><br><span class="line">        &#x2F;&#x2F; &#125;;</span><br><span class="line">        &#x2F;&#x2F; let &#123;name, age, xiaopin&#125; &#x3D; zhao;</span><br><span class="line">        &#x2F;&#x2F; console.log(name);</span><br><span class="line">        &#x2F;&#x2F; console.log(age);</span><br><span class="line">        &#x2F;&#x2F; console.log(xiaopin);</span><br><span class="line">        &#x2F;&#x2F; xiaopin();</span><br><span class="line">        &#x2F;&#x2F;这样写之后可以直接调用</span><br><span class="line">        let &#123;</span><br><span class="line">            xiaopin</span><br><span class="line">        &#125; &#x3D; zhao;</span><br><span class="line">        xiaopin();</span><br><span class="line">        </span><br><span class="line">模板字符串：</span><br><span class="line">        &#x2F;&#x2F; ES6 引入新的声明字符串的方式 『&#96;&#96;』 &#39;&#39; &quot;&quot; </span><br><span class="line">        &#x2F;&#x2F;1. 声明</span><br><span class="line">        &#x2F;&#x2F; let str &#x3D; &#96;我也是一个字符串哦!&#96;;</span><br><span class="line">        &#x2F;&#x2F; console.log(str, typeof str);</span><br><span class="line">        &#x2F;&#x2F;2. 内容中可以直接出现换行符</span><br><span class="line">        let str &#x3D; &#96;&lt;ul&gt;</span><br><span class="line">                    &lt;li&gt;沈腾&lt;&#x2F;li&gt;</span><br><span class="line">                    &lt;li&gt;玛丽&lt;&#x2F;li&gt;</span><br><span class="line">                    &lt;li&gt;魏翔&lt;&#x2F;li&gt;</span><br><span class="line">                    &lt;li&gt;艾伦&lt;&#x2F;li&gt;</span><br><span class="line">                    &lt;&#x2F;ul&gt;&#96;;</span><br><span class="line">        &#x2F;&#x2F;3. 变量拼接</span><br><span class="line">        let lovest &#x3D; &#39;魏翔&#39;;</span><br><span class="line">        let out &#x3D; &#96;$&#123;lovest&#125;是我心目中最搞笑的演员!!&#96;;</span><br><span class="line">        console.log(out);</span><br><span class="line">简化对象写法：</span><br><span class="line">				&#x2F;&#x2F;ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。</span><br><span class="line">        &#x2F;&#x2F;这样的书写更加简洁</span><br><span class="line">        let name &#x3D; &#39;尚硅谷&#39;;</span><br><span class="line">        let change &#x3D; function()&#123;</span><br><span class="line">            console.log(&#39;我们可以改变你!!&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">        const school &#x3D; &#123;</span><br><span class="line">            name,</span><br><span class="line">            change,</span><br><span class="line">            improve()&#123;</span><br><span class="line">                console.log(&quot;我们可以提高你的技能&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; ES6 允许使用「箭头」（&#x3D;&gt;）定义函数。</span><br><span class="line">       &#x2F;&#x2F;声明一个函数</span><br><span class="line">       &#x2F;&#x2F; let fn &#x3D; function()&#123;</span><br><span class="line">       &#x2F;&#x2F; &#125;</span><br><span class="line">       &#x2F;&#x2F; let fn &#x3D; (a,b) &#x3D;&gt; &#123;</span><br><span class="line">       &#x2F;&#x2F;     return a + b;</span><br><span class="line">       &#x2F;&#x2F; &#125;</span><br><span class="line">       &#x2F;&#x2F;调用函数</span><br><span class="line">       &#x2F;&#x2F; let result &#x3D; fn(1, 2);</span><br><span class="line">       &#x2F;&#x2F; console.log(result);</span><br><span class="line">       &#x2F;&#x2F;1. &#x3D;&gt;   this 是静态的. this 始终指向函数声明时所在作用域下的 this 的值</span><br><span class="line">       function getName() &#123;</span><br><span class="line">           console.log(this.name);</span><br><span class="line">       &#125;</span><br><span class="line">       let getName2 &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">           console.log(this.name);</span><br><span class="line">       &#125;</span><br><span class="line">       &#x2F;&#x2F;设置 window 对象的 name 属性</span><br><span class="line">       window.name &#x3D; &#39;尚硅谷&#39;;</span><br><span class="line">       const school &#x3D; &#123;</span><br><span class="line">           name: &quot;ATGUIGU&quot;</span><br><span class="line">       &#125;</span><br><span class="line">       &#x2F;&#x2F;直接调用</span><br><span class="line">       &#x2F;&#x2F; getName();</span><br><span class="line">       &#x2F;&#x2F; getName2();</span><br><span class="line">       &#x2F;&#x2F;call 方法调用</span><br><span class="line">       &#x2F;&#x2F; getName.call(school);</span><br><span class="line">       &#x2F;&#x2F; getName2.call(school);不会修改</span><br><span class="line">       &#x2F;&#x2F;2. 不能作为构造实例化对象</span><br><span class="line">       &#x2F;&#x2F; let Person &#x3D; (name, age) &#x3D;&gt; &#123;</span><br><span class="line">       &#x2F;&#x2F;     this.name &#x3D; name;</span><br><span class="line">       &#x2F;&#x2F;     this.age &#x3D; age;</span><br><span class="line">       &#x2F;&#x2F; &#125;</span><br><span class="line">       &#x2F;&#x2F; let me &#x3D; new Person(&#39;xiao&#39;,30);</span><br><span class="line">       &#x2F;&#x2F; console.log(me);</span><br><span class="line">       &#x2F;&#x2F;3. 不能使用 arguments 变量</span><br><span class="line">       &#x2F;&#x2F; let fn &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">       &#x2F;&#x2F;     console.log(arguments);</span><br><span class="line">       &#x2F;&#x2F; &#125;</span><br><span class="line">       &#x2F;&#x2F; fn(1,2,3);</span><br><span class="line">       &#x2F;&#x2F;4. 箭头函数的简写</span><br><span class="line">       &#x2F;&#x2F;1) 省略小括号, 当形参有且只有一个的时候</span><br><span class="line">       &#x2F;&#x2F; let add &#x3D; n &#x3D;&gt; &#123;</span><br><span class="line">       &#x2F;&#x2F;     return n + n;</span><br><span class="line">       &#x2F;&#x2F; &#125;</span><br><span class="line">       &#x2F;&#x2F; console.log(add(9));</span><br><span class="line">       &#x2F;&#x2F;2) 省略花括号, 当代码体只有一条语句的时候, 此时 return 必须省略</span><br><span class="line">       &#x2F;&#x2F; 而且语句的执行结果就是函数的返回值</span><br><span class="line">       let pow &#x3D; n &#x3D;&gt; n * n;</span><br><span class="line">       console.log(pow(8));</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;函数参数默认值&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//ES6 允许给函数参数赋值初始值</span></span><br><span class="line">        <span class="comment">//1. 形参初始值 具有默认值的参数, 一般位置要靠后(潜规则)</span></span><br><span class="line">        <span class="comment">// function add(a,c=10,b) &#123;</span></span><br><span class="line">        <span class="comment">//     return a + b + c;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// let result = add(1,2);</span></span><br><span class="line">        <span class="comment">// console.log(result);</span></span><br><span class="line">        <span class="comment">//2. 与解构赋值结合</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params">&#123;host=<span class="string">"127.0.0.1"</span>, username,password, port&#125;</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(host)</span><br><span class="line">            <span class="built_in">console</span>.log(username)</span><br><span class="line">            <span class="built_in">console</span>.log(password)</span><br><span class="line">            <span class="built_in">console</span>.log(port)</span><br><span class="line">        &#125;</span><br><span class="line">        connect(&#123;</span><br><span class="line">            host: <span class="string">'atguigu.com'</span>,</span><br><span class="line">            username: <span class="string">'root'</span>,</span><br><span class="line">            password: <span class="string">'root'</span>,</span><br><span class="line">            port: <span class="number">3306</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; ES6 引入 rest 参数，用于获取函数的实参，用来代替 arguments</span><br><span class="line">        &#x2F;&#x2F; ES5 获取实参的方式</span><br><span class="line">        &#x2F;&#x2F; function date()&#123;</span><br><span class="line">        &#x2F;&#x2F;     console.log(arguments);</span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        &#x2F;&#x2F; date(&#39;白芷&#39;,&#39;阿娇&#39;,&#39;思慧&#39;);</span><br><span class="line">        &#x2F;&#x2F; rest 参数</span><br><span class="line">        &#x2F;&#x2F; function date(...args)&#123;</span><br><span class="line">        &#x2F;&#x2F;     console.log(args);&#x2F;&#x2F; filter some every map </span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        &#x2F;&#x2F; date(&#39;阿娇&#39;,&#39;柏芝&#39;,&#39;思慧&#39;);</span><br><span class="line">        &#x2F;&#x2F; rest 参数必须要放到参数最后</span><br><span class="line">        &#x2F;&#x2F; function fn(a,b,...args)&#123;</span><br><span class="line">        &#x2F;&#x2F;     console.log(a);</span><br><span class="line">        &#x2F;&#x2F;     console.log(b);</span><br><span class="line">        &#x2F;&#x2F;     console.log(args);</span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        &#x2F;&#x2F; fn(1,2,3,4,5,6);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;扩展运算符&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        const tfboys = ['a', 'b', 'c']</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        function list() &#123;</span></span><br><span class="line"><span class="regexp">            console.log(arguments)</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        list(...tfboys) /</span><span class="regexp">/相当于list('a', 'b', 'c')</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//1. 数组的合并</span></span><br><span class="line">        <span class="comment">// const kuaizi = ['王太利','肖央'];</span></span><br><span class="line">        <span class="comment">// const fenghuang = ['曾毅','玲花'];</span></span><br><span class="line">        <span class="comment">// // const zuixuanxiaopingguo = kuaizi.concat(fenghuang);</span></span><br><span class="line">        <span class="comment">// const zuixuanxiaopingguo = [...kuaizi, ...fenghuang];</span></span><br><span class="line">        <span class="comment">// console.log(zuixuanxiaopingguo);</span></span><br><span class="line">        <span class="comment">//2. 数组的克隆,有引用就是浅拷贝</span></span><br><span class="line">        <span class="comment">// const sanzhihua = ['E','G','M'];</span></span><br><span class="line">        <span class="comment">// const sanyecao = [...sanzhihua];//  ['E','G','M']</span></span><br><span class="line">        <span class="comment">// console.log(sanyecao);</span></span><br><span class="line">        <span class="comment">//3. 将伪数组转为真正的数组</span></span><br><span class="line">        <span class="keyword">const</span> divs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'div'</span>);</span><br><span class="line">        <span class="keyword">const</span> divArr = [...divs];</span><br><span class="line">        <span class="built_in">console</span>.log(divArr); <span class="comment">// arguments</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>ES</category>
      </categories>
  </entry>
  <entry>
    <title>webpack(5)</title>
    <url>/2020/08/20/webpack-5/</url>
    <content><![CDATA[<p><strong># webpack5</strong></p>
<p>此版本重点关注以下内容:</p>
<p>- 通过持久缓存提高构建性能.</p>
<p>- 使用更好的算法和默认值来改善长期缓存.</p>
<p>- 通过更好的树摇和代码生成来改善捆绑包大小.</p>
<p>- 清除处于怪异状态的内部结构，同时在 v4 中实现功能而不引入任何重大更改.</p>
<p>- 通过引入重大更改来为将来的功能做准备，以使我们能够尽可能长时间地使用 v5.</p>
<p><strong>## 下载</strong></p>
<p>- npm i webpack@next webpack-cli -D</p>
<p><strong>## 自动删除 Node.js Polyfills</strong></p>
<p>早期，webpack 的目标是允许在浏览器中运行大多数 node.js 模块，但是模块格局发生了变化，许多模块用途现在主要是为前端目的而编写的。webpack &lt;= 4 附带了许多 node.js 核心模块的 polyfill，一旦模块使用任何核心模块（即 crypto 模块），这些模块就会自动应用。</p>
<p>尽管这使使用为 node.js 编写的模块变得容易，但它会将这些巨大的 polyfill 添加到包中。在许多情况下，这些 polyfill 是不必要的。</p>
<p>webpack 5 会自动停止填充这些核心模块，并专注于与前端兼容的模块。</p>
<p>迁移：</p>
<p>- 尽可能尝试使用与前端兼容的模块。</p>
<p>- 可以为 node.js 核心模块手动添加一个 polyfill。错误消息将提示如何实现该目标。</p>
<p><strong>## Chunk 和模块 ID</strong></p>
<p>添加了用于长期缓存的新算法。在生产模式下默认情况下启用这些功能。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chunkIds: &quot;deterministic&quot;, moduleIds: &quot;deterministic&quot;</span><br></pre></td></tr></table></figure>



<p><strong>## Chunk ID</strong></p>
<p>你可以不用使用 <code>import(/* webpackChunkName: &quot;name&quot; */ &quot;module&quot;)</code> 在开发环境来为 chunk 命名，生产环境还是有必要的</p>
<p>webpack 内部有 chunk 命名规则，不再是以 id(0, 1, 2)命名了</p>
<p><strong>## Tree Shaking</strong></p>
<p>\1. webpack 现在能够处理对嵌套模块的 tree shaking</p>
<p>```js</p>
<p>// inner.js</p>
<p>export const a = 1;</p>
<p>export const b = 2;</p>
<p>// module.js</p>
<p>import * as inner from ‘./inner’;</p>
<p>export { inner };</p>
<p>// user.js</p>
<p>import * as module from ‘./module’;</p>
<p>console.log(module.inner.a);</p>
<p>```</p>
<p>在生产环境中, inner 模块暴露的 <code>b</code> 会被删除</p>
<p>\2. webpack 现在能够多个模块之前的关系</p>
<p>```js</p>
<p>import { something } from ‘./something’;</p>
<p>function usingSomething() {</p>
<p>  return something;</p>
<p>}</p>
<p>export function test() {</p>
<p>  return usingSomething();</p>
<p>}</p>
<p>```</p>
<p>当设置了<code>&quot;sideEffects&quot;: false</code>时，一旦发现<code>test</code>方法没有使用，不但删除<code>test</code>，还会删除<code>&quot;./something&quot;</code></p>
<p>\3. webpack 现在能处理对 Commonjs 的 tree shaking</p>
<p><strong>## Output</strong></p>
<p>webpack 4 默认只能输出 ES5 代码</p>
<p>webpack 5 开始新增一个属性 output.ecmaVersion, 可以生成 ES5 和 ES6 / ES2015 代码.</p>
<p>如：<code>output.ecmaVersion: 2015</code></p>
<p><strong>## SplitChunk</strong></p>
<p>```js</p>
<p>// webpack4</p>
<p>minSize: 30000;</p>
<p>```</p>
<p>```js</p>
<p>// webpack5</p>
<p>minSize: {</p>
<p>  javascript: 30000,</p>
<p>  style: 50000,</p>
<p>}</p>
<p>```</p>
<p><strong>## Caching</strong></p>
<p>```js</p>
<p>// 配置缓存</p>
<p>cache: {</p>
<p>  // 磁盘存储</p>
<p>  type: “filesystem”,</p>
<p>  buildDependencies: {</p>
<p>​    // 当配置修改时，缓存失效</p>
<p>​    config: [__filename]</p>
<p>  }</p>
<p>}</p>
<p>```</p>
<p>缓存将存储到 <code>node_modules/.cache/webpack</code></p>
<p><strong>## 监视输出文件</strong></p>
<p>之前 webpack 总是在第一次构建时输出全部文件，但是监视重新构建时会只更新修改的文件。</p>
<p>此次更新在第一次构建时会找到输出文件看是否有变化，从而决定要不要输出全部文件。</p>
<p><strong>## 默认值</strong></p>
<p>- <code>entry: &quot;./src/index.js</code></p>
<p>- <code>output.path: path.resolve(__dirname, &quot;dist&quot;)</code></p>
<p>- <code>output.filename: &quot;[name].js&quot;</code></p>
<p><strong>## 更多内容</strong></p>
<p><a href="https://github.com/webpack/changelog-v5" target="_blank" rel="noopener">https://github.com/webpack/changelog-v5</a></p>
]]></content>
      <categories>
        <category>Web</category>
        <category>webpack</category>
      </categories>
  </entry>
  <entry>
    <title>webpack(4)</title>
    <url>/2020/08/20/webpack-4/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  entry: 入口起点    1，3较常用。重点掌握1</span></span><br><span class="line"><span class="comment">    1. string --&gt; './src/index.js'</span></span><br><span class="line"><span class="comment">      单入口</span></span><br><span class="line"><span class="comment">      打包形成一个chunk。 输出一个bundle文件。</span></span><br><span class="line"><span class="comment">      此时chunk的名称默认是 main</span></span><br><span class="line"><span class="comment">    2. array  --&gt; ['./src/index.js', './src/add.js']</span></span><br><span class="line"><span class="comment">      多入口</span></span><br><span class="line"><span class="comment">      所有入口文件最终只会形成一个chunk, 输出出去只有一个bundle文件。</span></span><br><span class="line"><span class="comment">        --&gt; 只有在HMR功能中让html热更新生效~</span></span><br><span class="line"><span class="comment">    3. object</span></span><br><span class="line"><span class="comment">      多入口</span></span><br><span class="line"><span class="comment">      有几个入口文件就形成几个chunk，输出几个bundle文件</span></span><br><span class="line"><span class="comment">      此时chunk的名称是 key</span></span><br><span class="line"><span class="comment">      --&gt; 特殊用法</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">          // 所有入口文件最终只会形成一个chunk, 输出出去只有一个bundle文件。</span></span><br><span class="line"><span class="comment">          index: ['./src/index.js', './src/count.js'], </span></span><br><span class="line"><span class="comment">          // 形成一个chunk，输出一个bundle文件。</span></span><br><span class="line"><span class="comment">          add: './src/add.js'</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: [<span class="string">'./src/index.js'</span>, <span class="string">'./src/count.js'</span>],</span><br><span class="line">        add: <span class="string">'./src/add.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'[name].js'</span>,</span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()],</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        <span class="comment">// 文件名称（指定名称+目录）</span></span><br><span class="line">        filename: <span class="string">'js/[name].js'</span>,</span><br><span class="line">        <span class="comment">// 输出文件目录（将来所有资源输出的公共目录）</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        <span class="comment">// 所有资源引入公共路径前缀 --&gt; 'imgs/a.jpg' --&gt; '/imgs/a.jpg'</span></span><br><span class="line">        publicPath: <span class="string">'/'</span>,</span><br><span class="line">        chunkFilename: <span class="string">'js/[name]_chunk.js'</span>, <span class="comment">// 非入口chunk的名称</span></span><br><span class="line">        <span class="comment">// library: '[name]', // 整个库向外暴露的变量名   主要用于暴露一个库</span></span><br><span class="line">        <span class="comment">// libraryTarget: 'window' // 变量名添加到哪个上 browser</span></span><br><span class="line">        <span class="comment">// libraryTarget: 'global' // 变量名添加到哪个上 node</span></span><br><span class="line">        <span class="comment">// libraryTarget: 'commonjs'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()],</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">import</span> count <span class="keyword">from</span> <span class="string">'./count'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'index.js文件加载了~'</span>);</span><br><span class="line"><span class="comment">//非入口chunk</span></span><br><span class="line"><span class="keyword">import</span>(<span class="string">'./add'</span>).then(<span class="function">(<span class="params">&#123; <span class="keyword">default</span>: add &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(count(<span class="number">3</span>, <span class="number">2</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//module</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/[name].js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// loader的配置</span></span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        <span class="comment">// 多个loader用use</span></span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        <span class="comment">// 排除node_modules下的js文件</span></span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="comment">// 只检查 src 下的js文件</span></span><br><span class="line">        include: resolve(__dirname, <span class="string">'src'</span>),</span><br><span class="line">        <span class="comment">// 优先执行</span></span><br><span class="line">        enforce: <span class="string">'pre'</span>,</span><br><span class="line">        <span class="comment">// 延后执行</span></span><br><span class="line">        <span class="comment">// enforce: 'post',</span></span><br><span class="line">        <span class="comment">// 单个loader用loader</span></span><br><span class="line">        loader: <span class="string">'eslint-loader'</span>,</span><br><span class="line">        options: &#123;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 以下配置只会生效一个</span></span><br><span class="line">        oneOf: []</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()],</span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//resove</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/[name].js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()],</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  <span class="comment">// 解析模块的规则</span></span><br><span class="line">  resolve: &#123;</span><br><span class="line">    <span class="comment">// 配置解析模块路径别名: 优点简写路径 缺点路径没有提示</span></span><br><span class="line">    alias: &#123;</span><br><span class="line">      $css: resolve(__dirname, <span class="string">'src/css'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 配置省略文件路径的后缀名</span></span><br><span class="line">    extensions: [<span class="string">'.js'</span>, <span class="string">'.json'</span>, <span class="string">'.jsx'</span>, <span class="string">'.css'</span>],</span><br><span class="line">    <span class="comment">// 告诉 webpack 解析模块是去找哪个目录</span></span><br><span class="line">    modules: [resolve(__dirname, <span class="string">'../../node_modules'</span>), <span class="string">'node_modules'</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'$css/index'</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//开发环境dev server配置</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/[name].js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()],</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      $css: resolve(__dirname, <span class="string">'src/css'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    extensions: [<span class="string">'.js'</span>, <span class="string">'.json'</span>, <span class="string">'.jsx'</span>, <span class="string">'.css'</span>],</span><br><span class="line">    modules: [resolve(__dirname, <span class="string">'../../node_modules'</span>), <span class="string">'node_modules'</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    <span class="comment">// 运行代码的目录</span></span><br><span class="line">    contentBase: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">    <span class="comment">// 监视 contentBase 目录下的所有文件，一旦文件变化就会 reload</span></span><br><span class="line">    watchContentBase: <span class="literal">true</span>,</span><br><span class="line">    watchOptions: &#123;</span><br><span class="line">      <span class="comment">// 忽略文件</span></span><br><span class="line">      ignored: <span class="regexp">/node_modules/</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 端口号</span></span><br><span class="line">    port: <span class="number">5000</span>,</span><br><span class="line">    <span class="comment">// 域名</span></span><br><span class="line">    host: <span class="string">'localhost'</span>,</span><br><span class="line">    <span class="comment">// 自动打开浏览器</span></span><br><span class="line">    open: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 开启HMR功能</span></span><br><span class="line">    hot: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 不要显示启动服务器日志信息</span></span><br><span class="line">    clientLogLevel: <span class="string">'none'</span>,</span><br><span class="line">    <span class="comment">// 除了一些基本启动信息以外，其他内容都不要显示</span></span><br><span class="line">    quiet: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 如果出错了，不要全屏提示~</span></span><br><span class="line">    overlay: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 服务器代理 --&gt; 解决开发环境跨域问题</span></span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="comment">// 一旦devServer(5000)服务器接受到 /api/xxx 的请求，就会把请求转发到另外一个服务器(3000)</span></span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://localhost:3000'</span>,</span><br><span class="line">        <span class="comment">// 发送请求时，请求路径重写：将 /api/xxx --&gt; /xxx （去掉/api）</span></span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//optimization</span></span><br><span class="line"><span class="comment">//npm i terser-webpack-plugin -D</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> TerserWebpackPlugin = <span class="built_in">require</span>(<span class="string">'terser-webpack-plugin'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'js/[name].[contenthash:10].js'</span>,</span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        chunkFilename: <span class="string">'js/[name].[contenthash:10]_chunk.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">            test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()],</span><br><span class="line">    mode: <span class="string">'production'</span>,</span><br><span class="line">    resolve: &#123;</span><br><span class="line">        alias: &#123;</span><br><span class="line">            $css: resolve(__dirname, <span class="string">'src/css'</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        extensions: [<span class="string">'.js'</span>, <span class="string">'.json'</span>, <span class="string">'.jsx'</span>, <span class="string">'.css'</span>],</span><br><span class="line">        modules: [resolve(__dirname, <span class="string">'../../node_modules'</span>), <span class="string">'node_modules'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    optimization: &#123;</span><br><span class="line">        splitChunks: &#123;</span><br><span class="line">            chunks: <span class="string">'all'</span></span><br><span class="line">                <span class="comment">// 默认值，可以不写~</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* minSize: 30 * 1024, // 分割的chunk最小为30kb</span></span><br><span class="line"><span class="comment">            maxSiza: 0, // 最大没有限制</span></span><br><span class="line"><span class="comment">            minChunks: 1, // 要提取的chunk最少被引用1次</span></span><br><span class="line"><span class="comment">            maxAsyncRequests: 5, // 按需加载时并行加载的文件的最大数量</span></span><br><span class="line"><span class="comment">            maxInitialRequests: 3, // 入口js文件最大并行请求数量</span></span><br><span class="line"><span class="comment">            automaticNameDelimiter: '~', // 名称连接符</span></span><br><span class="line"><span class="comment">            name: true, // 可以使用命名规则</span></span><br><span class="line"><span class="comment">            cacheGroups: &#123;</span></span><br><span class="line"><span class="comment">              // 分割chunk的组</span></span><br><span class="line"><span class="comment">              // node_modules文件会被打包到 vendors 组的chunk中。--&gt; vendors~xxx.js</span></span><br><span class="line"><span class="comment">              // 满足上面的公共规则，如：大小超过30kb，至少被引用一次。</span></span><br><span class="line"><span class="comment">              vendors: &#123;</span></span><br><span class="line"><span class="comment">                test: /[\\/]node_modules[\\/]/,</span></span><br><span class="line"><span class="comment">                // 优先级</span></span><br><span class="line"><span class="comment">                priority: -10</span></span><br><span class="line"><span class="comment">              &#125;,</span></span><br><span class="line"><span class="comment">              default: &#123;</span></span><br><span class="line"><span class="comment">                // 要提取的chunk最少被引用2次</span></span><br><span class="line"><span class="comment">                minChunks: 2,</span></span><br><span class="line"><span class="comment">                // 优先级</span></span><br><span class="line"><span class="comment">                priority: -20,</span></span><br><span class="line"><span class="comment">                // 如果当前要打包的模块，和之前已经被提取的模块是同一个，就会复用，而不是重新打包模块</span></span><br><span class="line"><span class="comment">                reuseExistingChunk: true</span></span><br><span class="line"><span class="comment">              &#125; </span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 将当前模块的记录其他模块的hash单独打包为一个文件 runtime</span></span><br><span class="line">        <span class="comment">// 解决：修改a文件导致b文件的contenthash变化</span></span><br><span class="line">        runtimeChunk: &#123;</span><br><span class="line">            name: <span class="function"><span class="params">entrypoint</span> =&gt;</span> <span class="string">`runtime-<span class="subst">$&#123;entrypoint.name&#125;</span>`</span></span><br><span class="line">        &#125;,</span><br><span class="line">        minimizer: [</span><br><span class="line">            <span class="comment">// 配置生产环境的压缩方案：js和css</span></span><br><span class="line">            <span class="keyword">new</span> TerserWebpackPlugin(&#123;</span><br><span class="line">                <span class="comment">// 开启缓存</span></span><br><span class="line">                cache: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 开启多进程打包</span></span><br><span class="line">                parallel: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 启动source-map</span></span><br><span class="line">                sourceMap: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>npm i webpack@next webpack-cli -D 下载webpack下一版本webpack5</p>
<p>npm i webpack webpack-cli -D 下载webpack4</p>
]]></content>
      <categories>
        <category>Web</category>
        <category>webpack</category>
      </categories>
  </entry>
  <entry>
    <title>webpack(3)</title>
    <url>/2020/08/20/webpack-3/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//懒加载，预加载</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'index.js文件被加载了~'</span>);</span><br><span class="line"><span class="comment">// import &#123; mul &#125; from './test';</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 懒加载~：当文件需要使用时才加载~</span></span><br><span class="line">  <span class="comment">// 预加载 prefetch：会在使用之前，提前加载js文件 </span></span><br><span class="line">  <span class="comment">// 正常加载可以认为是并行加载（同一时间加载多个文件）  </span></span><br><span class="line">  <span class="comment">// 预加载 prefetch：等其他资源加载完毕，浏览器空闲了，再偷偷加载资源。好用但是兼容性差（慎重使用）</span></span><br><span class="line">  <span class="comment">//webpackPrefetch: true 预加载</span></span><br><span class="line">  <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: 'test'*/</span><span class="string">'./test'</span>).then(<span class="function">(<span class="params">&#123; mul &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(mul(<span class="number">4</span>, <span class="number">5</span>));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test.js</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'test.js文件被加载了~'</span>);</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x - y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//pwa技术</span></span><br><span class="line"><span class="comment">//npm i workbox-webpack-plugin -D 下载</span></span><br><span class="line"><span class="comment">//sudo npm i -g serve   serve -s build服务器下载启动</span></span><br><span class="line"><span class="comment">//在  plugins添加</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  PWA: 渐进式网络开发应用程序(离线可访问)</span></span><br><span class="line"><span class="comment">    workbox --&gt; workbox-webpack-plugin</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">new</span> WorkboxWebpackPlugin.GenerateSW(&#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        1. 帮助serviceworker快速启动</span></span><br><span class="line"><span class="comment">        2. 删除旧的 serviceworker</span></span><br><span class="line"><span class="comment">        生成一个 serviceworker 配置文件~</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      clientsClaim: <span class="literal">true</span>,</span><br><span class="line">      skipWaiting: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后在index.js中添加</span></span><br><span class="line"><span class="keyword">import</span> &#123; mul &#125; <span class="keyword">from</span> <span class="string">'./test'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'../css/index.css'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> args.reduce(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// eslint-disable-next-line</span></span><br><span class="line"><span class="built_in">console</span>.log(mul(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line"><span class="comment">// eslint-disable-next-line</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  1. eslint不认识 window、navigator全局变量</span></span><br><span class="line"><span class="comment">    解决：需要修改package.json中eslintConfig配置</span></span><br><span class="line"><span class="comment">      "env": &#123;</span></span><br><span class="line"><span class="comment">        "browser": true // 支持浏览器端全局变量</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">   2. service-worker代码必须运行在服务器上</span></span><br><span class="line"><span class="comment">      --&gt; nodejs</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line"><span class="comment">        npm i serve -g</span></span><br><span class="line"><span class="comment">        serve -s build 启动服务器，将build目录下所有资源作为静态资源暴露出去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 注册serviceWorker</span></span><br><span class="line"><span class="comment">// 处理兼容性问题</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">'serviceWorker'</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, () =&gt; &#123;</span><br><span class="line">    navigator.serviceWorker</span><br><span class="line">      .register(<span class="string">'/service-worker.js'</span>)</span><br><span class="line">      .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'sw注册成功了~'</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'sw注册失败了~'</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多进程打包</span></span><br><span class="line"><span class="comment">//npm i thread-loader -D 下载包</span></span><br><span class="line">									&#123;</span><br><span class="line">                        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                        use: [</span><br><span class="line">                            <span class="comment">/* </span></span><br><span class="line"><span class="comment">                              开启多进程打包。 </span></span><br><span class="line"><span class="comment">                              进程启动大概为600ms，进程通信也有开销。</span></span><br><span class="line"><span class="comment">                              只有工作消耗时间比较长，才需要多进程打包</span></span><br><span class="line"><span class="comment">                            */</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                loader: <span class="string">'thread-loader'</span>,</span><br><span class="line">                                options: &#123;</span><br><span class="line">                                    workers: <span class="number">2</span> <span class="comment">// 进程2个</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="comment">// 开启babel缓存</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                                options: &#123;</span><br><span class="line">                                    presets: [</span><br><span class="line">                                        [</span><br><span class="line">                                            <span class="string">'@babel/preset-env'</span>,</span><br><span class="line">                                            &#123;</span><br><span class="line">                                                useBuiltIns: <span class="string">'usage'</span>,</span><br><span class="line">                                                corejs: &#123; <span class="attr">version</span>: <span class="number">3</span> &#125;,</span><br><span class="line">                                                targets: &#123;</span><br><span class="line">                                                    chrome: <span class="string">'60'</span>,</span><br><span class="line">                                                    firefox: <span class="string">'50'</span></span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ]</span><br><span class="line">                                    ],</span><br><span class="line">                                    <span class="comment">// 开启babel缓存</span></span><br><span class="line">                                    <span class="comment">// 第二次构建时，会读取之前的缓存</span></span><br><span class="line">                                    cacheDirectory: <span class="literal">true</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                      </span><br><span class="line"><span class="comment">//externals</span></span><br><span class="line">  externals: &#123;</span><br><span class="line">    <span class="comment">// 拒绝jQuery被打包进来</span></span><br><span class="line">    jquery: <span class="string">'jQuery'</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//需要在html中引入</span></span><br><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  import $ from 'jquery';</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//dll，打包第三方库 以jquery为例。优化重复打包第三方库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//webpack.dll.js</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  使用dll技术，对某些库（第三方库：jquery、react、vue...）进行单独打包</span></span><br><span class="line"><span class="comment">    当你运行 webpack 时，默认查找 webpack.config.js 配置文件</span></span><br><span class="line"><span class="comment">    需求：需要运行 webpack.dll.js 文件</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    webpack --config webpack.dll.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    <span class="comment">// 最终打包生成的[name] --&gt; jquery</span></span><br><span class="line">    <span class="comment">// ['jquery'] --&gt; 要打包的库是jquery</span></span><br><span class="line">    jquery: [<span class="string">'jquery'</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'[name].js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'dll'</span>),</span><br><span class="line">    library: <span class="string">'[name]_[hash]'</span> <span class="comment">// 打包的库里面向外暴露出去的内容叫什么名字</span></span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// 打包生成一个 manifest.json --&gt; 提供和jquery映射</span></span><br><span class="line">    <span class="keyword">new</span> webpack.DllPlugin(&#123;</span><br><span class="line">      name: <span class="string">'[name]_[hash]'</span>, <span class="comment">// 映射库的暴露的内容名称</span></span><br><span class="line">      path: resolve(__dirname, <span class="string">'dll/manifest.json'</span>) <span class="comment">// 输出文件路径</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//npm i add-asset-html-webpack-plugin -D</span></span><br><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> AddAssetHtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'add-asset-html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 告诉webpack哪些库不参与打包，同时使用时的名称也得变~</span></span><br><span class="line">    <span class="keyword">new</span> webpack.DllReferencePlugin(&#123;</span><br><span class="line">      manifest: resolve(__dirname, <span class="string">'dll/manifest.json'</span>)</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 将某个文件打包输出去，并在html中自动引入该资源</span></span><br><span class="line">    <span class="keyword">new</span> AddAssetHtmlWebpackPlugin(&#123;</span><br><span class="line">      filepath: resolve(__dirname, <span class="string">'dll/jquery.js'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>webpack</category>
      </categories>
  </entry>
  <entry>
    <title>webpack(2)</title>
    <url>/2020/08/18/webpack-2/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//html压缩 js压缩</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">      <span class="comment">// 压缩html代码</span></span><br><span class="line">      minify: &#123;</span><br><span class="line">        <span class="comment">// 移除空格</span></span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 移除注释</span></span><br><span class="line">        removeComments: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">    <span class="comment">// 生产环境下会自动压缩js代码</span></span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>生产环境配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> OptimizeCssAssetsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'optimize-css-assets-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义nodejs环境变量：决定使用browserslist的哪个环境</span></span><br><span class="line">process.env.NODE_ENV = <span class="string">'production'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复用loader</span></span><br><span class="line"><span class="keyword">const</span> commonCssLoader = [</span><br><span class="line">  MiniCssExtractPlugin.loader,</span><br><span class="line">  <span class="string">'css-loader'</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 还需要在package.json中定义browserslist</span></span><br><span class="line">    loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      ident: <span class="string">'postcss'</span>,</span><br><span class="line">      plugins: <span class="function"><span class="params">()</span> =&gt;</span> [<span class="built_in">require</span>(<span class="string">'postcss-preset-env'</span>)()]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [...commonCssLoader]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [...commonCssLoader, <span class="string">'less-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        正常来讲，一个文件只能被一个loader处理。</span></span><br><span class="line"><span class="comment">        当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序：</span></span><br><span class="line"><span class="comment">          先执行eslint 在执行babel</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 在package.json中eslintConfig --&gt; airbnb</span></span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="comment">// 优先执行</span></span><br><span class="line">        enforce: <span class="string">'pre'</span>,</span><br><span class="line">        loader: <span class="string">'eslint-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          fix: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          presets: [</span><br><span class="line">            [</span><br><span class="line">              <span class="string">'@babel/preset-env'</span>,</span><br><span class="line">              &#123;</span><br><span class="line">                useBuiltIns: <span class="string">'usage'</span>,</span><br><span class="line">                corejs: &#123;<span class="attr">version</span>: <span class="number">3</span>&#125;,</span><br><span class="line">                targets: &#123;</span><br><span class="line">                  chrome: <span class="string">'60'</span>,</span><br><span class="line">                  firefox: <span class="string">'50'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(jpg|png|gif)/</span>,</span><br><span class="line">        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          limit: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span>,</span><br><span class="line">          outputPath: <span class="string">'imgs'</span>,</span><br><span class="line">          esModule: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.html$/</span>,</span><br><span class="line">        loader: <span class="string">'html-loader'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        exclude: <span class="regexp">/\.(js|css|less|html|jpg|png|gif)/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          outputPath: <span class="string">'media'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'css/built.css'</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> OptimizeCssAssetsWebpackPlugin(),</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">      minify: &#123;</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">        removeComments: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>优化环境配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># webpack性能优化</span><br><span class="line">* 开发环境性能优化</span><br><span class="line">* 生产环境性能优化</span><br><span class="line">## 开发环境性能优化</span><br><span class="line">* 优化打包构建速度</span><br><span class="line">  * HMR</span><br><span class="line">* 优化代码调试</span><br><span class="line">  * source-map</span><br><span class="line">## 生产环境性能优化</span><br><span class="line">* 优化打包构建速度</span><br><span class="line">  * oneOf</span><br><span class="line">  * babel缓存</span><br><span class="line">  * 多进程打包</span><br><span class="line">  * externals</span><br><span class="line">  * dll</span><br><span class="line">* 优化代码运行的性能</span><br><span class="line">  * 缓存(hash-chunkhash-contenthash)</span><br><span class="line">  * tree shaking</span><br><span class="line">  * code split</span><br><span class="line">  * 懒加载&#x2F;预加载</span><br><span class="line">  * pwa</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">开发环境中添加hot: true即可设置只是刷新被修改过的文件。即hmr</span><br><span class="line">&#x2F;*</span><br><span class="line">  HMR: hot module replacement 热模块替换 &#x2F; 模块热替换</span><br><span class="line">    作用：一个模块发生变化，只会重新打包这一个模块（而不是打包所有模块） </span><br><span class="line">      极大提升构建速度</span><br><span class="line">      样式文件：可以使用HMR功能：因为style-loader内部实现了~</span><br><span class="line">      js文件：默认不能使用HMR功能 --&gt; 需要修改js代码，添加支持HMR功能的代码</span><br><span class="line">        注意：HMR功能对js的处理，只能处理非入口js文件的其他文件。</span><br><span class="line">        解决：</span><br><span class="line">        index.js中添加</span><br><span class="line">&#x2F;&#x2F; 引入</span><br><span class="line">import print from &#39;.&#x2F;print&#39;;</span><br><span class="line">import &#39;..&#x2F;css&#x2F;iconfont.css&#39;;</span><br><span class="line">import &#39;..&#x2F;css&#x2F;index.less&#39;;</span><br><span class="line">console.log(&#39;index.js文件被加载了~&#39;);</span><br><span class="line">print();</span><br><span class="line">function add(x, y) &#123;</span><br><span class="line">  return x + y;</span><br><span class="line">&#125;</span><br><span class="line">console.log(add(1, 3));</span><br><span class="line">if (module.hot) &#123;</span><br><span class="line">  &#x2F;&#x2F; 一旦 module.hot 为true，说明开启了HMR功能。 --&gt; 让HMR功能代码生效</span><br><span class="line">  module.hot.accept(&#39;.&#x2F;print.js&#39;, function() &#123;</span><br><span class="line">    &#x2F;&#x2F; 方法会监听 print.js 文件的变化，一旦发生变化，其他模块不会重新打包构建。</span><br><span class="line">    &#x2F;&#x2F; 会执行后面的回调函数</span><br><span class="line">    print();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">			print.js</span><br><span class="line">console.log(&#39;print.js被加载了~&#39;);</span><br><span class="line">function print() &#123;</span><br><span class="line">  const content &#x3D; &#39;hello print&#39;;</span><br><span class="line">  console.log(content);</span><br><span class="line">&#125;</span><br><span class="line">export default print;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      html文件: 默认不能使用HMR功能.同时会导致问题：html文件不能热更新了~ （不用做HMR功能）</span><br><span class="line">        解决：修改entry入口，将html文件引入   </span><br><span class="line">          entry: [&#39;.&#x2F;src&#x2F;js&#x2F;index.js&#39;, &#39;.&#x2F;src&#x2F;index.html&#39;],</span><br><span class="line">*&#x2F;</span><br><span class="line">devServer: &#123;</span><br><span class="line">    contentBase: resolve(__dirname, &#39;build&#39;),</span><br><span class="line">    compress: true,</span><br><span class="line">    port: 3000,</span><br><span class="line">    open: true,</span><br><span class="line">    &#x2F;&#x2F; 开启HMR功能</span><br><span class="line">    &#x2F;&#x2F; 当修改了webpack配置，新配置要想生效，必须重新webpack服务</span><br><span class="line">    hot: true</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source-map</span><br><span class="line">&#x2F;*</span><br><span class="line">  source-map: 一种提供源代码到构建后代码映射技术（如果构建后代码出错了，通过映射可以追踪源代码错误）</span><br><span class="line">    [inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map</span><br><span class="line">    source-map：外部</span><br><span class="line">      错误代码准确信息 和 源代码的错误位置</span><br><span class="line">    inline-source-map：内联</span><br><span class="line">      只生成一个内联source-map</span><br><span class="line">      错误代码准确信息 和 源代码的错误位置</span><br><span class="line">    hidden-source-map：外部</span><br><span class="line">      错误代码错误原因，但是没有错误位置</span><br><span class="line">      不能追踪源代码错误，只能提示到构建后代码的错误位置</span><br><span class="line">    eval-source-map：内联</span><br><span class="line">      每一个文件都生成对应的source-map，都在eval</span><br><span class="line">      错误代码准确信息 和 源代码的错误位置</span><br><span class="line">    nosources-source-map：外部</span><br><span class="line">      错误代码准确信息, 但是没有任何源代码信息</span><br><span class="line">    cheap-source-map：外部</span><br><span class="line">      错误代码准确信息 和 源代码的错误位置 </span><br><span class="line">      只能精确的行</span><br><span class="line">    cheap-module-source-map：外部</span><br><span class="line">      错误代码准确信息 和 源代码的错误位置 </span><br><span class="line">      module会将loader的source map加入</span><br><span class="line">    内联 和 外部的区别：1. 外部生成了文件，内联没有 2. 内联构建速度更快</span><br><span class="line">    </span><br><span class="line">    开发环境：速度快，调试更友好</span><br><span class="line">      速度快(eval&gt;inline&gt;cheap&gt;...)</span><br><span class="line">        eval-cheap-souce-map&gt;eval-source-map</span><br><span class="line">      调试更友好  </span><br><span class="line">        souce-map</span><br><span class="line">        cheap-module-souce-map</span><br><span class="line">        cheap-souce-map</span><br><span class="line">      建议选择 eval-source-map  &#x2F; eval-cheap-module-souce-map</span><br><span class="line">      </span><br><span class="line">    生产环境：源代码要不要隐藏? 调试要不要更友好</span><br><span class="line">      内联会让代码体积变大，所以在生产环境不用内联</span><br><span class="line">      nosources-source-map 全部隐藏</span><br><span class="line">      hidden-source-map 只隐藏源代码，会提示构建后代码错误信息</span><br><span class="line">      建议选择 source-map &#x2F; cheap-module-souce-map</span><br><span class="line">*&#x2F;</span><br><span class="line">在module.exports中添加devtool: &#39;eval-source-map&#39;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//oneof 用于优化生产环境打包构建速度</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> OptimizeCssAssetsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'optimize-css-assets-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  缓存：</span></span><br><span class="line"><span class="comment">    babel缓存</span></span><br><span class="line"><span class="comment">      cacheDirectory: true</span></span><br><span class="line"><span class="comment">      --&gt; 让第二次打包构建速度更快</span></span><br><span class="line"><span class="comment">    文件资源缓存</span></span><br><span class="line"><span class="comment">      hash: 每次wepack构建时会生成一个唯一的hash值。</span></span><br><span class="line"><span class="comment">        问题: 因为js和css同时使用一个hash值。</span></span><br><span class="line"><span class="comment">          如果重新打包，会导致所有缓存失效。（可能我却只改动一个文件）</span></span><br><span class="line"><span class="comment">      chunkhash：根据chunk生成的hash值。如果打包来源于同一个chunk，那么hash值就一样</span></span><br><span class="line"><span class="comment">        问题: js和css的hash值还是一样的</span></span><br><span class="line"><span class="comment">          因为css是在js中被引入的，所以同属于一个chunk</span></span><br><span class="line"><span class="comment">      contenthash: 根据文件的内容生成hash值。不同文件hash值一定不一样    </span></span><br><span class="line"><span class="comment">      --&gt; 让代码上线运行缓存更好使用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  tree shaking：去除无用代码</span></span><br><span class="line"><span class="comment">    前提：1. 必须使用ES6模块化  2. 开启production环境</span></span><br><span class="line"><span class="comment">    作用: 减少代码体积</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    在package.json中配置 </span></span><br><span class="line"><span class="comment">      "sideEffects": false 所有代码都没有副作用（都可以进行tree shaking）</span></span><br><span class="line"><span class="comment">        问题：可能会把css / @babel/polyfill （副作用）文件干掉</span></span><br><span class="line"><span class="comment">        解决："sideEffects": ["*.css", "*.less"]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义nodejs环境变量：决定使用browserslist的哪个环境</span></span><br><span class="line">process.env.NODE_ENV = <span class="string">'production'</span>;</span><br><span class="line"><span class="comment">// 复用loader</span></span><br><span class="line"><span class="keyword">const</span> commonCssLoader = [</span><br><span class="line">  MiniCssExtractPlugin.loader,</span><br><span class="line">  <span class="string">'css-loader'</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 还需要在package.json中定义browserslist</span></span><br><span class="line">    loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      ident: <span class="string">'postcss'</span>,</span><br><span class="line">      plugins: <span class="function"><span class="params">()</span> =&gt;</span> [<span class="built_in">require</span>(<span class="string">'postcss-preset-env'</span>)()]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">//此处添加hash值以便于修改后更新缓存数据, 重新webpack构建即可修改成功</span></span><br><span class="line">    filename: <span class="string">'js/built.[contenthash:10].js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 在package.json中eslintConfig --&gt; airbnb</span></span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="comment">// 优先执行</span></span><br><span class="line">        enforce: <span class="string">'pre'</span>,</span><br><span class="line">        loader: <span class="string">'eslint-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          fix: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 以下loader只会匹配一个</span></span><br><span class="line">        <span class="comment">// 注意：不能有两个配置处理同一种类型文件</span></span><br><span class="line">        oneOf: [</span><br><span class="line">          &#123;</span><br><span class="line">            test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            use: [...commonCssLoader]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">            use: [...commonCssLoader, <span class="string">'less-loader'</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">/*</span></span><br><span class="line"><span class="comment">            正常来讲，一个文件只能被一个loader处理。</span></span><br><span class="line"><span class="comment">            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序：</span></span><br><span class="line"><span class="comment">              先执行eslint 在执行babel*/</span></span><br><span class="line">          &#123;</span><br><span class="line">            test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">            exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">            loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              presets: [</span><br><span class="line">                [</span><br><span class="line">                  <span class="string">'@babel/preset-env'</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                    useBuiltIns: <span class="string">'usage'</span>,</span><br><span class="line">                    corejs: &#123; <span class="attr">version</span>: <span class="number">3</span> &#125;,</span><br><span class="line">                    targets: &#123;</span><br><span class="line">                      chrome: <span class="string">'60'</span>,</span><br><span class="line">                      firefox: <span class="string">'50'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                ]</span><br><span class="line">              ],</span><br><span class="line">              <span class="comment">// 开启babel缓存</span></span><br><span class="line">              <span class="comment">// 第二次构建时，会读取之前的缓存</span></span><br><span class="line">              cacheDirectory: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            test: <span class="regexp">/\.(jpg|png|gif)/</span>,</span><br><span class="line">            loader: <span class="string">'url-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">              name: <span class="string">'[hash:10].[ext]'</span>,</span><br><span class="line">              outputPath: <span class="string">'imgs'</span>,</span><br><span class="line">              esModule: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            test: <span class="regexp">/\.html$/</span>,</span><br><span class="line">            loader: <span class="string">'html-loader'</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            exclude: <span class="regexp">/\.(js|css|less|html|jpg|png|gif)/</span>,</span><br><span class="line">            loader: <span class="string">'file-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              outputPath: <span class="string">'media'</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'css/built.[contenthash:10].css'</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> OptimizeCssAssetsWebpackPlugin(),</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">      minify: &#123;</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">        removeComments: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  devtool: <span class="string">'source-map'</span></span><br><span class="line">&#125;;</span><br><span class="line">启动服务器并访问</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  服务器代码</span></span><br><span class="line"><span class="comment">  启动服务器指令：</span></span><br><span class="line"><span class="comment">    npm i nodemon -g</span></span><br><span class="line"><span class="comment">    nodemon server.js</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    node server.js</span></span><br><span class="line"><span class="comment">  访问服务器地址：</span></span><br><span class="line"><span class="comment">    http://localhost:3000</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// express.static向外暴露静态资源</span></span><br><span class="line"><span class="comment">// maxAge 资源缓存的最大时间，单位ms</span></span><br><span class="line">app.use(express.static(<span class="string">'build'</span>, &#123; <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">3600</span> &#125;));</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码分割code split(important) 避免将所有js全部打包到一个中。可以实现并行加载，提升加载速度</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// 单入口</span></span><br><span class="line">  <span class="comment">// entry: './src/js/index.js',</span></span><br><span class="line">  entry: &#123;</span><br><span class="line">    index: <span class="string">'./src/js/index.js'</span>,<span class="comment">//两者都引入jquery包</span></span><br><span class="line">    test: <span class="string">'./src/js/test.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">// [name]：取文件名</span></span><br><span class="line">    filename: <span class="string">'js/[name].[contenthash:10].js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">      minify: &#123;</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">        removeComments: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1. 可以将node_modules中代码单独打包一个chunk最终输出</span></span><br><span class="line"><span class="comment">    2. 自动分析多入口chunk中，有没有公共的文件。如果有会打包成单独一个chunk</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      chunks: <span class="string">'all'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> args.reduce(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  通过js代码，让某个文件被单独打包成一个chunk</span></span><br><span class="line"><span class="comment">  import动态导入语法：能将某个文件单独打包</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//指定js打包名称</span></span><br><span class="line"><span class="keyword">import</span>(<span class="comment">/* webpackChunkName: 'test' */</span><span class="string">'./test'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">&#123; mul, count &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 文件加载成功~</span></span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="built_in">console</span>.log(mul(<span class="number">2</span>, <span class="number">5</span>));</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'文件加载失败~'</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// eslint-disable-next-line</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line"><span class="comment">//text.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x - y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>webpack</category>
      </categories>
  </entry>
  <entry>
    <title>webpack(1)</title>
    <url>/2020/08/18/webpack-1/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图</span><br><span class="line">输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。</span><br><span class="line">Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解 JavaScript)</span><br><span class="line">插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩， 一直到重新定义环境中的变量等。</span><br><span class="line">&#x2F;*</span><br><span class="line">  index.js: webpack入口起点文件</span><br><span class="line"></span><br><span class="line">  1. 运行指令：</span><br><span class="line">    开发环境：webpack .&#x2F;src&#x2F;index.js -o .&#x2F;build&#x2F;built.js --mode&#x3D;development</span><br><span class="line">      webpack会以 .&#x2F;src&#x2F;index.js 为入口文件开始打包，打包后输出到 .&#x2F;build&#x2F;built.js</span><br><span class="line">      整体打包环境，是开发环境</span><br><span class="line">    生产环境：webpack .&#x2F;src&#x2F;index.js -o .&#x2F;build&#x2F;built.js --mode&#x3D;production</span><br><span class="line">      webpack会以 .&#x2F;src&#x2F;index.js 为入口文件开始打包，打包后输出到 .&#x2F;build&#x2F;built.js</span><br><span class="line">      整体打包环境，是生产环境</span><br><span class="line"></span><br><span class="line">   2. 结论：</span><br><span class="line">    1. webpack能处理js&#x2F;json资源，不能处理css&#x2F;img等其他资源</span><br><span class="line">    2. 生产环境和开发环境将ES6模块化编译成浏览器能识别的模块化~</span><br><span class="line">    3. 生产环境比开发环境多一个压缩js代码。</span><br><span class="line">*&#x2F;</span><br><span class="line">npm i html-webpack-plugin -D  &#x2F;&#x2F;html</span><br><span class="line">npm i webpack webpack-cli -D  </span><br><span class="line">npm i html-loader -D  &#x2F;&#x2F;html中图片</span><br><span class="line">npm i url-loader file-loader -D &#x2F;&#x2F;css中图片</span><br><span class="line">npm i webpack css-loader style-loader less-loader -D &#x2F;&#x2F;css&#x2F;less&#x2F;样式</span><br><span class="line">npm i webpack-dev-server -D &#x2F;&#x2F;开发服务器，用于自动化  npx webpack-dev-server启动</span><br><span class="line">npm i mini-css-extract-plugin -D&#x2F;&#x2F;以上均为开发环境，以下适用于开发环境。将css封装在js中代码复制提取出来放在打包的单独的文件中</span><br><span class="line">npm i postcss-loader postcss-preset-env  -D&#x2F;&#x2F;解决css兼容性问题</span><br><span class="line">npm i optimize-css-assets-webpack-plugin -D&#x2F;&#x2F;压缩css代码</span><br><span class="line">npm i eslint-config-airbnb-base  eslint-plugin-import eslint -D&#x2F;&#x2F;检查js等语法</span><br><span class="line">npm i babel-loader @babel&#x2F;core @babel&#x2F;preset-env -D&#x2F;&#x2F;js兼容性处理-基本</span><br><span class="line">@babel&#x2F;polyfill  -全部兼容性处理 但是不建议，太大。使用 npm i core-js -D来按需处理</span><br></pre></td></tr></table></figure>

<p>开发环境</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">  webpack.config.js  webpack的配置文件</span></span><br><span class="line"><span class="comment">    作用: 指示 webpack 干哪些活（当你运行 webpack 指令时，会加载里面的配置）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    所有构建工具都是基于nodejs平台运行的~模块化默认采用commonjs。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// resolve用来拼接绝对路径的方法</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// webpack配置</span></span><br><span class="line">  <span class="comment">// 入口起点</span></span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  <span class="comment">// 输出</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">// 输出文件名</span></span><br><span class="line">    filename: <span class="string">'built.js'</span>,</span><br><span class="line">    <span class="comment">// 输出路径</span></span><br><span class="line">    <span class="comment">// __dirname nodejs的变量，代表当前文件的目录绝对路径</span></span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// loader的配置</span></span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// 详细loader配置</span></span><br><span class="line">      <span class="comment">// 不同文件必须配置不同loader处理</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 匹配哪些文件</span></span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        <span class="comment">// 使用哪些loader进行处理</span></span><br><span class="line">        use: [</span><br><span class="line">          <span class="comment">// use数组中loader执行顺序：从右到左，从下到上 依次执行</span></span><br><span class="line">          <span class="comment">// 创建style标签，将js中的样式资源插入进行，添加到head中生效</span></span><br><span class="line">          <span class="string">'style-loader'</span>,</span><br><span class="line">          <span class="comment">// 将css文件变成commonjs模块加载js中，里面内容是样式字符串</span></span><br><span class="line">          <span class="string">'css-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">'style-loader'</span>,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">          <span class="comment">// 将less文件编译成css文件</span></span><br><span class="line">          <span class="comment">// 需要下载 less-loader和less</span></span><br><span class="line">          <span class="string">'less-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// plugins的配置</span></span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// 详细plugins的配置</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 模式</span></span><br><span class="line">  mode: <span class="string">'development'</span>, <span class="comment">// 开发模式</span></span><br><span class="line">  <span class="comment">// mode: 'production'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 引入样式资源</span><br><span class="line">import &#39;.&#x2F;index.css&#39;;</span><br><span class="line">import &#39;.&#x2F;index.less&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id&#x3D;&quot;title&quot;&gt;HELLO&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;.&#x2F;built.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*打包html</span></span><br><span class="line"><span class="comment">  loader: 1. 下载   2. 使用（配置loader）</span></span><br><span class="line"><span class="comment">  plugins: 1. 下载  2. 引入  3. 使用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// loader的配置</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// plugins的配置</span></span><br><span class="line">    <span class="comment">// html-webpack-plugin</span></span><br><span class="line">    <span class="comment">// 功能：默认会创建一个空的HTML，自动引入打包输出的所有资源（JS/CSS）</span></span><br><span class="line">    <span class="comment">// 需求：需要有结构的HTML文件</span></span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="comment">// 复制 './src/index.html' 文件，并自动引入打包输出的所有资源（JS/CSS）</span></span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">//处理图片、html、css、less</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'built.js'</span>,</span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">                test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                <span class="comment">// 要使用多个loader处理用use</span></span><br><span class="line">                use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 问题：默认处理不了html中img图片</span></span><br><span class="line">                <span class="comment">// 处理图片资源</span></span><br><span class="line">                test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line">                <span class="comment">// 使用一个loader</span></span><br><span class="line">                <span class="comment">// 下载 url-loader file-loader</span></span><br><span class="line">                loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    <span class="comment">// 图片大小小于8kb，就会被base64处理</span></span><br><span class="line">                    <span class="comment">// 优点: 减少请求数量（减轻服务器压力）</span></span><br><span class="line">                    <span class="comment">// 缺点：图片体积会更大（文件请求速度更慢）</span></span><br><span class="line">                    limit: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">                    <span class="comment">// 问题：因为url-loader默认使用es6模块化解析，而html-loader引入图片是commonjs</span></span><br><span class="line">                    <span class="comment">// 解析时会出问题：[object Module]</span></span><br><span class="line">                    <span class="comment">// 解决：关闭url-loader的es6模块化，使用commonjs解析</span></span><br><span class="line">                    esModule: <span class="literal">false</span>,</span><br><span class="line">                    <span class="comment">// 给图片进行重命名</span></span><br><span class="line">                    <span class="comment">// [hash:10]取图片的hash的前10位</span></span><br><span class="line">                    <span class="comment">// [ext]取文件原来扩展名</span></span><br><span class="line">                    name: <span class="string">'[hash:10].[ext]'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.html$/</span>,</span><br><span class="line">                <span class="comment">// 处理html文件的img图片（负责引入img，从而能被url-loader进行处理）</span></span><br><span class="line">                loader: <span class="string">'html-loader'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//iconfont.css iconfont.eot iconfont.svg iconfont.ttf iconfont.woff</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 打包其他资源(除了html/js/css资源以外的资源)</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 排除css/js/html资源</span></span><br><span class="line">        exclude: <span class="regexp">/\.(css|js|html|less)$/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 开发服务器 devServer：用来自动化（自动编译，自动打开浏览器，自动刷新浏览器~~）</span></span><br><span class="line">  <span class="comment">// 特点：只会在内存中编译打包，不会有任何输出</span></span><br><span class="line">  <span class="comment">// 启动devServer指令为：npx webpack-dev-server</span></span><br><span class="line">  devServer: &#123;</span><br><span class="line">    <span class="comment">// 项目构建后路径</span></span><br><span class="line">    contentBase: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 端口号</span></span><br><span class="line">    port: <span class="number">3000</span>,</span><br><span class="line">    <span class="comment">// 自动打开浏览器</span></span><br><span class="line">    open: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*综合打包配置</span></span><br><span class="line"><span class="comment">  开发环境配置：能让代码运行</span></span><br><span class="line"><span class="comment">    运行项目指令：</span></span><br><span class="line"><span class="comment">      webpack 会将打包结果输出出去</span></span><br><span class="line"><span class="comment">      npx webpack-dev-server 只会在内存中编译打包，没有输出</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// loader的配置</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 处理less资源</span></span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 处理css资源</span></span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 处理图片资源</span></span><br><span class="line">        test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line">        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          limit: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span>,</span><br><span class="line">          <span class="comment">// 关闭es6模块化</span></span><br><span class="line">          esModule: <span class="literal">false</span>,</span><br><span class="line">          outputPath: <span class="string">'imgs'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 处理html中img资源</span></span><br><span class="line">        test: <span class="regexp">/\.html$/</span>,</span><br><span class="line">        loader: <span class="string">'html-loader'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 处理其他资源</span></span><br><span class="line">        exclude: <span class="regexp">/\.(html|js|css|less|jpg|png|gif)/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span>,</span><br><span class="line">          outputPath: <span class="string">'media'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// plugins的配置</span></span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    contentBase: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    port: <span class="number">3000</span>,</span><br><span class="line">    open: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>生产环境</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);<span class="comment">//将css文件打包提取出来</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">            test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            use: [</span><br><span class="line">                <span class="comment">// 创建style标签，将样式放入</span></span><br><span class="line">                <span class="comment">// 'style-loader', </span></span><br><span class="line">                <span class="comment">// 这个loader取代style-loader。作用：提取js中的css成单独文件</span></span><br><span class="line">                MiniCssExtractPlugin.loader,</span><br><span class="line">                <span class="comment">// 将css文件整合到js文件中</span></span><br><span class="line">                <span class="string">'css-loader'</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            <span class="comment">// 对输出的css文件进行重命名</span></span><br><span class="line">            filename: <span class="string">'css/built.css'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> OptimizeCssAssetsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'optimize-css-assets-webpack-plugin'</span>)<span class="comment">//压缩css文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//css兼容性处理</span></span><br><span class="line"><span class="comment">// 设置nodejs环境变量</span></span><br><span class="line"><span class="comment">// process.env.NODE_ENV = 'development';</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">            test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            use: [</span><br><span class="line">                MiniCssExtractPlugin.loader,</span><br><span class="line">                <span class="string">'css-loader'</span>,</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                  css兼容性处理：postcss --&gt; postcss-loader postcss-preset-env</span></span><br><span class="line"><span class="comment">                  帮postcss找到package.json中browserslist里面的配置，通过配置加载指定的css兼容性样式</span></span><br><span class="line"><span class="comment">                  需要在package.json中配置。具体可在github搜索browserslist即可</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                  "browserslist": &#123;</span></span><br><span class="line"><span class="comment">                    // 开发环境 --&gt; 设置node环境变量：process.env.NODE_ENV = development</span></span><br><span class="line"><span class="comment">                    "development": [</span></span><br><span class="line"><span class="comment">                      "last 1 chrome version",//兼容最近的 chrome浏览器</span></span><br><span class="line"><span class="comment">                      "last 1 firefox version",</span></span><br><span class="line"><span class="comment">                      "last 1 safari version"</span></span><br><span class="line"><span class="comment">                    ],</span></span><br><span class="line"><span class="comment">                    // 生产环境：默认是看生产环境</span></span><br><span class="line"><span class="comment">                    "production": [</span></span><br><span class="line"><span class="comment">                      "&gt;0.1%",//99.9%的浏览器</span></span><br><span class="line"><span class="comment">                      "not dead",//dead的浏览器</span></span><br><span class="line"><span class="comment">                      "not op_mini all"//mini浏览器</span></span><br><span class="line"><span class="comment">                    ]</span></span><br><span class="line"><span class="comment">                  &#125;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="comment">// 使用loader的默认配置</span></span><br><span class="line">                <span class="comment">// 'postcss-loader',</span></span><br><span class="line">                <span class="comment">// 修改loader的配置</span></span><br><span class="line">                &#123;</span><br><span class="line">                    loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        ident: <span class="string">'postcss'</span>,</span><br><span class="line">                        plugins: <span class="function"><span class="params">()</span> =&gt;</span> [</span><br><span class="line">                            <span class="comment">// postcss的插件</span></span><br><span class="line">                            <span class="built_in">require</span>(<span class="string">'postcss-preset-env'</span>)()</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'css/built.css'</span></span><br><span class="line">        &#125;),</span><br><span class="line">    		<span class="comment">// 压缩css</span></span><br><span class="line">    		<span class="keyword">new</span> OptimizeCssAssetsWebpackPlugin()</span><br><span class="line">    ],</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">//js语法检查</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        语法检查： eslint-loader  eslint</span></span><br><span class="line"><span class="comment">          注意：只检查自己写的源代码，第三方的库是不用检查的</span></span><br><span class="line"><span class="comment">          设置检查规则：</span></span><br><span class="line"><span class="comment">            package.json中eslintConfig中设置~</span></span><br><span class="line"><span class="comment">              "eslintConfig": &#123;</span></span><br><span class="line"><span class="comment">                "extends": "airbnb-base"</span></span><br><span class="line"><span class="comment">              &#125;</span></span><br><span class="line"><span class="comment">            airbnb --&gt; eslint-config-airbnb-base  eslint-plugin-import eslint</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        loader: <span class="string">'eslint-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          <span class="comment">// 自动修复eslint的错误</span></span><br><span class="line">          fix: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 下一行eslint所有规则都失效（下一行不进行eslint检查）</span></span><br><span class="line"><span class="comment">// eslint-disable-next-line</span></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">2</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">//js兼容性问题</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">        path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">              js兼容性处理：babel-loader @babel/core </span></span><br><span class="line"><span class="comment">                1. 基本js兼容性处理 --&gt; @babel/preset-env</span></span><br><span class="line"><span class="comment">                  问题：只能转换基本语法，如promise高级语法不能转换</span></span><br><span class="line"><span class="comment">                2. 全部js兼容性处理 --&gt; @babel/polyfill  </span></span><br><span class="line"><span class="comment">                  问题：我只要解决部分兼容性问题，但是将所有兼容性代码全部引入，体积太大了~</span></span><br><span class="line"><span class="comment">                3. 需要做兼容性处理的就做：按需加载  --&gt; core-js</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    <span class="comment">// 预设：指示babel做怎么样的兼容性处理</span></span><br><span class="line">                    presets: [</span><br><span class="line">                        [</span><br><span class="line">                            <span class="string">'@babel/preset-env'</span>,</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="comment">// 按需加载</span></span><br><span class="line">                                useBuiltIns: <span class="string">'usage'</span>,</span><br><span class="line">                                <span class="comment">// 指定core-js版本 下载的就是3.6.5</span></span><br><span class="line">                                corejs: &#123;</span><br><span class="line">                                    version: <span class="number">3</span></span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="comment">// 指定兼容性做到哪个版本浏览器</span></span><br><span class="line">                                targets: &#123;</span><br><span class="line">                                    chrome: <span class="string">'60'</span>,</span><br><span class="line">                                    firefox: <span class="string">'60'</span>,</span><br><span class="line">                                    ie: <span class="string">'9'</span>,</span><br><span class="line">                                    safari: <span class="string">'10'</span>,</span><br><span class="line">                                    edge: <span class="string">'17'</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">  <span class="comment">//mode: 'production' 设置后可以压缩js</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>webpack</category>
      </categories>
  </entry>
  <entry>
    <title>MongoDB</title>
    <url>/2020/08/13/MongoDB/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongod --dbpath &#x2F;usr&#x2F;local&#x2F;var&#x2F;mongodb --logpath &#x2F;usr&#x2F;local&#x2F;var&#x2F;log&#x2F;mongodb&#x2F;mongo.log --fork</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir ~&#x2F;data </span><br><span class="line">&#x2F;&#x2F;进入到~&#x2F;data目录</span><br><span class="line">$ cd ~&#x2F;data</span><br><span class="line">&#x2F;&#x2F;查看目录路径，下面会用到</span><br><span class="line">$ pwd</span><br><span class="line">&#x2F;Users&#x2F;xuzhaoning&#x2F;data</span><br><span class="line">&#x2F;&#x2F;这里的路径需要换成你自己电脑上面的路径</span><br><span class="line">$ sudo mongod --dbpath&#x3D;&#x2F;Users&#x2F;caochengxiang&#x2F;data  每次打开之前都需要在一个终端界面执行，然后输入mongo即可操作数据库，退出数据库ctr c即可</span><br><span class="line">http:&#x2F;&#x2F;localhost:27017&#x2F;来验证是否成功</span><br><span class="line">show dbs 显示当前所有数据库</span><br><span class="line">use 数据库名 进入指定的数据库   在mongodb中数据库和集合都不需要手动创建</span><br><span class="line">show collections 显示数据库所有的集合</span><br><span class="line">db.collection.insert(doc) collection-集合名 doc-&#123;name:&quot;w&quot;,age:18,gender:&quot;男&quot;&#125;</span><br><span class="line">db.collection.find() 查询集合中所有文档(数组) .count()所有结果数量</span><br><span class="line">db.collection.findOne() 返回查询到的第一个(文档类型)</span><br><span class="line">db.admin.drop()删除集合</span><br><span class="line">db.admin.insert(&#123;&quot;name&quot;:&quot;e&quot;,&quot;age&quot;:27&#125;)</span><br><span class="line">for(var i&#x3D;1;i&lt;30;i++)&#123;</span><br><span class="line">db.user.insert(&#123;&quot;username&quot;:&quot;zhangsan&quot;+i,&quot;age&quot;:i&#125;)</span><br><span class="line">&#125;</span><br><span class="line">db.admin.find(&#123;&quot;age&quot;:30&#125;)</span><br><span class="line">db.admin.find(&#123;&quot;age&quot;:&#123;$gt:22&#125;&#125;) &gt;</span><br><span class="line">db.admin.find(&#123;&quot;age&quot;:&#123;$gte:22&#125;&#125;) &gt;&#x3D;</span><br><span class="line">db.admin.find(&#123;&quot;age&quot;:&#123;$lt:22&#125;&#125;) &lt;</span><br><span class="line">db.admin.find(&#123;&quot;age&quot;:&#123;$lte:22&#125;&#125;) &lt;&#x3D;</span><br><span class="line">db.admin.find(&#123;&quot;age&quot;:&#123;$gte:22,$lte:24&#125;&#125;)</span><br><span class="line">db.admin.find(&#123;&quot;name&quot;:&#x2F;a&#x2F;&#125;) 包含a</span><br><span class="line">db.admin.find(&#123;&quot;name&quot;:&#x2F;^a&#x2F;&#125;) ^ a开头 $ a结尾</span><br><span class="line">db.admin.find(&#123;&#125;,&#123;name:1&#125;)查询一列或者多列</span><br><span class="line">db.admin.find(&#123;age:&#123;$gt:25&#125;&#125;,&#123;name:1,age:1&#125;)条件查询多列</span><br><span class="line">db.admin.find().sort(&#123;age:1&#125;)按照年龄升序 -1降序</span><br><span class="line">db.admin.find().limit(3)前三条数据</span><br><span class="line">db.admin.find().skip(2)3条以后的数据</span><br><span class="line">db.user.find(&#123;$or:[&#123;age:22&#125;,&#123;age:23&#125;]&#125;) 与查询</span><br><span class="line">db.user.find(&#123;$or:[&#123;age:22&#125;,&#123;age:23&#125;]&#125;).explain(&quot;executionStats&quot;)可查看执行的时间</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.user.update(&#123;&quot;username&quot;:&quot;zhangsan14&quot;&#125;,&#123;$set:&#123;&quot;username&quot;:&quot;zhangsan1234&quot;&#125;&#125;)修改</span><br><span class="line">db.user.update(&#123;&quot;username&quot;:&quot;zhangsan1234&quot;&#125;,&#123;$set:&#123;&quot;sex&quot;:&quot;男&quot;&#125;&#125;)新增一列</span><br><span class="line">若不设置$则直接替换匹配的数据</span><br><span class="line">db.user.update(&#123;&quot;age&quot;:13&#125;,&#123;$set:&#123;&quot;sex&quot;:&quot;男&quot;&#125;&#125;,&#123;multi:true&#125;)批量修改匹配数据</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.user.remove(&#123;&quot;username&quot;:&quot;zhangsan23&quot;&#125;)</span><br><span class="line">db.user.remove(&#123;&quot;age&quot;:&#123;$gt:26&#125;&#125;)</span><br><span class="line">db.user.remove(&#123;&quot;age&quot;:&#123;$gt:26&#125;&#125;,&#123;justOne:true&#125;)只删除一条</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.user.ensureIndex(&#123;&quot;username&quot;:1&#125;)设置索引升序</span><br><span class="line">db.user.getIndexes()获取当前集合索引</span><br><span class="line">db.user.dropIndex(&#123;&quot;username&quot;:1&#125;)删除</span><br><span class="line">db.user.ensureIndex(&#123;&quot;username&quot;:1&#125;,&quot;age&quot;:-1)复合索引  只有使用username及以上条件查询才会使用索引</span><br><span class="line">db.user.ensureIndex(&#123;&quot;username&quot;:1&#125;,&#123;&quot;unique&quot;:true&#125;)唯一索引</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongodb聚合管道 可以对集合中的文档进行交换和组合  用于表的额关联查询和数据统计</span><br><span class="line">$project 增加、删除、重命名字段</span><br><span class="line">db.order.aggregate([&#123;</span><br><span class="line">$project:&#123;trade_no:1,all_price:1&#125;</span><br><span class="line">&#125;])&#x2F;&#x2F;只返回文档中两个字段</span><br><span class="line"></span><br><span class="line">$match 条件匹配，只有满足条件的文档才能进入下一阶段</span><br><span class="line">db.order.aggregate([</span><br><span class="line">&#123;$project:&#123;trade_no:1,all_price:1&#125;&#125;,</span><br><span class="line">&#123;$match:&#123;&quot;all_price&quot;:&#123;$gt:90&#125;&#125;&#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">$limit 限制结果数量  $skip 跳过文档数量		$sort 条件排序</span><br><span class="line">db.order.aggregate([</span><br><span class="line">&#123;$project:&#123;trade_no:1,all_price:1&#125;&#125;,</span><br><span class="line">&#123;$match:&#123;&quot;all_price&quot;:&#123;$gte:90&#125;&#125;&#125;,&#123;$sort:&#123;&quot;all_price&quot;:-1&#125;&#125;</span><br><span class="line">])</span><br><span class="line">$group 条件组合结果 统计</span><br><span class="line">db.order_item.aggregate([ </span><br><span class="line">&#123; $group:&#123;_id:&quot;$order_id&quot;,</span><br><span class="line">total:&#123;$sum:&quot;$num&quot;&#125;&#125; </span><br><span class="line">&#125;])</span><br><span class="line"></span><br><span class="line">$lookup 用于引入其他集合的数据(表关联查询)</span><br><span class="line">db.order.aggregate([</span><br><span class="line">&#123;$lookup:</span><br><span class="line">&#123;</span><br><span class="line">from:&quot;order_item&quot;,</span><br><span class="line">localField:&quot;order_id&quot;,</span><br><span class="line">foreignField:&quot;order_id&quot;,</span><br><span class="line">as:&quot;items&quot;</span><br><span class="line">&#125;&#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">mongodump -h dbhost -d dbname -o dbdirectory 数据库备份</span><br><span class="line">mongostore -h dbhost -d dbname dbdirectory</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.order.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;uid&quot;:10,&quot;trade_no&quot;:&quot;111&quot;,&quot;all_price&quot;:100,&quot;all_num&quot;:2&#125;)</span><br><span class="line">db.order.insert(&#123;&quot;order_id&quot;:&quot;2&quot;,&quot;uid&quot;:7,&quot;trade_no&quot;:&quot;222&quot;,&quot;all_price&quot;:90,&quot;all_num&quot;:2&#125;)</span><br><span class="line">db.order.insert(&#123;&quot;order_id&quot;:&quot;3&quot;,&quot;uid&quot;:9,&quot;trade_no&quot;:&quot;333&quot;,&quot;all_price&quot;:20,&quot;all_num&quot;:6&#125;)</span><br><span class="line">db.order_item.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;title&quot;:&quot;商品鼠标1&quot;,&quot;price&quot;:50,num:1&#125;)</span><br><span class="line">db.order_item.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;title&quot;:&quot;商品鼠标2&quot;,&quot;price&quot;:50,num:1&#125;)</span><br><span class="line">db.order_item.insert(&#123;&quot;order_id&quot;:&quot;2&quot;,&quot;title&quot;:&quot;牛奶&quot;,&quot;price&quot;:50,num:1&#125;)</span><br><span class="line">db.order_item.insert(&#123;&quot;order_id&quot;:&quot;2&quot;,&quot;title&quot;:&quot;酸奶&quot;,&quot;price&quot;:40,num:1&#125;)</span><br><span class="line">db.order_item.insert(&#123;&quot;order_id&quot;:&quot;3&quot;,&quot;title&quot;:&quot;矿泉水&quot;,&quot;price&quot;:2,num:5&#125;)</span><br><span class="line">db.order_item.insert(&#123;&quot;order_id&quot;:&quot;3&quot;,&quot;title&quot;:&quot;毛巾&quot;,&quot;price&quot;:10,num:1&#125;)</span><br></pre></td></tr></table></figure>

<p>cnpm i mongodb –save</p>
]]></content>
  </entry>
  <entry>
    <title>node.js</title>
    <url>/2020/08/13/node-js-1/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">exports.add = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line">exports.mul = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a * b</span><br><span class="line">&#125;</span><br><span class="line">exports.name = <span class="string">"LI"</span></span><br><span class="line">exports.age = <span class="number">20</span></span><br><span class="line">exports.SayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"a+b"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//此时需要module.exports都可以 exports暴露变量只能使用.的形式</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    name: <span class="string">"W"</span>,</span><br><span class="line">    age: <span class="number">30</span>,</span><br><span class="line">    SayName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"QQ"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span></span><br><span class="line">    <span class="comment">// console.log(global.a)</span></span><br><span class="line">    <span class="comment">// 在node执行模块中代码时， 会在代码的顶部添加</span></span><br><span class="line">    <span class="comment">// function(exports, require, module, __filename, __dirname) &#123;&#125;</span></span><br><span class="line">    <span class="comment">//实际上模块中的代码都是包装在一个函数中执行的，并且在函数执行时同时传递进上面的五个实参</span></span><br><span class="line">    <span class="comment">// exports 将变量或函数暴露到外界</span></span><br><span class="line">    <span class="comment">// require 引入外部模块</span></span><br><span class="line">    <span class="comment">// module 当前模块本身  exports就是module的属性 也可以使用module.exports导出</span></span><br><span class="line">    <span class="comment">// __filename 完整路径</span></span><br><span class="line">    <span class="comment">// __dirname 所在文件夹路径</span></span><br><span class="line">    <span class="comment">// console.log(arguments.callee + "")</span></span><br><span class="line">    <span class="comment">// console.log(exports)</span></span><br><span class="line">    <span class="comment">// console.log(module.exports)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在node中有一个全局对象global， 作用与window相同</span></span><br><span class="line"><span class="comment">// 文件模块用户自己创建的模块</span></span><br><span class="line"><span class="keyword">var</span> md = <span class="built_in">require</span>(<span class="string">"./a"</span>)</span><br><span class="line">    <span class="comment">// 核心模块</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line">    <span class="comment">// console.log(md.add(123, 456))</span></span><br><span class="line">    <span class="comment">// console.log(md.mul(123, 456))</span></span><br><span class="line">    <span class="comment">// console.log(fs)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//npm search 包名 查询包</span></span><br><span class="line">    <span class="comment">// 进入终端当前的文件路径， npm install math下载类似的包</span></span><br><span class="line">    <span class="comment">//npm remove 包名 删除包</span></span><br><span class="line">    <span class="comment">//npm install 包名 --save 安装的同时设置为依赖。主要使用此类下载</span></span><br><span class="line">    <span class="comment">//npm install 下载当前项目所依赖的包</span></span><br><span class="line">    <span class="comment">//npm install 包名 -g 在全局模式安装包,一般都是工具</span></span><br><span class="line">    <span class="comment">//cnpm i express --save cnpm下载</span></span><br><span class="line"><span class="keyword">var</span> math = <span class="built_in">require</span>(<span class="string">"math"</span>)</span><br><span class="line"><span class="built_in">console</span>.log(math)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"BUFFER"</span></span><br><span class="line">    <span class="comment">// 将一个字符保存到buffer中</span></span><br><span class="line"><span class="keyword">var</span> buf = Buffer.from(str)</span><br><span class="line"><span class="built_in">console</span>.log(buf)</span><br><span class="line">    <span class="comment">// 创建一个buffer</span></span><br><span class="line"><span class="keyword">var</span> buf2 = <span class="keyword">new</span> Buffer.alloc(<span class="number">10</span>)</span><br><span class="line">buf2[<span class="number">0</span>] = <span class="number">90</span></span><br><span class="line">    <span class="comment">// buffer长度一旦确定就不能修改，连续的</span></span><br><span class="line">    <span class="comment">// 如果超过256自右向左选取前六位</span></span><br><span class="line">    <span class="comment">// toString()显示文本数据</span></span><br><span class="line">    <span class="comment">// buf2[10] = 120 </span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">0xaa</span> <span class="comment">//打印数字，输出显示十进制，可以toString(16)转换进制</span></span><br><span class="line"><span class="built_in">console</span>.log(buf2)</span><br><span class="line"><span class="keyword">var</span> buf3 = <span class="keyword">new</span> Buffer.allocUnsafe(<span class="number">10</span>) <span class="comment">//可能含有敏感数据</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// fs模块中有两种形式，同步、异步</span></span><br><span class="line"><span class="comment">// var fs = require("fs")</span></span><br><span class="line"><span class="comment">//     // 同步文件写入,顺序执行，没有考虑异常，一步错全部错</span></span><br><span class="line"><span class="comment">// var fd = fs.openSync("hello.txt", "w")</span></span><br><span class="line"><span class="comment">// fs.writeSync(fd, "HELLO", 10) //10写入位置</span></span><br><span class="line"><span class="comment">// fs.closeSync(fd)</span></span><br><span class="line"><span class="comment">//异步调用都是通过回调函数返回err错误对象，没有则为null fd</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line">    <span class="comment">// 异步文件写入,不会阻塞程序运行</span></span><br><span class="line">fs.open(<span class="string">"hello2.txt"</span>, <span class="string">"w"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, fd</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">        fs.write(fd, <span class="string">"HELLO"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"succcess"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            fs.close(fd, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"close file"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//简单文件写入，同样分为同步、异步</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line">    <span class="comment">// flag: w-写(不存在则创建) a-追加 r-读 r+-读写(文件不存在出现异常)</span></span><br><span class="line">    <span class="comment">// 读写路径可以写绝对路径</span></span><br><span class="line">fs.appendFile<span class="comment">//追加文件</span></span><br><span class="line">fs.writeFile(<span class="string">"hello3.txt"</span>, <span class="string">"HELLO"</span>, &#123; <span class="attr">flag</span>: <span class="string">"a"</span> &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"success"</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line">    <span class="comment">//流式写入</span></span><br><span class="line"><span class="keyword">var</span> ws = fs.createWriteStream(<span class="string">"hello2.txt"</span>)</span><br><span class="line">    <span class="comment">// 可以通过监听open和close时间来监听流的打开关闭</span></span><br><span class="line">ws.once(<span class="string">"open"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//绑定一次性事件</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"open"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">ws.once(<span class="string">"close"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"close"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">ws.write(<span class="string">"A"</span>)</span><br><span class="line">ws.write(<span class="string">"B"</span>)</span><br><span class="line">ws.write(<span class="string">"C"</span>)</span><br><span class="line">ws.end()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="comment">//简单文件读取</span></span><br><span class="line">    <span class="comment">//读取一个buffer，有利于读取任意类型文件(jpg,mp3).k可以复制文件</span></span><br><span class="line">fs.readFile(<span class="string">"hello2.txt"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">        <span class="comment">// console.log(data.toString())</span></span><br><span class="line">        fs.writeFile(<span class="string">"hell4.txt"</span>, data, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"write success"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">var</span> rs = fs.createReadStream(<span class="string">"a.png"</span>)</span><br><span class="line"><span class="keyword">var</span> ws = fs.createWriteStream(<span class="string">"aa.png"</span>)</span><br><span class="line">rs.once(<span class="string">"open"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"r-open"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">rs.once(<span class="string">"close"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"r-close"</span>)</span><br><span class="line">        <span class="comment">//数据读取完毕关闭可写流</span></span><br><span class="line">    ws.end()</span><br><span class="line">&#125;)</span><br><span class="line">rs.once(<span class="string">"open"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"w-open"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">ws.once(<span class="string">"close"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"w-close"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">rs.pipe(ws)<span class="comment">//可以替代下面代码 管道流适合大文件（图片、视频等）</span></span><br><span class="line">rs.on(<span class="string">"data"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//多次读取</span></span><br><span class="line">    <span class="comment">// console.log(data.length)</span></span><br><span class="line">    ws.write(data)</span><br><span class="line">&#125;)</span><br><span class="line">ws.end()</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">var</span> ise = fs.existsSync(<span class="string">"a.png"</span>) <span class="comment">//检查文件是否存在</span></span><br><span class="line"><span class="built_in">console</span>.log(ise)</span><br><span class="line"><span class="keyword">var</span> state = fs.statSync(<span class="string">"a.png"</span>)</span><br><span class="line">fs.stat(<span class="string">"a.png"</span>, (err, stat)=&gt;&#123; <span class="comment">//当前对象的状态信息</span></span><br><span class="line">    <span class="built_in">console</span>.log(stat)</span><br><span class="line">    <span class="built_in">console</span>.log(stat.isDirectory()) <span class="comment">//是否是文件夹 stat.isFile()是否为文件</span></span><br><span class="line">&#125;)</span><br><span class="line">fs.unlinkSync(<span class="string">"hell4.txt"</span>,(err)=&gt;&#123;</span><br><span class="line">  <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;&#125;</span><br><span class="line">&#125;) <span class="comment">//删除文件</span></span><br><span class="line">fs.readdir(<span class="string">"."</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, files</span>) </span>&#123; <span class="comment">//当前目录结构</span></span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(files)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">fs.truncateSync(<span class="string">"hello2.txt"</span>, <span class="number">10</span>) <span class="comment">//将文件修改为指定字节，截断</span></span><br><span class="line">fs.mkdir(<span class="string">"hello"</span>) <span class="comment">//创建目录</span></span><br><span class="line">fs.rmdir(<span class="string">"hello"</span>)<span class="comment">//删除目录</span></span><br><span class="line">fs.readdir(<span class="string">'./html'</span>,(err,data)=&gt;&#123;<span class="comment">//读取目录</span></span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)</span><br><span class="line">fs.renameSync(<span class="string">"a.png"</span>, <span class="string">"ccc.png"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123; <span class="comment">//可用于移动文件 路径一致重命名，不一致移动</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"rename"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">fs.watchFile(<span class="string">"hello.txt"</span>, &#123; <span class="attr">interval</span>: <span class="number">1000</span> &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">curr, prev</span>) </span>&#123; <span class="comment">//监听文件状态,可设置监听事件间隔</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"now size:"</span> + prev.size)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"now size:"</span> + curr.size)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>node.js</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5(6)</title>
    <url>/2020/08/10/HTML5-6/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--气泡效果--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        body &#123;</span><br><span class="line">            background: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        canvas &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">            background: white;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oc = <span class="built_in">document</span>.querySelector(<span class="string">"canvas"</span>);</span></span><br><span class="line">        if (oc.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = oc.getContext(<span class="string">"2d"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> arr = [];</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//将数组中的圆绘制到画布上</span></span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(arr)</span></span><br><span class="line">                    ctx.clearRect(0, 0, oc.width, oc.height);</span><br><span class="line"><span class="actionscript">                    <span class="comment">//动画</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span></span><br><span class="line">                        arr[i].deg += 5;</span><br><span class="line"><span class="javascript">                        arr[i].x = arr[i].startX + <span class="built_in">Math</span>.sin(arr[i].deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>) * arr[i].step * <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">                        arr[i].y = arr[i].startY - (arr[i].deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>) * arr[i].step;</span></span><br><span class="line">                        if (arr[i].y &lt;= 50) &#123;</span><br><span class="line">                            arr.splice(i, 1)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//绘制</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span></span><br><span class="line">                        ctx.save();</span><br><span class="line"><span class="actionscript">                        ctx.fillStyle = <span class="string">"rgba("</span> + arr[i].red + <span class="string">","</span> + arr[i].green + <span class="string">","</span> + arr[i].blue + <span class="string">","</span> + arr[i].alp + <span class="string">")"</span>;</span></span><br><span class="line">                        ctx.beginPath();</span><br><span class="line"><span class="javascript">                        ctx.arc(arr[i].x, arr[i].y, arr[i].r, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI);</span></span><br><span class="line">                        ctx.fill();</span><br><span class="line">                        ctx.restore();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, 1000 / 60)</span><br><span class="line"><span class="actionscript">                <span class="comment">//往arr中注入随机圆的信息</span></span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> r = <span class="built_in">Math</span>.random() * <span class="number">6</span> + <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> x = <span class="built_in">Math</span>.random() * oc.width;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> y = oc.height - r;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> red = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">255</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> green = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">255</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> blue = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">255</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 透明度</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> alp = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 弧度</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> deg = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> startX = x;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> startY = y;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//曲线的运动形式</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> step = <span class="built_in">Math</span>.random() * <span class="number">20</span> + <span class="number">10</span>;</span></span><br><span class="line">                arr.push(&#123;</span><br><span class="line">                    x: x,</span><br><span class="line">                    y: y,</span><br><span class="line">                    r: r,</span><br><span class="line">                    red: red,</span><br><span class="line">                    green: green,</span><br><span class="line">                    blue: blue,</span><br><span class="line">                    alp: alp,</span><br><span class="line">                    deg: deg,</span><br><span class="line">                    startX: startX,</span><br><span class="line">                    startY: startY,</span><br><span class="line">                    step: step</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;, 50)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>practice</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5(5)</title>
    <url>/2020/08/10/HTML5-5/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">id</span>=<span class="string">"html"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: pink;</span><br><span class="line">            left: 100px;</span><br><span class="line">            top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#inner1</span> &#123;</span></span><br><span class="line">            position: fixed;</span><br><span class="line">            background: deeppink;</span><br><span class="line">            left: 50px;</span><br><span class="line">            top: 150px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#inner2</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            background: hotpink;</span><br><span class="line">            left: 80px;</span><br><span class="line">            top: 70px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#inner3</span> &#123;</span></span><br><span class="line">            position: fixed;</span><br><span class="line">            background: yellow;</span><br><span class="line">            left: 60px;</span><br><span class="line">            top: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        div &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            padding: 50px;</span><br><span class="line">            border: 10px solid;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"body"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span>wrap</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner1"</span>&gt;</span>inner1</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner2"</span>&gt;</span>inner2</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner3"</span>&gt;</span>inner3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">    		 * </span><br><span class="line">    		ev||event</span><br><span class="line">    		鼠标滚轮</span><br><span class="line">    		事件绑定</span><br><span class="line">    		offsetParent</span><br><span class="line">    			1.父级是否有定位(4种)</span><br><span class="line">    			2.本身是否有定位(4种)</span><br><span class="line">    			3.浏览器不一样(5大pc浏览器+老祖宗(ie 6 7 8))</span><br><span class="line">    			4*4*8 = 128</span><br><span class="line">    			本身定位为fixed</span><br><span class="line"><span class="actionscript">    					==&gt; offsetParent:<span class="literal">null</span>（不是火狐）</span></span><br><span class="line">    							offsetTop和offsetLeft也是参照于body的</span><br><span class="line">    					==&gt; offsetParent:body（火狐）</span><br><span class="line">    			本身定位不为fixed</span><br><span class="line">    					父级没有定位</span><br><span class="line">    						==&gt; offsetParent:body</span><br><span class="line">    					父级有定位</span><br><span class="line">    						==&gt; offsetParent:定位父级</span><br><span class="line">    						###haslayout</span><br><span class="line">	ie7以下,如果当前元素的某个父级触发了haslayout，</span><br><span class="line">		那么offsetParent就会被指向到这个触发了layout特性的父节点上</span><br><span class="line">  ###注意点</span><br><span class="line">	1.分清parentNode和offsetParent的区别</span><br><span class="line">		parentNode：直接父级</span><br><span class="line">		offsetParent：类似于css的包含块</span><br><span class="line">	2.offsetParent的作用</span><br><span class="line">		offsetLeft 和 offsetTop 是参照于offsetParent的内边距边界的</span><br><span class="line">	3.dom里所有的元素都是有offsetLeft 和 offsetTop的</span><br><span class="line">    		*/</span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(inner3.offsetTop, inner3.offsetLeft)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">id</span>=<span class="string">"html"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">绝对位置:到body的距离</span></span><br><span class="line"><span class="comment">相对位置:到视口的距离 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line"><span class="css">            <span class="comment">/*overflow: hidden;*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: pink;</span><br><span class="line">            left: 200px;</span><br><span class="line">            top: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#inner1</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: deeppink;</span><br><span class="line">            left: 150px;</span><br><span class="line">            top: 150px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        div &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"body"</span> <span class="attr">style</span>=<span class="string">"height: 3000px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span>wrap</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner1"</span>&gt;</span></span><br><span class="line">            inner1</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inner1 = <span class="built_in">document</span>.querySelector(<span class="string">"#inner1"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> point1 = getPointAb(inner1);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> point2 = getPointRe(inner1);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(point1, point2);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//boder margin会影响这个函数的取值  相对定位</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getPointRe</span><span class="params">(node)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//while循环叠加offsetParent的offsetTop和offsetLeft</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> x = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> y = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">while</span> (node) &#123;</span></span><br><span class="line">                x += node.offsetLeft;</span><br><span class="line">                y += node.offsetTop;</span><br><span class="line"></span><br><span class="line">                node = node.offsetParent;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> L = <span class="built_in">document</span>.documentElement.scrollLeft || <span class="built_in">document</span>.body.scrollLeft;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> T = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                x: x - L,</span><br><span class="line">                y: y - T</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//boder margin会影响这个函数的取值  绝对定位</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getPointAb</span><span class="params">(node)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//while循环叠加offsetParent的offsetTop和offsetLeft</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> x = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> y = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">while</span> (node) &#123;</span></span><br><span class="line">                x += node.offsetLeft;</span><br><span class="line">                y += node.offsetTop;</span><br><span class="line"></span><br><span class="line">                node = node.offsetParent;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                x: x,</span><br><span class="line">                y: y</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--使用getBoundingClientRect可以有效解决相对定位与绝对定位--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// </span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         		 * getBoundingClientRect：一个元素四个角！的相对位置</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         		 * getBoundingClientRect + 滚动条滚动时元素滚动的距离---&gt; 绝对位置</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         		 * </span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			代表元素border-box的尺寸</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			height</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			width</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			元素左上角的相对位置</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			left</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			top</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			元素右下角的相对位置</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			right</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         			bottom</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//         		</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inner1 = <span class="built_in">document</span>.querySelector(<span class="string">"#inner1"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> point = inner1.getBoundingClientRect();</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(point);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">id</span>=<span class="string">"html"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">停靠栏，根据距离设置图片宽度 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">			<span class="selector-id">#wrap</span>&#123;</span></span><br><span class="line">				width: 200px;</span><br><span class="line">				height: 200px;</span><br><span class="line">				padding: 50px;</span><br><span class="line">				border: 10px solid;</span><br><span class="line">				margin: 60px;</span><br><span class="line">				box-sizing: border-box;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"body"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">			wrap</span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</span></span><br><span class="line"><span class="actionscript">			<span class="comment">//clientWidth : padding box(可视区域)</span></span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(wrap.clientWidth,wrap.clientHeight);</span></span><br><span class="line"><span class="actionscript">			<span class="comment">//offsetWidth : padding box(可视区域)+border</span></span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(wrap.offsetWidth,wrap.offsetHeight);</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//document.documentElement.clientWidth并不是根标签的可视区域，就是视口的大小</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> w = <span class="built_in">document</span>.documentElement.clientWidth;</span></span><br><span class="line"><span class="actionscript">			<span class="comment">//document.documentElement.offsetWidth   根标签的border-box</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> w2 = <span class="built_in">document</span>.documentElement.offsetWidth;</span></span><br><span class="line">      /*</span><br><span class="line">			 注意！！</span><br><span class="line">					在ie10及ie10以下，根标签的clientWidth和offsetWidth</span><br><span class="line">									 统一被指定为视口的宽度</span><br><span class="line">			*/</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--停靠栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;        </span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;        </span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            width: 100%;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span>&gt;<span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            width: 64px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/1.png"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/2.png"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/3.png"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/4.png"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/5.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> r = <span class="number">320</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> imgNodes = <span class="built_in">document</span>.querySelectorAll(<span class="string">"#wrap &gt; img"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span></span><br><span class="line">            ev = ev || event;</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgNodes.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> a = imgNodes[i].getBoundingClientRect().left + imgNodes[i].offsetWidth / <span class="number">2</span> - ev.clientX;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> b = imgNodes[i].getBoundingClientRect().top + imgNodes[i].offsetHeight / <span class="number">2</span> - ev.clientY;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> c = <span class="built_in">Math</span>.sqrt(a * a + b * b);</span></span><br><span class="line">                if (c &gt;= r) &#123;</span><br><span class="line">                    c = r;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                imgNodes[i].style.width = <span class="number">128</span> - c * <span class="number">0.2</span> + <span class="string">"px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 画正余弦图像 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;       </span><br><span class="line"><span class="css">        <span class="selector-id">#test</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 200px;</span><br><span class="line">            top: 300px;</span><br><span class="line">            width: 10px;</span><br><span class="line">            height: 10px;</span><br><span class="line">            background: black;</span><br><span class="line">        &#125;        </span><br><span class="line"><span class="css">        <span class="selector-id">#test2</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 200px;</span><br><span class="line">            top: 300px;</span><br><span class="line">            width: 10px;</span><br><span class="line">            height: 10px;</span><br><span class="line">            background: yellow;</span><br><span class="line">        &#125;        </span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            border: 1px solid;</span><br><span class="line">        &#125;      </span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            border: 1px solid;</span><br><span class="line">            color: yellow;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> testNode = <span class="built_in">document</span>.querySelector(<span class="string">"#test"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> startX = testNode.offsetLeft;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> startY = testNode.offsetTop;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> testNode2 = <span class="built_in">document</span>.querySelector(<span class="string">"#test2"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> startX2 = testNode2.offsetLeft;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> startY2 = testNode2.offsetTop;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//角度</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> deg = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> step = <span class="number">100</span>;</span></span><br><span class="line"><span class="actionscript">        setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">            deg++;</span><br><span class="line"><span class="javascript">            testNode.style.left = startX + (deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>) * step / <span class="number">2</span> + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="javascript">            testNode.style.top = startY + <span class="built_in">Math</span>.sin(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>) * step * <span class="number">2</span> + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">            testNode2.style.left = startX + (deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>) * step / <span class="number">2</span> + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="javascript">            testNode2.style.top = startY + <span class="built_in">Math</span>.cos(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>) * step * <span class="number">2</span> + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> boxNode = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// dom添加class toggle(class, true|false)false移除  remove(class1, class2, ...)</span></span></span><br><span class="line"><span class="actionscript">            boxNode.classList.add(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="actionscript">            boxNode.style.left = testNode.offsetLeft + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">            boxNode.style.top = testNode.offsetTop + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(boxNode);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> boxNode2 = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// dom添加class toggle(class, true|false)false移除  remove(class1, class2, ...)</span></span></span><br><span class="line"><span class="actionscript">            boxNode2.classList.add(<span class="string">"box2"</span>);</span></span><br><span class="line"><span class="actionscript">            boxNode2.style.left = testNode2.offsetLeft + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">            boxNode2.style.top = testNode2.offsetTop + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(boxNode2);</span></span><br><span class="line">        &#125;, 1000 / 60)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        body &#123;</span><br><span class="line">            background: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        canvas &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">            background: white;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oc = <span class="built_in">document</span>.querySelector(<span class="string">"canvas"</span>);</span></span><br><span class="line">        if (oc.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = oc.getContext(<span class="string">"2d"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> arr = [];</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//将数组中的圆绘制到画布上</span></span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                ctx.clearRect(0, 0, oc.width, oc.height);</span><br><span class="line"><span class="actionscript">                <span class="comment">//动画</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span></span><br><span class="line">                    if (arr[i].alp &lt;= 0) &#123;</span><br><span class="line">                        arr.splice(i, 1);</span><br><span class="line">                    &#125;</span><br><span class="line">                    arr[i].r++;</span><br><span class="line">                    arr[i].alp -= 0.01;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">//绘制</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span></span><br><span class="line">                    ctx.save();</span><br><span class="line"><span class="actionscript">                    ctx.fillStyle = <span class="string">"rgba("</span> + arr[i].red + <span class="string">","</span> + arr[i].green + <span class="string">","</span> + arr[i].blue + <span class="string">","</span> + arr[i].alp + <span class="string">")"</span>;</span></span><br><span class="line">                    ctx.beginPath();</span><br><span class="line"><span class="javascript">                    ctx.arc(arr[i].x, arr[i].y, arr[i].r, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI);</span></span><br><span class="line">                    ctx.fill();</span><br><span class="line">                    ctx.restore();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, 1000 / 60)</span><br><span class="line"><span class="actionscript">            <span class="comment">//往arr中注入随机圆的信息</span></span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> x = <span class="built_in">Math</span>.random() * oc.width;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> y = <span class="built_in">Math</span>.random() * oc.height;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> r = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> red = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">255</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> green = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">255</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> blue = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">255</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> alp = <span class="number">1</span>;</span></span><br><span class="line">                arr.push(&#123;</span><br><span class="line">                    x: x,</span><br><span class="line">                    y: y,</span><br><span class="line">                    r: r,</span><br><span class="line">                    red: red,</span><br><span class="line">                    green: green,</span><br><span class="line">                    blue: blue,</span><br><span class="line">                    alp: alp</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;, 50)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>practice</category>
      </categories>
  </entry>
  <entry>
    <title>canvas(3)</title>
    <url>/2020/08/09/canvas-3/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视频播放器 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"n.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"https://www.17sucai.com/preview/501914/2017-08-04/%E9%A1%B5%E9%9D%A2/media/mov_bbb.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"start"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"end"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"deeppink"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"others"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"now"</span>&gt;</span>00:00:00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>/<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"all"</span>&gt;</span>00:00:00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sound"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"switch"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-volume-up"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-volume-down"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"deeppink"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"full-screen"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-compress"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-arrows-alt"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> control = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> video = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;video"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 进度条</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> progress = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.progress"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inner = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.progress&gt;.wrap&gt;.inner"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> deeppink = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.progress&gt;.deeppink"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 开始停止</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> start = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap .buttons&gt;.start"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> stop = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap .buttons&gt;.end"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 时间</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> all = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others .all"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> now = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others .now"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> switchNode = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others&gt;.sound&gt;.switch"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> switchNode_Span = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others&gt;.sound&gt;.switch&gt;span"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 音量</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> progress2 = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others .progress"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inner2 = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others .progress&gt;.wrap&gt;.inner"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> deeppink2 = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others .progress&gt;.deeppink"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 全屏显示</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> full_screen = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others&gt;.full-screen"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> full_screenspan = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap&gt;.control&gt;.others&gt;.full-screen&gt;span"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        video.width = <span class="built_in">document</span>.documentElement.clientWidth</span></span><br><span class="line"><span class="javascript">        video.height = <span class="built_in">document</span>.documentElement.clientHeight - control.offsetHeight</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 重新计算当前视口的宽高， 达到自适应</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement.clientWidth &gt;= <span class="number">500</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    video.width = <span class="built_in">document</span>.documentElement.clientWidth</span></span><br><span class="line"><span class="javascript">                    video.height = <span class="built_in">document</span>.documentElement.clientHeight - control.offsetHeight</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 记录滑动后音量坐标</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> flag = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> timer = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 全屏标志</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> isFullScreen = <span class="literal">false</span></span></span><br><span class="line">        player()</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">player</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//视频第一帧加载完毕后确定总时长</span></span></span><br><span class="line"><span class="actionscript">            video.addEventListener(<span class="string">"loadeddata"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                    all.innerHTML = changeTime(video.duration)</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="actionscript">                <span class="comment">// 进度条功能</span></span></span><br><span class="line"><span class="actionscript">            progress.onclick = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">                ev = ev || event</span><br><span class="line"><span class="actionscript">                addclass(start, <span class="string">"active"</span>)</span></span><br><span class="line">                video.play()</span><br><span class="line">                timer = setInterval(move, 100)</span><br><span class="line"><span class="actionscript">                video.currentTime = video.duration * ((ev.clientX - <span class="keyword">this</span>.offsetLeft) / (progress.clientWidth - inner.offsetWidth))</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            stop.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                removeclass(start, <span class="string">"active"</span>)</span></span><br><span class="line">                video.pause()</span><br><span class="line">                clearInterval(timer)</span><br><span class="line">                inner.style.left = deeppink.style.width = video.currentTime = 0</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            start.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                    if (video.paused) &#123;</span><br><span class="line"><span class="actionscript">                        addclass(<span class="keyword">this</span>, <span class="string">"active"</span>)</span></span><br><span class="line">                        video.play()</span><br><span class="line">                        timer = setInterval(move, 100)</span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                        removeclass(<span class="keyword">this</span>, <span class="string">"active"</span>)</span></span><br><span class="line">                        video.pause()</span><br><span class="line">                        clearInterval(timer)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 音量控制</span></span></span><br><span class="line"><span class="actionscript">            inner2.style.left = deeppink2.style.width = progress2.clientWidth - inner2.offsetWidth + <span class="string">"px"</span></span></span><br><span class="line"><span class="actionscript">            switchNode.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                if (video.muted) &#123;</span><br><span class="line"><span class="actionscript">                    video.muted = <span class="literal">false</span></span></span><br><span class="line">                    video.volume = 1</span><br><span class="line"><span class="actionscript">                    removeclass(switchNode_Span, <span class="string">"active"</span>)</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 判断一开始就点击音量图标， 导致无法重置</span></span></span><br><span class="line">                    flag = flag == 0 ? 1 : flag</span><br><span class="line"><span class="actionscript">                    inner2.style.left = deeppink2.style.width = (progress2.clientWidth - inner2.offsetWidth) * flag + <span class="string">"px"</span></span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    video.muted = <span class="literal">true</span></span></span><br><span class="line">                    video.volume = 0</span><br><span class="line"><span class="actionscript">                    addclass(switchNode_Span, <span class="string">"active"</span>)</span></span><br><span class="line"><span class="actionscript">                    inner2.style.left = deeppink2.style.width = <span class="number">0</span> + <span class="string">"px"</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            full_screen.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                changeclass(full_screenspan, <span class="string">"active"</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 全屏点击事件</span></span></span><br><span class="line">                if (isFullScreen) &#123;</span><br><span class="line"><span class="actionscript">                    isFullScreen = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.exitFullscreen()</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.mozCancelFullScreen()</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitCancelFullScreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.webkitCancelFullScreen()</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msExitFullscreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.msExitFullscreen()</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    isFullScreen = <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> docElm = <span class="built_in">document</span>.documentElement</span></span><br><span class="line">                    if (docElm.requestFullscreen) &#123;</span><br><span class="line">                        docElm.requestFullscreen()</span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozRequestFullScreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.mozRequestFullScreen()</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitRequestFullScreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.webkitRequestFullScreen()</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msRequestFullscreen) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.msRequestFullscreen()</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            inner.style.left = deeppink.style.width = (video.currentTime / video.duration) * (progress.clientWidth - inner.offsetWidth) + <span class="string">"px"</span></span></span><br><span class="line">            now.innerHTML = changeTime(video.currentTime)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 滑块拖动进度条更新</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> callback = &#123;</span></span><br><span class="line"><span class="actionscript">                move: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    deeppink.style.width = <span class="keyword">this</span>.offsetLeft + <span class="string">"px"</span></span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 在拖动的时刻视频进度不断更新</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> scale = <span class="keyword">this</span>.offsetLeft / (progress.clientWidth - inner.offsetWidth)</span></span><br><span class="line">                    video.currentTime = video.duration * scale</span><br><span class="line">                    now.innerHTML = changeTime(video.currentTime)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 音量滑动</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> callback2 = &#123;</span></span><br><span class="line"><span class="actionscript">            move: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                deeppink2.style.width = <span class="keyword">this</span>.offsetLeft + <span class="string">"px"</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> scale = (<span class="keyword">this</span>.offsetLeft / (progress2.clientWidth - inner2.offsetWidth)).toFixed(<span class="number">1</span>)</span></span><br><span class="line">                flag = scale</span><br><span class="line">                video.volume = scale</span><br><span class="line">                if (video.volume == 0) &#123;</span><br><span class="line"><span class="actionscript">                    addclass(switchNode_Span, <span class="string">"active"</span>)</span></span><br><span class="line"><span class="actionscript">                    video.muted = <span class="literal">true</span></span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    removeclass(switchNode_Span, <span class="string">"active"</span>)</span></span><br><span class="line"><span class="actionscript">                    video.muted = <span class="literal">false</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        drag(inner, callback)</span><br><span class="line">        drag(inner2, callback2)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">drag</span><span class="params">(obj, callback)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            obj.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">(event)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//解决IE中选中后会作为搜索信息搜索</span></span></span><br><span class="line">                if (obj.setCapature) &#123;</span><br><span class="line">                    obj.setCapature();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//解决点击后鼠标位于左上角</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ol = event.clientX - obj.offsetLeft;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ot = event.clientY - obj.offsetTop;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> st = <span class="built_in">document</span>.body.scrollTop || <span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> sl = <span class="built_in">document</span>.body.scrollLeft || <span class="built_in">document</span>.documentElement.scrollLeft;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//此处使用document而不是box1为了避免元素被遮盖后无法移动</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> left = event.clientX - ol;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> top = event.clientY - ot;</span></span><br><span class="line">                    if (left &lt; 0) &#123;</span><br><span class="line">                        left = 0</span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (left &gt; (obj.parentNode.clientWidth - obj.offsetWidth)) &#123;</span></span><br><span class="line">                        left = obj.parentNode.clientWidth - obj.offsetWidth</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    obj.style.left = left + sl + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (callback &amp;&amp; callback[<span class="string">"move"</span>] &amp;&amp; <span class="keyword">typeof</span> callback[<span class="string">"move"</span>] == <span class="string">"function"</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        callback[<span class="string">"move"</span>].call(obj)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//取消onmousemove即可</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmouseup = <span class="literal">null</span>;</span></span><br><span class="line">                    obj.releaseCapture &amp;&amp; obj.releaseCapture();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="actionscript">                <span class="comment">//防止拖拽网页中内容去自动搜索</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 工具类</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 1）addclass</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">addclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line">            if (!hasclass(obj, cn)) &#123;</span><br><span class="line"><span class="actionscript">                obj.className += <span class="string">" "</span> + cn;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">//检查是否含有cn</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">hasclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var reg = /\bb2\b/;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\b"</span> + cn + <span class="string">"\\b"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> reg.test(obj.className);</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">removeclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\b"</span> + cn + <span class="string">"\\b"</span>);</span></span><br><span class="line"><span class="actionscript">            obj.className = obj.className.replace(reg, <span class="string">""</span>);</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">//元素中含有则删除，没有添加</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">changeclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line">            if (hasclass(obj, cn)) &#123;</span><br><span class="line">                removeclass(obj, cn);</span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">                addclass(obj, cn);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 2)转换时间格式</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">changeTime</span><span class="params">(time)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            time = <span class="built_in">parseInt</span>(time)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> h = toZero(<span class="built_in">Math</span>.floor(time / <span class="number">3600</span>))</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> m = toZero(<span class="built_in">Math</span>.floor(time % <span class="number">3600</span> / <span class="number">60</span>))</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> s = toZero(<span class="built_in">Math</span>.round(time % <span class="number">3600</span>))</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> h + <span class="string">":"</span> + m + <span class="string">":"</span> + s</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">toZero</span><span class="params">(num)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> val = <span class="string">""</span></span></span><br><span class="line">            if (num &lt; 10) &#123;</span><br><span class="line"><span class="actionscript">                val = <span class="string">"0"</span> + num</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">                val = val + num</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> val</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"reset.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"./font/css/all.css"</span>;</span><br><span class="line"><span class="selector-class">.progress1</span>()&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="selector-class">.wrap</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">3px</span>;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">11px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#737373</span>;</span><br><span class="line">        <span class="selector-class">.inner</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">9px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">7px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: white;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">            <span class="attribute">margin-top</span>: -<span class="number">2px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.deeppink</span>&#123;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">11px</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">3px</span>;</span><br><span class="line">        <span class="attribute">background</span>: deeppink;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">overflow</span>: auto; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#383838</span>;</span><br><span class="line">    <span class="selector-class">.control</span>&#123;</span><br><span class="line">        <span class="attribute">min-width</span>: <span class="number">800px</span>;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#2A2A2A</span>;</span><br><span class="line">        <span class="selector-class">.buttons</span>&#123;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">55px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">            <span class="attribute">color</span>: white;</span><br><span class="line">            <span class="selector-tag">&amp;</span>&gt;<span class="selector-tag">span</span>&#123;</span><br><span class="line">                <span class="attribute">display</span>: inline-block;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">9px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">11px</span>;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">                <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span><br><span class="line">                <span class="selector-tag">&amp;</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">                    <span class="selector-tag">&amp;</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">                        <span class="attribute">content</span>: <span class="string">'\f144'</span>;</span><br><span class="line">                        <span class="attribute">font-family</span>: <span class="string">'Font Awesome 5 Free'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="selector-tag">&amp;</span><span class="selector-class">.active</span>&#123;</span><br><span class="line">                        <span class="selector-tag">&amp;</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">                            <span class="attribute">content</span>: <span class="string">'\f28b'</span>;</span><br><span class="line">                            <span class="attribute">font-family</span>: <span class="string">'Font Awesome 5 Free'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="selector-tag">&amp;</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">                    <span class="selector-tag">&amp;</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">                        <span class="attribute">content</span>: <span class="string">'\f28b'</span>;</span><br><span class="line">                        <span class="attribute">font-family</span>: <span class="string">'Font Awesome 5 Free'</span></span><br><span class="line">                    &#125; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">&amp;</span>&gt;<span class="selector-class">.progress</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">230px</span> <span class="number">0</span> <span class="number">55px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">            <span class="selector-class">.progress1</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.others</span>&#123;</span><br><span class="line">            <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">230px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">            <span class="selector-tag">&amp;</span>&gt;<span class="selector-tag">div</span>&#123;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">                <span class="attribute">float</span>: left;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-class">.time</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">                <span class="attribute">color</span>: white;</span><br><span class="line">                <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">                <span class="attribute">text-align</span>: center;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-class">.sound</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">                <span class="selector-tag">&amp;</span>&gt;<span class="selector-tag">div</span>&#123;</span><br><span class="line">                    <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">                    <span class="attribute">float</span>: left;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="selector-class">.switch</span>&#123;</span><br><span class="line">                    <span class="attribute">text-align</span>: center;</span><br><span class="line">                    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">                    <span class="selector-tag">&amp;</span>&gt;<span class="selector-tag">span</span>&#123;</span><br><span class="line">                        <span class="attribute">display</span>: inline-block;</span><br><span class="line">                        <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">                        <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">                        <span class="attribute">margin</span>: <span class="number">7px</span> auto;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="selector-class">.progress</span>&#123;</span><br><span class="line">                    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">                    <span class="selector-class">.progress1</span>()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-class">.full-screen</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">                <span class="attribute">text-align</span>: center;</span><br><span class="line">                <span class="selector-tag">&amp;</span>&gt;<span class="selector-tag">span</span>&#123;</span><br><span class="line">                    <span class="attribute">display</span>: inline-block;</span><br><span class="line">                    <span class="attribute">margin</span>: <span class="number">7px</span> auto;</span><br><span class="line">                    <span class="attribute">width</span>: <span class="number">11px</span>;</span><br><span class="line">                    <span class="attribute">height</span>: <span class="number">11px</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>canvas</category>
      </categories>
  </entry>
  <entry>
    <title>canvas(2)</title>
    <url>/2020/08/07/canvas-2/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#date</span> &#123;</span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#clock</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate3d(-50%, -50%, 0)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- canvas中插入图片必须等图片加载完成才能操作 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"clock"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> clock = <span class="built_in">document</span>.querySelector(<span class="string">"#clock"</span>)</span></span><br><span class="line">        if (clock.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = clock.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> img = <span class="keyword">new</span> Image()</span></span><br><span class="line"><span class="actionscript">            img.src = <span class="string">"./Resource/ad-1.jpg"</span></span></span><br><span class="line"><span class="actionscript">            img.onload = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                draw()</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 将图片设置为背景</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var pattern = ctx.createPattern(img, "no-repeat") //repeat/repeat-x/repeat-y</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillStyle = pattern</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.drawImage(img, 100, 100, 200, 200) //原点位置，宽高</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//线性渐变</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var Gradient = ctx.createLinearGradient(0, 0, 250, 250)//控制渐变方向</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// Gradient.addColorStop(0, "red")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// Gradient.addColorStop(0.5, "yellow")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// Gradient.addColorStop(1, "green")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillStyle = Gradient</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//径向渐变</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> Gradient = ctx.createRadialGradient(<span class="number">150</span>, <span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">150</span>, <span class="number">100</span>) <span class="comment">//圆心，半径、圆心，半径。控制渐变区域</span></span></span><br><span class="line"><span class="actionscript">            Gradient.addColorStop(<span class="number">0</span>, <span class="string">"red"</span>)</span></span><br><span class="line"><span class="actionscript">            Gradient.addColorStop(<span class="number">0.5</span>, <span class="string">"yellow"</span>)</span></span><br><span class="line"><span class="actionscript">            Gradient.addColorStop(<span class="number">1</span>, <span class="string">"green"</span>)</span></span><br><span class="line">            ctx.fillStyle = Gradient</span><br><span class="line">            ctx.fillRect(0, 0, 300, 300)</span><br><span class="line">          </span><br><span class="line"><span class="actionscript">          <span class="comment">//文本操作</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var ctx = clock.getContext("2d")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillStyle = "green"</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.font = "35px sans-serif"</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     // ctx.textAlign = "center" //文本一半在左边一半在右边，当前为100px的位置</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.textBaseline = "middle" //设置文本基线的位置</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     // var obj = ctx.measureText("李白") //返回关于文本尺寸的信息</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     // ctx.strokeText("李白", 100, 0)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     // ctx.fillText("李白", 100, 0)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     //水平垂直居中</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var ctx0 = document.getElementById('clock')</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var w = ctx.measureText('水清无鱼').width</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillText('水清无鱼', (ctx0.width - w) / 2, (ctx0.height - 35) / 2)</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 像素点操作 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#date</span> &#123;</span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate3d(-50%, -50%, 0)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#canvas"</span>)</span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line">            ctx.save()</span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillStyle = "rgba(255,192,203,1)" //透明度0-255</span></span></span><br><span class="line">            ctx.beginPath()</span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillRect(50, 50, 100, 100)</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> image = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">150</span>) <span class="comment">//获取所选元素的信息，width/height/data每一个像素点的rgba值</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; image.data.length; i++) &#123;</span></span><br><span class="line">                image.data[4 * i + 3] = 100</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            ctx.putImageData(image, <span class="number">0</span>, <span class="number">0</span>) <span class="comment">//修改像素点</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> image1 = ctx.createImageData(<span class="number">100</span>, <span class="number">100</span>) <span class="comment">//创建像素</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; image1.data.length; i++) &#123;</span></span><br><span class="line">                image1.data[4 * i + 3] = 255</span><br><span class="line">            &#125;</span><br><span class="line">            ctx.putImageData(image1, 100, 100)</span><br><span class="line">            ctx.restore()</span><br><span class="line"><span class="actionscript">                <span class="comment">//拿到画布中所有的信息</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> imageData = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var color = getPxinfo(imageData, 99, 99)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log(color)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// setPxinfo(imageData, 130, 130, [0, 0, 0, 255])</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imageData.width; i++) &#123;</span></span><br><span class="line">                setPxinfo(imageData, i, 60, [0, 0, 0, 255])</span><br><span class="line">            &#125;</span><br><span class="line">            ctx.putImageData(imageData, 0, 0)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//获取任意位置的像素点rgba</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getPxinfo</span><span class="params">(imageData, x, y)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> color = []</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> data = imageData.data</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> w = imageData.width</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> h = imageData.height</span></span><br><span class="line">            color[0] = data[(y * w + x) * 4]</span><br><span class="line">            color[1] = data[(y * w + x) * 4 + 1]</span><br><span class="line">            color[2] = data[(y * w + x) * 4 + 2]</span><br><span class="line">            color[3] = data[(y * w + x) * 4 + 3]</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> color</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//设置任意位置的像素点rgba</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">setPxinfo</span><span class="params">(imageData, x, y, color)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> data = imageData.data</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> w = imageData.width</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> h = imageData.height</span></span><br><span class="line">            data[(y * w + x) * 4] = color[0]</span><br><span class="line">            data[(y * w + x) * 4 + 1] = color[1]</span><br><span class="line">            data[(y * w + x) * 4 + 2] = color[2]</span><br><span class="line">            data[(y * w + x) * 4 + 3] = color[3]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 马赛克，chrome会出现跨域问题，百度即可解决 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- open -n -a /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --args --user-data-dir="/tmp/chrome_dev_test" --disable-web-security --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#date</span> &#123;</span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate3d(-50%, -50%, 0)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- canvas中插入图片必须等图片加载完成才能操作 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#canvas"</span>)</span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> img = <span class="keyword">new</span> Image()</span></span><br><span class="line"><span class="actionscript">            img.src = <span class="string">"./Resource/ad-1.jpg"</span></span></span><br><span class="line"><span class="actionscript">            img.onload = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                canvas.width = img.width</span><br><span class="line">                canvas.height = img.height</span><br><span class="line">                draw()</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                ctx.drawImage(img, <span class="number">0</span>, <span class="number">0</span>) <span class="comment">//原点位置，宽高</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> oldimage = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, img.width, img.height)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> newimage = ctx.createImageData(img.width, img.height)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> size = <span class="number">5</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 每五个作为一个马赛克</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; oldimage.width / size; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; oldimage.height / size; j++) &#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 从马赛克矩形中随机去除一个像素点的信息</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> color = getPxinfo(oldimage, i * size + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * size), j * size + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * size))</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// 将整个马赛克矩形都设置为随机的像素点</span></span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; a &lt; size; a++) &#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">0</span>; b &lt; size; b++) &#123;</span></span><br><span class="line">                                setPxinfo(newimage, i * size + a, j * size + b, color)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">              <span class="comment">//先清空画布然后在填充新的马赛克图片</span></span></span><br><span class="line">                ctx.clearRect(0, 0, canvas.width, canvas.height)</span><br><span class="line">                ctx.putImageData(newimage, 0, 0)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getPxinfo</span><span class="params">(imageData, x, y)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> color = []</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> data = imageData.data</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> w = imageData.width</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> h = imageData.height</span></span><br><span class="line">            color[0] = data[(y * w + x) * 4]</span><br><span class="line">            color[1] = data[(y * w + x) * 4 + 1]</span><br><span class="line">            color[2] = data[(y * w + x) * 4 + 2]</span><br><span class="line">            color[3] = data[(y * w + x) * 4 + 3]</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> color</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">setPxinfo</span><span class="params">(imageData, x, y, color)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> data = imageData.data</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> w = imageData.width</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> h = imageData.height</span></span><br><span class="line">            data[(y * w + x) * 4] = color[0]</span><br><span class="line">            data[(y * w + x) * 4 + 1] = color[1]</span><br><span class="line">            data[(y * w + x) * 4 + 2] = color[2]</span><br><span class="line">            data[(y * w + x) * 4 + 3] = color[3]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 刮刮卡 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ctx.isPointInPath(x,y)判断是否处于canvas中的某个位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#date</span> &#123;</span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            transition: 1s;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>,</span></span><br><span class="line">        ul,</span><br><span class="line">        ul&gt;li &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ul&gt;li &#123;</span><br><span class="line">            background: url(./imgs/b.png);</span><br><span class="line">            background-size: 100% 100%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#canvas"</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">document</span>.documentElement.clientWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">document</span>.documentElement.clientHeight</span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// source-over 源在上面，新的图像层级比较高 source-in 仅仅留下源于目标重叠的部分(源的那一部分)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//source-out 留下源超过目标的部分 source-atop砍掉源溢出的部分</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// destination-over/in/out/atop与其类似，相对于目标而言</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.globalCompositeOperation = "source-in"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillStyle = "red"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillRect(0, 0, 150, 150) //目标</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.globalCompositeOperation = "source-out"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillStyle = "yellow"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.fillRect(100, 100, 150, 150) //源</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> img = <span class="keyword">new</span> Image()</span></span><br><span class="line"><span class="actionscript">            img.src = <span class="string">"imgs/a.png"</span></span></span><br><span class="line"><span class="actionscript">            img.onload = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                draw()</span><br><span class="line"><span class="actionscript">                <span class="comment">//导出为图片</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> result = canvas.toDataURL()</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(result)</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                ctx.drawImage(img, 0, 0, canvas.width, canvas.height)</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 移动端没有click等事件</span></span></span><br><span class="line"><span class="actionscript">                canvas.addEventListener(<span class="string">"touchstart"</span>, <span class="function"><span class="keyword">function</span><span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">                    ev = ev || event</span><br><span class="line"><span class="actionscript">                        <span class="comment">// 点击的手指</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> touchFinger = ev.changedTouches[<span class="number">0</span>]</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> x = touchFinger.clientX - canvas.offsetLeft</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> y = touchFinger.clientY - canvas.offsetTop</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 保留目标超过源的部分，即显示刮过的图片</span></span></span><br><span class="line"><span class="actionscript">                    ctx.globalCompositeOperation = <span class="string">'destination-out'</span>;</span></span><br><span class="line">                    ctx.lineWidth = 20</span><br><span class="line"><span class="actionscript">                    ctx.lineCap = <span class="string">"round"</span></span></span><br><span class="line">                    ctx.save()</span><br><span class="line">                    ctx.beginPath()</span><br><span class="line">                    ctx.moveTo(x, y);</span><br><span class="line">                    ctx.lineTo(x + 1, y + 1);</span><br><span class="line">                    ctx.stroke();</span><br><span class="line">                    ctx.restore()</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="actionscript">                canvas.addEventListener(<span class="string">"touchmove"</span>, <span class="function"><span class="keyword">function</span><span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">                    ev = ev || event</span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> touchFinger = ev.changedTouches[<span class="number">0</span>]</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> x = touchFinger.clientX - canvas.offsetLeft</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> y = touchFinger.clientY - canvas.offsetTop</span></span><br><span class="line">                    ctx.save()</span><br><span class="line">                    ctx.lineTo(x, y);</span><br><span class="line">                    ctx.stroke();</span><br><span class="line">                    ctx.restore()</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> flag = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">                canvas.addEventListener(<span class="string">"touchend"</span>, <span class="function"><span class="keyword">function</span><span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> imagedata = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> allPx = imagedata.width * imagedata.height</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allPx; i++) &#123;</span></span><br><span class="line">                        if (imagedata.data[4 * i + 3] == 0) &#123;</span><br><span class="line">                            flag++</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (flag &gt;= allPx * 2 / 3) &#123;</span><br><span class="line">                        canvas.style.opacity = 0</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="actionscript">                canvas.addEventListener(<span class="string">"transitionend"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.remove()</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>canvas</category>
      </categories>
  </entry>
  <entry>
    <title>canvas(1)</title>
    <url>/2020/08/07/canvas-1/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- h5新增的元素，可使用js脚本来绘制图形，默认具有宽高(300px,150px) </span></span><br><span class="line"><span class="comment">当一些比较老的浏览器应该给用户展示替代内容，添加文字即可，注意canvas是一个画布</span></span><br><span class="line"><span class="comment">不要使用css给canvas设置宽高</span></span><br><span class="line"><span class="comment">getContext方法在canvas中是用来获取渲染上下文和它的回话功能</span></span><br><span class="line"><span class="comment">canvas只支持一种原生图形绘制，矩形--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#test</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// querySelector快照属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 拿到画布</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#test"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// if (canvas.getContext) &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var ctx = test.getContext("2d")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 设置填充的颜色</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.fillStyle = "deeppink"</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 图形轮廓颜色</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.strokeStyle = "red"</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 向上向下各扩展一半边框，必须为正数</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.lineWidth = 25</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.lineJoin = "round" // round圆角 bevel斜角 miter直角</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 上述属性必须在绘制之前设置,设置的顺序会覆盖之前设置的</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 填充的矩形</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.fillRect(0, 0, 100, 100)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 带边框的矩形,边框1px</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.strokeRect(100.5, 100.5, 100, 100)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // ctx.strokeRect(100.5, 100.5, 100, 100)边框会渲染在100-101之间</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         // 清除指定矩形区域， 让清除部分完全透明</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     ctx.clearRect(100, 100, 100, 100)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line"><span class="actionscript">            ctx.strokeStyle = <span class="string">"red"</span></span></span><br><span class="line"><span class="actionscript">            ctx.fillStyle = <span class="string">"deeppink"</span></span></span><br><span class="line">            ctx.lineWidth = 5</span><br><span class="line"><span class="actionscript">                <span class="comment">// 笔触动到坐标</span></span></span><br><span class="line">            ctx.moveTo(50, 50)</span><br><span class="line"><span class="actionscript">                <span class="comment">// 绘制xy的直线</span></span></span><br><span class="line">            ctx.lineTo(50, 100)</span><br><span class="line">            ctx.lineTo(100, 100)</span><br><span class="line"><span class="actionscript">            ctx.closePath() <span class="comment">//合并路径</span></span></span><br><span class="line"><span class="actionscript">            ctx.stroke() <span class="comment">// ctx.fill()绘制实线与轮廓,fill方法会自动合并路径</span></span></span><br><span class="line"><span class="actionscript">            ctx.beginPath() <span class="comment">//清空路径容器，画两个不相关的图形</span></span></span><br><span class="line">            ctx.moveTo(150, 150)</span><br><span class="line">            ctx.lineTo(200, 200)</span><br><span class="line">            ctx.lineTo(200, 150)</span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.closePath()</span></span></span><br><span class="line">            ctx.fill()</span><br><span class="line"><span class="actionscript">                <span class="comment">// 使用路径绘制矩形</span></span></span><br><span class="line">            ctx.beginPath()</span><br><span class="line"><span class="actionscript">            ctx.rect(<span class="number">180</span>, <span class="number">180</span>, <span class="number">50</span>, <span class="number">50</span>) <span class="comment">//左上角坐标，宽高</span></span></span><br><span class="line">            ctx.stroke()</span><br><span class="line"><span class="actionscript">            ctx.lineCap = <span class="string">"round"</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//butt,线条末端以方形结束、round圆形结束、square以方形结束增加一个宽度与线段相同,高度是线段厚度一半的矩形区域</span></span></span><br><span class="line">            ctx.beginPath()</span><br><span class="line">            ctx.moveTo(300, 300)</span><br><span class="line">            ctx.lineTo(350, 350)</span><br><span class="line">            ctx.stroke()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#test</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 路径容器，每次调用路径api时都会向路径容器登记，调用beginPath清空整个路径容器、</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 样式容器，每次调用样式api时都会向样式容器登记，调用save将容器中的状态压栈，调用restore时将样式容器栈顶状态弹到样式容器中进行覆盖</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#test"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// if (canvas.getContext) &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var ctx = canvas.getContext("2d")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.save() //相当于压栈，将样式压入，第一次压入黑色</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillStyle = "pink"</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillRect(50, 50, 50, 50)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.restore()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.save()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillStyle = "blue"</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.fillRect(100, 100, 50, 50)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.restore()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        canvas.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            ev = ev || <span class="built_in">window</span>.event</span></span><br><span class="line">            if (canvas.setCapture) &#123;</span><br><span class="line">                canvas.setCapture()</span><br><span class="line">            &#125;</span><br><span class="line">            ctx.save()</span><br><span class="line"><span class="actionscript">            ctx.strokeStyle = <span class="string">"green"</span></span></span><br><span class="line">            ctx.beginPath()</span><br><span class="line">            ctx.moveTo(ev.clientX - canvas.offsetLeft, ev.clientY - canvas.offsetTop)</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                ev = ev || <span class="built_in">window</span>.event</span></span><br><span class="line">                ctx.lineTo(ev.clientX - canvas.offsetLeft, ev.clientY - canvas.offsetTop)</span><br><span class="line">                ctx.stroke()</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="built_in">document</span>.onmouseup = <span class="literal">null</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (<span class="built_in">document</span>.releaseCapture) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.releaseCapture()</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    ctx.restore() <span class="comment">//green</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.restore() //black</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#test</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#test"</span>)</span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.moveTo(60, 60)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.arc(60, 60, 50, 0, 90 * Math.PI / 180, true) //圆心坐标、半径、起始弧度、逆时针</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.closePath()</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// ctx.stroke()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.moveTo(150, 60)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.lineTo(100, 100)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.lineTo(200, 200)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.lineTo(150, 80)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.stroke()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.moveTo(150, 60)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.arcTo(100, 100, 200, 200, 50) //使用三个点确定一个角,并给出圆的半径</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.stroke()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.moveTo(150, 60)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.quadraticCurveTo(100, 100, 200, 200) //一定经过起始点</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.stroke()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.beginPath()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.moveTo(150, 60)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.bezierCurveTo(100, 100, 200, 200, 150, 80) //一定经过起始点</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ctx.stroke()</span></span></span><br><span class="line"><span class="actionscript">            ctx.translate(<span class="number">50</span>, <span class="number">50</span>) <span class="comment">//移动原点，会累加</span></span></span><br><span class="line">            ctx.translate(50, 50)</span><br><span class="line"><span class="javascript">            ctx.rotate(<span class="number">45</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>) <span class="comment">//顺时针旋转(相当于坐标轴也旋转)，会累加</span></span></span><br><span class="line">            ctx.scale(2, 2)</span><br><span class="line"><span class="actionscript">            ctx.scale(<span class="number">.3</span>, <span class="number">.3</span>) <span class="comment">//会累加，放大/缩小像素（变少/变多）</span></span></span><br><span class="line">            ctx.beginPath()</span><br><span class="line">            ctx.fillRect(0, 0, 100, 100)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 旋转缩放 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#test</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> num = <span class="number">1</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> scale = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> flagscale = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#test"</span>)</span></span><br><span class="line">        if (canvas.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line">            ctx.save()</span><br><span class="line">            ctx.translate(200, 200)</span><br><span class="line">            ctx.beginPath()</span><br><span class="line">            ctx.fillRect(-50, -50, 100, 100)</span><br><span class="line">            ctx.restore()</span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                num++</span><br><span class="line">                ctx.save()</span><br><span class="line">                ctx.clearRect(0, 0, canvas.width, canvas.height)</span><br><span class="line">                ctx.translate(200, 200)</span><br><span class="line"><span class="javascript">                ctx.rotate(num * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                if (scale == 100) &#123;</span><br><span class="line">                    flagscale = -1</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scale == <span class="number">0</span>) &#123;</span></span><br><span class="line">                    flagscale = 1</span><br><span class="line">                &#125;</span><br><span class="line">                scale += flagscale</span><br><span class="line">                ctx.scale(scale / 50, scale / 50)</span><br><span class="line">                ctx.beginPath()</span><br><span class="line">                ctx.fillRect(-50, -50, 100, 100)</span><br><span class="line">                ctx.restore()</span><br><span class="line">            &#125;, 20)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 时钟 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#clock</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            background: gray;</span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate3d(-50%, -50%, 0)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"clock"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>浏览器版本过低，请更换浏览器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> clock = <span class="built_in">document</span>.querySelector(<span class="string">"#clock"</span>)</span></span><br><span class="line">        if (clock.getContext) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = clock.getContext(<span class="string">"2d"</span>)</span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                ctx.clearRect(0, 0, clock.width, clock.height)</span><br><span class="line">                run()</span><br><span class="line">            &#125;, 1000)</span><br><span class="line">            run()</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                ctx.save()</span><br><span class="line">                ctx.lineWidth = 8</span><br><span class="line"><span class="actionscript">                ctx.strokeStyle = <span class="string">"black"</span></span></span><br><span class="line"><span class="actionscript">                ctx.lineCap = <span class="string">"round"</span></span></span><br><span class="line">                ctx.translate(200, 200)</span><br><span class="line"><span class="javascript">                ctx.rotate(<span class="number">-90</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 空心圆盘</span></span></span><br><span class="line">                ctx.save()</span><br><span class="line"><span class="actionscript">                ctx.strokeStyle = <span class="string">"#325FA2"</span></span></span><br><span class="line">                ctx.lineWidth = 14</span><br><span class="line">                ctx.beginPath()</span><br><span class="line"><span class="javascript">                ctx.arc(<span class="number">0</span>, <span class="number">0</span>, <span class="number">140</span>, <span class="number">0</span>, <span class="number">360</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.stroke()</span><br><span class="line">                ctx.restore()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 时针刻度</span></span></span><br><span class="line">                ctx.save()</span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                    ctx.beginPath()</span><br><span class="line">                    ctx.moveTo(100, 0)</span><br><span class="line">                    ctx.lineTo(120, 0)</span><br><span class="line">                    ctx.stroke()</span><br><span class="line">                &#125;</span><br><span class="line">                ctx.restore()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 分针刻度</span></span></span><br><span class="line">                ctx.save()</span><br><span class="line">                ctx.lineWidth = 4</span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">60</span>; i++) &#123;</span></span><br><span class="line">                    if (i % 5 != 0) &#123;</span><br><span class="line">                        ctx.beginPath()</span><br><span class="line">                        ctx.moveTo(117, 0)</span><br><span class="line">                        ctx.lineTo(120, 0)</span><br><span class="line">                        ctx.stroke()</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    ctx.rotate(<span class="number">6</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">                ctx.restore()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 时针分针秒针</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> s = date.getSeconds()</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> m = date.getMinutes() + s / <span class="number">60</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> h = date.getHours() + m / <span class="number">60</span></span></span><br><span class="line">                h = h &gt; 12 ? h - 12 : h</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 时针</span></span></span><br><span class="line">                ctx.save()</span><br><span class="line">                ctx.lineWidth = 14</span><br><span class="line"><span class="javascript">                ctx.rotate(h * <span class="number">30</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line">                ctx.moveTo(-20, 0)</span><br><span class="line">                ctx.lineTo(80, 0)</span><br><span class="line">                ctx.stroke()</span><br><span class="line">                ctx.restore()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 分针</span></span></span><br><span class="line">                ctx.save()</span><br><span class="line">                ctx.lineWidth = 10</span><br><span class="line"><span class="javascript">                ctx.rotate(m * <span class="number">6</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line">                ctx.moveTo(-28, 0)</span><br><span class="line">                ctx.lineTo(112, 0)</span><br><span class="line">                ctx.stroke()</span><br><span class="line">                ctx.restore()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 秒针</span></span></span><br><span class="line">                ctx.save()</span><br><span class="line"><span class="actionscript">                ctx.strokeStyle = <span class="string">"#D40000"</span></span></span><br><span class="line"><span class="actionscript">                ctx.fillStyle = <span class="string">"#D40000"</span></span></span><br><span class="line">                ctx.lineWidth = 6</span><br><span class="line"><span class="javascript">                ctx.rotate(s * <span class="number">6</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line">                ctx.moveTo(-30, 0)</span><br><span class="line">                ctx.lineTo(83, 0)</span><br><span class="line">                ctx.stroke()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 中心原点</span></span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line"><span class="javascript">                ctx.arc(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">360</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.fill()</span><br><span class="line"><span class="actionscript">                    <span class="comment">//秒针头部</span></span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line"><span class="javascript">                ctx.arc(<span class="number">96</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">360</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>)</span></span><br><span class="line">                ctx.stroke()</span><br><span class="line">                ctx.restore()</span><br><span class="line"></span><br><span class="line">                ctx.restore()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>canvas</category>
      </categories>
  </entry>
  <entry>
    <title>Bootstrap</title>
    <url>/2020/08/06/Bootstrap-1/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FIRST<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        a &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            text-align: center;</span><br><span class="line">            color: gray;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.thumbnail</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">            margin-right: auto;</span><br><span class="line">            margin-left: auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            min-width: 0px;</span><br><span class="line">            margin-bottom: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- bootstrap需要与jquery结合使用 bs4-每一行分为12块 class="row" 是没一列 col-lg-10来确定所分的份数--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- container-fluid 流体容器 container固定容器 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- width: 100%; padding-right: 15px; padding-left: 15px; margin-right: auto; margin-left: auto; 为两者的公共样式--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 固定容器中媒体查询，并且其含有阈值（致使宽度到达一定会变化，&gt;=1200、&gt;=992、&gt;=768、&lt;768。分别对应于width为1170、970、750、auto）其中含有</span></span><br><span class="line"><span class="comment">    xs auto 移动手机</span></span><br><span class="line"><span class="comment">    screen-sm-min &gt;=768 平板</span></span><br><span class="line"><span class="comment">    screen-md-min &gt;=992 中屏pc</span></span><br><span class="line"><span class="comment">    screen-lg-min &gt;=1200 大屏pc 根据屏幕的大小，逐级选择，小的会被大的覆盖</span></span><br><span class="line"><span class="comment">    col-lg-push-6向后移动 col-lg-pull-6 向前移动</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hidden-xs 768隐藏 visiable-xs 768--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Optional JavaScript --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-3.3.1.slim.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">" container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/webpack.png"</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>是前端资源模块化管理和打包工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/react.png"</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>是前端资源模块化管理和打包工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/svelte.png"</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>是前端资源模块化管理和打包工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/typescript.png"</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>是前端资源模块化管理和打包工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;p&gt;React 起源于 Facebook 的内部项目，是一个用于构建用户界面的 JavaScript 库。&lt;/p&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FIRST<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        img &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            vertical-align: top;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.dame-thumbnail</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            width: auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.dame-sl</span> &#123;</span></span><br><span class="line">            margin-top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.nice-style</span> &#123;</span></span><br><span class="line">            margin-top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.nice-style</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.nice-style</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line">            height: 400px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.carousel-caption</span> &#123;</span></span><br><span class="line">            bottom: 8%;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span><span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.carousel-caption</span> &#123;</span></span><br><span class="line">                bottom: 5%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.nice-style</span>,</span></span><br><span class="line"><span class="css">            <span class="selector-class">.nice-style</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line">                height: 250px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.dame-line</span> &#123;</span></span><br><span class="line">            margin: 50px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        /* .dame-line&gt;hr &#123;</span><br><span class="line">            border: 1px red;</span><br><span class="line">        &#125; */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 导航条 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-inverse navbar-fixed-top"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#bs-example-navbar-collapse-1"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>现代藏品区域<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"bs-example-navbar-collapse-1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>综述 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>概述<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span>特点 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">id</span>=<span class="string">"dame-nav"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Chrome"</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Firefox"</span>&gt;</span>Firefox<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Safari"</span>&gt;</span>Safari<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Opera"</span>&gt;</span>Opera<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#IE"</span>&gt;</span>IE<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 轮播图 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"carousel-example-generic"</span> <span class="attr">class</span>=<span class="string">"carousel slide nice-style"</span> <span class="attr">data-ride</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Indicators --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner "</span> <span class="attr">role</span>=<span class="string">"listbox "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-1.jpg "</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-2.jpg "</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Firefox<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-3.jpg "</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Safari<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-4.jpg "</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Opera<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"prev "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"right carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 三列显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container dame-sl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-sm-6 dame-thumbnail text-center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/webpack.png"</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span> <span class="attr">class</span>=<span class="string">"btn btn-default "</span> <span class="attr">role</span>=<span class="string">"button "</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-sm-6 dame-thumbnail text-center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/react.png"</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span> <span class="attr">class</span>=<span class="string">"btn btn-default "</span> <span class="attr">role</span>=<span class="string">"button "</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- text-center居中显示 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-sm-6dame-thumbnail text-center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./imgs/svelte.png"</span> <span class="attr">alt</span>=<span class="string">"... "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpack<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span> <span class="attr">class</span>=<span class="string">"btn btn-default "</span> <span class="attr">role</span>=<span class="string">"button "</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下划线 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dame-line "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 标签页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Nav tabs --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span> <span class="attr">role</span>=<span class="string">"tablist"</span> <span class="attr">id</span>=<span class="string">"dame-list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Chrome"</span> <span class="attr">aria-controls</span>=<span class="string">"Chrome"</span> <span class="attr">role</span>=<span class="string">"tab"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Firefox"</span> <span class="attr">aria-controls</span>=<span class="string">"Firefox"</span> <span class="attr">role</span>=<span class="string">"tab"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Firefox<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Safari"</span> <span class="attr">aria-controls</span>=<span class="string">"Safari"</span> <span class="attr">role</span>=<span class="string">"tab"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Safari<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#Opera"</span> <span class="attr">aria-controls</span>=<span class="string">"Opera"</span> <span class="attr">role</span>=<span class="string">"tab"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Opera<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#IE"</span> <span class="attr">aria-controls</span>=<span class="string">"IE"</span> <span class="attr">role</span>=<span class="string">"tab"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>IE<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Tab panes --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">"tabpanel"</span> <span class="attr">class</span>=<span class="string">"tab-pane active"</span> <span class="attr">id</span>=<span class="string">"Chrome"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-7"</span>&gt;</span></span><br><span class="line">                            Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-5 "</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-1.jpg "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">"tabpanel"</span> <span class="attr">class</span>=<span class="string">"tab-pane "</span> <span class="attr">id</span>=<span class="string">"Firefox"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-7 "</span>&gt;</span></span><br><span class="line">                            Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-5 "</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-2.jpg "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">"tabpanel"</span> <span class="attr">class</span>=<span class="string">"tab-pane "</span> <span class="attr">id</span>=<span class="string">"Safari"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-7 "</span>&gt;</span></span><br><span class="line">                            Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-5 "</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-2.jpg "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">"tabpanel"</span> <span class="attr">class</span>=<span class="string">"tab-pane "</span> <span class="attr">id</span>=<span class="string">"Opera"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-7 "</span>&gt;</span></span><br><span class="line">                            Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-5 "</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-3.jpg "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">"tabpanel"</span> <span class="attr">class</span>=<span class="string">"tab-pane "</span> <span class="attr">id</span>=<span class="string">"IE"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-7 "</span>&gt;</span></span><br><span class="line">                            Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-5 "</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-4.jpg "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 版权 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container "</span>&gt;</span></span><br><span class="line">        <span class="symbol">&amp;copy;</span>曹承湘</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade "</span> <span class="attr">tabindex</span>=<span class="string">"-1 "</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">id</span>=<span class="string">"myModal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true "</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title "</span>&gt;</span>模态框<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>One fine body<span class="symbol">&amp;hellip;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer "</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js "</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js "</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'.carousel'</span>).carousel(&#123;</span></span><br><span class="line">            interval: 2000</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        $(<span class="string">"#dame-nav&gt;li&gt;a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> href = $(<span class="keyword">this</span>).attr(<span class="string">"href"</span>)</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#dame-list&gt;li&gt;a[href='"</span> + (href) + <span class="string">"']"</span>).tab(<span class="string">'show'</span>)</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">document</span>).scrollTop($(<span class="string">"#dame-tab"</span>).offset().top)</span></span><br><span class="line">            e.preventDefault()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>Bootstrap</category>
      </categories>
  </entry>
  <entry>
    <title>Ajax(3)</title>
    <url>/2020/07/21/Ajax-3/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新浪微博-jQuery基础<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/index.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.cookie.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/nav.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/left.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"发布"</span> <span class="attr">class</span>=<span class="string">"send"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/right.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messageList"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"choose"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 0.监听内容的时时输入</span></span><br><span class="line">    $(<span class="string">"body"</span>).delegate(<span class="string">".comment"</span>, <span class="string">"propertychange input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 判断是否输入了内容</span></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="keyword">this</span>).val().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 让按钮可用</span></span><br><span class="line">            $(<span class="string">".send"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 让按钮不可用</span></span><br><span class="line">            $(<span class="string">".send"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// cookie只能保存在本地， hash可以跨网络来先保存页面</span></span><br><span class="line">    <span class="comment">// var number = $.getCookie("pageNumber") || 1;</span></span><br><span class="line">    <span class="keyword">var</span> number = <span class="built_in">window</span>.location.hash.substring(<span class="number">1</span>) || <span class="number">1</span>;</span><br><span class="line">    getMsgPage();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getMsgPage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">".page"</span>).html(<span class="string">""</span>);</span><br><span class="line">        <span class="comment">// weibo.php?act=get_page_count	获取页数</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"get"</span>,</span><br><span class="line">            url: <span class="string">"weibo.php"</span>,</span><br><span class="line">            data: <span class="string">"act=get_page_count"</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// console.log(msg);</span></span><br><span class="line">                <span class="keyword">var</span> obj = <span class="built_in">eval</span>(<span class="string">"("</span> + msg + <span class="string">")"</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.count; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> $a = $(<span class="string">"&lt;a href=\"javascript:;\"&gt;"</span> + (i + <span class="number">1</span>) + <span class="string">"&lt;/a&gt;"</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i === (number - <span class="number">1</span>)) &#123;</span><br><span class="line">                        $a.addClass(<span class="string">"cur"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    $(<span class="string">".page"</span>).append($a);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">                alert(xhr.status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(number);</span></span><br><span class="line">    getMsgList(number);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getMsgList</span>(<span class="params">number</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 切页码需要清空前面的页码</span></span><br><span class="line">        $(<span class="string">".messageList"</span>).html(<span class="string">""</span>);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"get"</span>,</span><br><span class="line">            url: <span class="string">"weibo.php"</span>,</span><br><span class="line">            data: <span class="string">"act=get&amp;page="</span> + number,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> obj = <span class="built_in">eval</span>(<span class="string">"("</span> + msg + <span class="string">")"</span>);</span><br><span class="line">                $.each(obj, <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">                    <span class="comment">// console.log(value);</span></span><br><span class="line">                    <span class="comment">// 根据内容创建节点</span></span><br><span class="line">                    <span class="keyword">var</span> $weibo = createEle(value);</span><br><span class="line">                    $weibo.get(<span class="number">0</span>).obj = value;</span><br><span class="line">                    <span class="comment">// 插入微博</span></span><br><span class="line">                    $(<span class="string">".messageList"</span>).append($weibo);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">                alert(xhr.status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.监听发布按钮的点击</span></span><br><span class="line">    $(<span class="string">".send"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 拿到用户输入的内容</span></span><br><span class="line">        <span class="keyword">var</span> $text = $(<span class="string">".comment"</span>).val();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"get"</span>,</span><br><span class="line">            url: <span class="string">"weibo.php"</span>,</span><br><span class="line">            data: <span class="string">"act=add&amp;content="</span> + $text,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                &#123;error: 0, id: 新添加内容的ID, time: 添加时间, acc: 点赞数, ref: 点踩数&#125;</span></span><br><span class="line"><span class="comment">                非标准的JSON字符串: &#123;error: 0, id: 1, time: 1526541587, acc: 0, ref: 0&#125;</span></span><br><span class="line"><span class="comment">                标准的JSON字符串: &#123;"error": "0", "id": "1", "time": "1526541587", "acc": "0", "ref": "0"&#125;</span></span><br><span class="line"><span class="comment">                VM179:1 Uncaught SyntaxError: Unexpected token e in JSON at position 1</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="comment">// 非标准字符串转换为标准字符串，传入点赞、等数据</span></span><br><span class="line">                <span class="keyword">var</span> obj = <span class="built_in">eval</span>(<span class="string">"("</span> + msg + <span class="string">")"</span>);</span><br><span class="line">                <span class="comment">// 传入输入数据</span></span><br><span class="line">                obj.content = $text;</span><br><span class="line">                <span class="comment">// 根据内容创建节点</span></span><br><span class="line">                <span class="keyword">var</span> $weibo = createEle(obj);</span><br><span class="line">                <span class="comment">// 绑定每条评论便于后面点赞使用id</span></span><br><span class="line">                $weibo.get(<span class="number">0</span>).obj = obj;</span><br><span class="line">                <span class="comment">// 插入微博</span></span><br><span class="line">                $(<span class="string">".messageList"</span>).prepend($weibo);</span><br><span class="line">                <span class="comment">// 清空输入框的内容</span></span><br><span class="line">                $(<span class="string">".comment"</span>).val(<span class="string">""</span>);</span><br><span class="line">                <span class="comment">// 重新获取一下页码</span></span><br><span class="line">                getMsgPage();</span><br><span class="line">                <span class="comment">// 删除最前面一条微博</span></span><br><span class="line">                <span class="keyword">if</span> ($(<span class="string">".info"</span>).length &gt; <span class="number">6</span>) &#123;</span><br><span class="line">                    $(<span class="string">".info:last-child"</span>).remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">                alert(xhr.status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 2.监听顶点击</span></span><br><span class="line">    $(<span class="string">"body"</span>).delegate(<span class="string">".infoTop"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).text(<span class="built_in">parseInt</span>($(<span class="keyword">this</span>).text()) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> obj = $(<span class="keyword">this</span>).parents(<span class="string">".info"</span>).get(<span class="number">0</span>).obj;</span><br><span class="line">        <span class="comment">// weibo.php?act=acc&amp;id=12			顶某一条数据</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"get"</span>,</span><br><span class="line">            url: <span class="string">"weibo.php"</span>,</span><br><span class="line">            data: <span class="string">"act=acc&amp;id="</span> + obj.id,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(msg);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">                alert(xhr.status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 3.监听踩点击</span></span><br><span class="line">    $(<span class="string">"body"</span>).delegate(<span class="string">".infoDown"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).text(<span class="built_in">parseInt</span>($(<span class="keyword">this</span>).text()) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> obj = $(<span class="keyword">this</span>).parents(<span class="string">".info"</span>).get(<span class="number">0</span>).obj;</span><br><span class="line">        <span class="comment">// weibo.php?act=ref&amp;id=12			踩某一条数据</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"get"</span>,</span><br><span class="line">            url: <span class="string">"weibo.php"</span>,</span><br><span class="line">            data: <span class="string">"act=ref&amp;id="</span> + obj.id,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(msg);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">                alert(xhr.status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 4.监听删除点击</span></span><br><span class="line">    $(<span class="string">"body"</span>).delegate(<span class="string">".infoDel"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).parents(<span class="string">".info"</span>).remove();</span><br><span class="line">        <span class="keyword">var</span> obj = $(<span class="keyword">this</span>).parents(<span class="string">".info"</span>).get(<span class="number">0</span>).obj;</span><br><span class="line">        <span class="comment">// weibo.php?act=del&amp;id=12			删除一条数据</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"get"</span>,</span><br><span class="line">            url: <span class="string">"weibo.php"</span>,</span><br><span class="line">            data: <span class="string">"act=del&amp;id="</span> + obj.id,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(msg);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">                alert(xhr.status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 重新获取当前这一页数据，可能此时删除本页一条数据</span></span><br><span class="line">        getMsgList($(<span class="string">".cur"</span>).html());</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 5.监听页码点击</span></span><br><span class="line">    $(<span class="string">"body"</span>).delegate(<span class="string">".choose&gt;a"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).addClass(<span class="string">"cur"</span>);</span><br><span class="line">        $(<span class="keyword">this</span>).siblings().removeClass(<span class="string">"cur"</span>);</span><br><span class="line">        <span class="comment">// console.log($(this).html());</span></span><br><span class="line">        getMsgList($(<span class="keyword">this</span>).html());</span><br><span class="line">        <span class="comment">// 保存当前点击的页码</span></span><br><span class="line">        <span class="comment">// $.addCookie("pageNumber", $(this).html());</span></span><br><span class="line">        <span class="built_in">window</span>.location.hash = $(<span class="keyword">this</span>).html();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 创建节点方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createEle</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $weibo = $(<span class="string">"&lt;div class=\"info\"&gt;\n"</span> +</span><br><span class="line">            <span class="string">"            &lt;p class=\"infoText\"&gt;"</span> + obj.content + <span class="string">"&lt;/p&gt;\n"</span> +</span><br><span class="line">            <span class="string">"            &lt;p class=\"infoOperation\"&gt;\n"</span> +</span><br><span class="line">            <span class="string">"                &lt;span class=\"infoTime\"&gt;"</span> + formartDate(obj.time) + <span class="string">"&lt;/span&gt;\n"</span> +</span><br><span class="line">            <span class="string">"                &lt;span class=\"infoHandle\"&gt;\n"</span> +</span><br><span class="line">            <span class="string">"                    &lt;a href=\"javascript:;\" class='infoTop'&gt;"</span> + obj.acc + <span class="string">"&lt;/a&gt;\n"</span> +</span><br><span class="line">            <span class="string">"                    &lt;a href=\"javascript:;\" class='infoDown'&gt;"</span> + obj.ref + <span class="string">"&lt;/a&gt;\n"</span> +</span><br><span class="line">            <span class="string">"                    &lt;a href=\"javascript:;\" class='infoDel'&gt;删除&lt;/a&gt;\n"</span> +</span><br><span class="line">            <span class="string">"                &lt;/span&gt;\n"</span> +</span><br><span class="line">            <span class="string">"            &lt;/p&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;/div&gt;"</span>);</span><br><span class="line">        <span class="keyword">return</span> $weibo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成时间方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">formartDate</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(time * <span class="number">1000</span>);</span><br><span class="line">        <span class="comment">// 2018-4-3 21:30:23</span></span><br><span class="line">        <span class="keyword">var</span> arr = [date.getFullYear() + <span class="string">"-"</span>,</span><br><span class="line">            date.getMonth() + <span class="number">1</span> + <span class="string">"-"</span>,</span><br><span class="line">            date.getDate() + <span class="string">" "</span>,</span><br><span class="line">            date.getHours() + <span class="string">":"</span>,</span><br><span class="line">            date.getMinutes() + <span class="string">":"</span>,</span><br><span class="line">            date.getSeconds()</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">return</span> arr.join(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">"../images/body_bg.jpg"</span>) no-repeat center <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span>&gt;<span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ebdbd4</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">200px</span> auto <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">240px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">168px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">"../images/comment.png"</span>) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">600px</span> <span class="number">168px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span>&gt;<span class="selector-class">.comment</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">570px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">73px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="comment">/*background: red;*/</span></span><br><span class="line">    <span class="attribute">resize</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span>&gt;<span class="selector-class">.send</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">82px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">506px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fd8040</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-class">.messageList</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">background</span>: white;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.messageList</span>&gt;<span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span>&gt;<span class="selector-class">.infoText</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span>&gt;<span class="selector-class">.infoOperation</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.infoOperation</span>&gt;<span class="selector-class">.infoTime</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.infoOperation</span>&gt;<span class="selector-class">.infoHandle</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.infoHandle</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">"../images/icons.png"</span>) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.infoHandle</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.infoHandle</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">33px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.choose</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#9f5024</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.choose</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2b2b2b</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.choose</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.choose</span>&gt;<span class="selector-class">.cur</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">**********************************************</span></span><br><span class="line"><span class="comment">	usage:</span></span><br><span class="line"><span class="comment">			weibo.php?act=add&amp;content=xxx	添加一条</span></span><br><span class="line"><span class="comment">				返回：&#123;error:0, id: 新添加内容的ID, time: 添加时间&#125;</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			weibo.php?act=get_page_count	获取页数</span></span><br><span class="line"><span class="comment">				返回：&#123;count:页数&#125;</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			weibo.php?act=get&amp;page=1		获取一页数据</span></span><br><span class="line"><span class="comment">				返回：[&#123;id: ID, content: "内容", time: 时间戳, acc: 顶次数, ref: 踩次数&#125;, &#123;...&#125;, ...]</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			weibo.php?act=acc&amp;id=12			顶某一条数据</span></span><br><span class="line"><span class="comment">				返回：&#123;error:0&#125;</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			weibo.php?act=ref&amp;id=12			踩某一条数据</span></span><br><span class="line"><span class="comment">				返回：&#123;error:0&#125;</span></span><br><span class="line"><span class="comment">				</span></span><br><span class="line"><span class="comment">			weibo.php?act=del&amp;id=12			删除一条数据</span></span><br><span class="line"><span class="comment">				返回：&#123;error:0&#125;</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">	注意：	服务器所返回的时间戳都是秒（JS是毫秒）</span></span><br><span class="line"><span class="comment">**********************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(E_ALL ^ E_DEPRECATED);</span><br><span class="line"><span class="comment">//创建数据库之类的</span></span><br><span class="line">$db=@mysqli_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">''</span>) <span class="keyword">or</span> @mysqli_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'admin'</span>);</span><br><span class="line"></span><br><span class="line">mysqli_query($db,<span class="string">"set names 'utf8'"</span>);</span><br><span class="line">mysqli_query($db,<span class="string">'CREATE DATABASE it666_ajax'</span>);</span><br><span class="line"></span><br><span class="line">mysqli_select_db($db,<span class="string">'it666_ajax'</span>);</span><br><span class="line"></span><br><span class="line">$sql= &lt;&lt;&lt; END</span><br><span class="line">CREATE TABLE  `it666_ajax`.`weibo` (</span><br><span class="line">`ID` INT NOT <span class="keyword">NULL</span> AUTO_INCREMENT PRIMARY KEY ,</span><br><span class="line">`content` TEXT NOT <span class="keyword">NULL</span> ,</span><br><span class="line">`time` INT NOT <span class="keyword">NULL</span> ,</span><br><span class="line">`acc` INT NOT <span class="keyword">NULL</span> ,</span><br><span class="line">`ref` INT NOT <span class="keyword">NULL</span></span><br><span class="line">) CHARACTER SET utf8 COLLATE utf8_general_ci</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">mysqli_query($db,$sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//正式开始</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//header('Content-type:zns/json');</span></span><br><span class="line"></span><br><span class="line">$act=$_GET[<span class="string">'act'</span>];</span><br><span class="line">$PAGE_SIZE=<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>($act)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'add'</span>:</span><br><span class="line">		$content=urldecode($_GET[<span class="string">'content'</span>]);</span><br><span class="line">		$time=time();</span><br><span class="line">		</span><br><span class="line">		$content=str_replace(<span class="string">"\n"</span>, <span class="string">""</span>, $content);</span><br><span class="line">		</span><br><span class="line">		$sql=<span class="string">"INSERT INTO weibo (ID, content, time, acc, ref) VALUES(0, '&#123;$content&#125;', &#123;$time&#125;, 0, 0)"</span>;</span><br><span class="line">		</span><br><span class="line">		mysqli_query($db,$sql);</span><br><span class="line">		</span><br><span class="line">		$res=mysqli_query($db,<span class="string">'SELECT LAST_INSERT_ID()'</span>);</span><br><span class="line">		</span><br><span class="line">		$row=mysqli_fetch_array($res);</span><br><span class="line">		</span><br><span class="line">		$id=(int)$row[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&#123;error: 0, id: &#123;$id&#125;, time: &#123;$time&#125;, acc: 0, ref: 0&#125;"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'get_page_count'</span>:</span><br><span class="line">		$sql=<span class="string">"SELECT COUNT(*)/&#123;$PAGE_SIZE&#125;+1 FROM weibo"</span>;</span><br><span class="line">		</span><br><span class="line">		mysqli_query($db,$sql);</span><br><span class="line">		</span><br><span class="line">		$res=mysqli_query($db,$sql);</span><br><span class="line">		</span><br><span class="line">		$row=mysqli_fetch_array($res);</span><br><span class="line">		</span><br><span class="line">		$count=(int)$row[<span class="number">0</span>];</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"&#123;count: &#123;$count&#125;&#125;"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'get'</span>:</span><br><span class="line">		$page=(int)$_GET[<span class="string">'page'</span>];</span><br><span class="line">		<span class="keyword">if</span>($page&lt;<span class="number">1</span>)$page=<span class="number">1</span>;</span><br><span class="line">		</span><br><span class="line">		$s=($page<span class="number">-1</span>)*$PAGE_SIZE;</span><br><span class="line">		</span><br><span class="line">		$sql=<span class="string">"SELECT ID, content, time, acc, ref FROM weibo ORDER BY time DESC LIMIT &#123;$s&#125;, &#123;$PAGE_SIZE&#125;"</span>;</span><br><span class="line">		</span><br><span class="line">		$res=mysqli_query($db,$sql);</span><br><span class="line">		</span><br><span class="line">		$aResult=<span class="keyword">array</span>();</span><br><span class="line">		<span class="keyword">while</span>($row=mysqli_fetch_array($res))</span><br><span class="line">		&#123;</span><br><span class="line">			$arr=<span class="keyword">array</span>();</span><br><span class="line">			array_push($arr, <span class="string">'id:'</span>.$row[<span class="number">0</span>]);</span><br><span class="line">			array_push($arr, <span class="string">'content:"'</span>.$row[<span class="number">1</span>].<span class="string">'"'</span>);</span><br><span class="line">			array_push($arr, <span class="string">'time:'</span>.$row[<span class="number">2</span>]);</span><br><span class="line">			array_push($arr, <span class="string">'acc:'</span>.$row[<span class="number">3</span>]);</span><br><span class="line">			array_push($arr, <span class="string">'ref:'</span>.$row[<span class="number">4</span>]);</span><br><span class="line">			</span><br><span class="line">			array_push($aResult, implode(<span class="string">','</span>, $arr));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(count($aResult)&gt;<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">'[&#123;'</span>.implode(<span class="string">'&#125;,&#123;'</span>, $aResult).<span class="string">'&#125;]'</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">'[]'</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'acc'</span>:</span><br><span class="line">		$id=(int)$_GET[<span class="string">'id'</span>];</span><br><span class="line">		</span><br><span class="line">		$res=mysqli_query($db,<span class="string">"SELECT acc FROM weibo WHERE ID=&#123;$id&#125;"</span>);</span><br><span class="line">		</span><br><span class="line">		$row=mysqli_fetch_array($res);</span><br><span class="line">		</span><br><span class="line">		$old=(int)$row[<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">		</span><br><span class="line">		$sql=<span class="string">"UPDATE weibo SET acc=&#123;$old&#125; WHERE ID=&#123;$id&#125;"</span>;</span><br><span class="line">		</span><br><span class="line">		mysqli_query($db,$sql);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">'&#123;error:0&#125;'</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'ref'</span>:</span><br><span class="line">		$id=(int)$_GET[<span class="string">'id'</span>];</span><br><span class="line">		</span><br><span class="line">		$res=mysqli_query($db,<span class="string">"SELECT ref FROM weibo WHERE ID=&#123;$id&#125;"</span>);</span><br><span class="line">		</span><br><span class="line">		$row=mysqli_fetch_array($res);</span><br><span class="line">		</span><br><span class="line">		$old=(int)$row[<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">		</span><br><span class="line">		$sql=<span class="string">"UPDATE weibo SET ref=&#123;$old&#125; WHERE ID=&#123;$id&#125;"</span>;</span><br><span class="line">		</span><br><span class="line">		mysqli_query($db,$sql);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">'&#123;error:0&#125;'</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'del'</span>:</span><br><span class="line">		$id=(int)$_GET[<span class="string">'id'</span>];</span><br><span class="line">		$sql=<span class="string">"DELETE FROM weibo WHERE ID=&#123;$id&#125;"</span>;</span><br><span class="line">		<span class="keyword">echo</span> $sql;<span class="keyword">exit</span>;</span><br><span class="line">		mysqli_query($db,$sql);</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">'&#123;error:0&#125;'</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>Ajax</category>
      </categories>
  </entry>
  <entry>
    <title>Ajax(2)</title>
    <url>/2020/07/21/Ajax-2/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;10-ajax-test&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        div &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            border: 1px solid #000;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            background: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        img &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            display: block;</span><br><span class="line">            margin: 10px auto 10px;</span><br><span class="line">            border: 1px solid #000;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        p &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">            background: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;myAjax2.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload &#x3D; function(ev) &#123;</span><br><span class="line">            &#x2F;&#x2F; 1.获取需要设置的元素</span><br><span class="line">            var oTitle &#x3D; document.querySelector(&quot;#title&quot;);</span><br><span class="line">            var oDes &#x3D; document.querySelector(&quot;#des&quot;);</span><br><span class="line">            var oImg &#x3D; document.querySelector(&quot;img&quot;);</span><br><span class="line">            &#x2F;&#x2F; 2.获取所有按钮</span><br><span class="line">            var oBtns &#x3D; document.querySelectorAll(&quot;button&quot;);</span><br><span class="line">            &#x2F;&#x2F; 3.给按钮添加点击事件</span><br><span class="line">            oBtns[0].onclick &#x3D; function() &#123;</span><br><span class="line">                var self &#x3D; this;</span><br><span class="line">                &#x2F;&#x2F; 4.发送Aajx请求到服务器</span><br><span class="line">                ajax(&#123;</span><br><span class="line">                    type: &quot;get&quot;,</span><br><span class="line">                    url: &quot;10-ajax-test.php&quot;,</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        &quot;name&quot;: this.getAttribute(&quot;name&quot;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    timeout: 3000,</span><br><span class="line">                    success: function(xhr) &#123;</span><br><span class="line">                        &#x2F;&#x2F; alert(xhr.responseText);</span><br><span class="line">                        &#x2F;&#x2F; var res &#x3D; xhr.responseText.split(&quot;|&quot;);</span><br><span class="line">                        &#x2F;&#x2F; &#x2F;&#x2F; console.log(res);</span><br><span class="line">                        &#x2F;&#x2F; oTitle.innerHTML &#x3D; res[0];</span><br><span class="line">                        &#x2F;&#x2F; oDes.innerHTML &#x3D; res[1];</span><br><span class="line">                        &#x2F;&#x2F; oImg.setAttribute(&quot;src&quot;, res[2]);</span><br><span class="line">                        &#x2F;&#x2F; 拿到点击时的name， 便于querySelector使用</span><br><span class="line"></span><br><span class="line">                        &#x2F;&#x2F; xml获取数据</span><br><span class="line">                        var name &#x3D; self.getAttribute(&quot;name&quot;);</span><br><span class="line">                        var res &#x3D; xhr.responseXML;</span><br><span class="line">                        var title &#x3D; res.querySelector(name + &quot;&gt;title&quot;).innerHTML;</span><br><span class="line">                        var des &#x3D; res.querySelector(name + &quot;&gt;des&quot;).innerHTML;</span><br><span class="line">                        var image &#x3D; res.querySelector(name + &quot;&gt;image&quot;).innerHTML;</span><br><span class="line">                        oTitle.innerHTML &#x3D; title;</span><br><span class="line">                        oDes.innerHTML &#x3D; des;</span><br><span class="line">                        oImg.setAttribute(&quot;src&quot;, image);</span><br><span class="line"></span><br><span class="line">                        &#x2F;&#x2F; json获取数据</span><br><span class="line">                        &#x2F;&#x2F; var name &#x3D; self.getAttribute(&quot;name&quot;);</span><br><span class="line">                        &#x2F;&#x2F; var str &#x3D; xhr.responseText;</span><br><span class="line">                        &#x2F;&#x2F; var obj &#x3D; JSON.parse(str);</span><br><span class="line">                        &#x2F;&#x2F; &#x2F;&#x2F; console.log(obj);</span><br><span class="line">                        &#x2F;&#x2F; var subObj &#x3D; obj[name];</span><br><span class="line">                        &#x2F;&#x2F; &#x2F;&#x2F; console.log(subObj);</span><br><span class="line">                        &#x2F;&#x2F; oTitle.innerHTML &#x3D; subObj.title;</span><br><span class="line">                        &#x2F;&#x2F; oDes.innerHTML &#x3D; subObj.des;</span><br><span class="line">                        &#x2F;&#x2F; oImg.setAttribute(&quot;src&quot;, subObj.image);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    error: function(xhr) &#123;</span><br><span class="line">                        alert(xhr.status);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            oBtns[1].onclick &#x3D; function() &#123;&#125;</span><br><span class="line">            oBtns[2].onclick &#x3D; function() &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p id&#x3D;&quot;title&quot;&gt;商品标题名称&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">        &lt;p id&#x3D;&quot;des&quot;&gt;商品描述信息&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;button name&#x3D;&quot;nz&quot;&gt;女装&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button name&#x3D;&quot;bb&quot;&gt;包包&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button name&#x3D;&quot;tx&quot;&gt;拖鞋&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">echo file_get_contents(&quot;10-ajax-test.txt&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;nz&quot;:&#123;</span><br><span class="line">        &quot;title&quot;:&quot;甜美|女装&quot;,</span><br><span class="line">        &quot;des&quot;:&quot;人见人爱,花间花开,甜美系列&quot;,</span><br><span class="line">        &quot;image&quot;:&quot;images&#x2F;1.jpg&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;bb&quot;:&#123;</span><br><span class="line">        &quot;title&quot;:&quot;奢华驴包&quot;,</span><br><span class="line">        &quot;des&quot;:&quot;送女友,送情人,送学妹,一送一个准系列&quot;,</span><br><span class="line">        &quot;image&quot;:&quot;images&#x2F;2.jpg&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;tx&quot;:&#123;</span><br><span class="line">        &quot;title&quot;:&quot;键盘拖鞋&quot;,</span><br><span class="line">        &quot;des&quot;:&quot;程序员专属拖鞋, 屌丝气息浓郁, 你值得拥有&quot;,</span><br><span class="line">        &quot;image&quot;:&quot;images&#x2F;3.jpg&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>14-cookie<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span></span><br><span class="line">            /*</span><br><span class="line">            cookie: 会话跟踪技术 客户端</span><br><span class="line">            session:  会话跟踪技术  服务端</span><br><span class="line"></span><br><span class="line">            cookie作用:</span><br><span class="line">            将网页中的数据保存到浏览器中</span><br><span class="line"></span><br><span class="line">            cookie生命周期:</span><br><span class="line">            默认情况下生命周期是一次会话(浏览器被关闭)</span><br><span class="line">            如果通过expires=设置了过期时间, 并且过期时间没有过期, 那么下次打开浏览器还是存在</span><br><span class="line">            如果通过expires=设置了过期时间, 并且过期时间已经过期了,那么会立即删除保存的数据</span><br><span class="line"></span><br><span class="line">            cookie注意点:</span><br><span class="line">            cookie默认不会保存任何的数据</span><br><span class="line">            cookie不能一次性保存多条数据, 要想保存多条数据,只能一条一条的设置</span><br><span class="line">            cookie有大小和个数的限制</span><br><span class="line">            个数限制: 20~50</span><br><span class="line">            大小限制: 4KB左右</span><br><span class="line"></span><br><span class="line">            cookie作用范围:</span><br><span class="line">            同一个浏览器的同一个路径下访问</span><br><span class="line">            如果在同一个浏览器中, 默认情况下下一级路径就可以访问</span><br><span class="line">            如果在同一个浏览器中, 想让上一级目录也能访问保存的cookie, 那么需要添加一个path属性才可以;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.cookie = <span class="string">"name=zs;path=/;"</span>;</span></span><br><span class="line"></span><br><span class="line">            例如:</span><br><span class="line">            保存到了www.it666.com/jQuery/Ajax/路径下,</span><br><span class="line">            我们想在 www.it666.com/jQuery/Ajax/13-weibo/,</span><br><span class="line">            和 www.it666.com/jQuery/ 路径下也能访问</span><br><span class="line"></span><br><span class="line">            例如:</span><br><span class="line">            我们在www.it666.com下面保存了一个cookie,</span><br><span class="line">            那么我们在edu.it666.com中是无法访问的</span><br><span class="line">            如果想在edu.it666.com中也能访问, 那么我们需要再添加一个domain属性才可以;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.cookie = <span class="string">"name=zs;path=/;domain=it666.com;"</span>;</span></span><br><span class="line">            */</span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(document.cookie);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var date = new Date();</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// date.setDate(date.getDate() - 1);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// document.cookie = "age=33;expires="+date.toGMTString()+";";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(document.cookie);</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// document.cookie = "name=lnj;";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// document.cookie = "age=33;";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(document.cookie);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// document.cookie = "name=lnj;age=33;gender=male;";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//添加domain域名</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.cookie = <span class="string">"name=zs;path=/;domain=127.0.0.1;"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span> (<span class="params">$, window</span>) </span>&#123;</span><br><span class="line">    $.extend(&#123;</span><br><span class="line">        addCookie: <span class="function"><span class="keyword">function</span> (<span class="params">key, value, day, path, domain</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 1.处理默认保存的路径</span></span><br><span class="line">            <span class="keyword">var</span> index = <span class="built_in">window</span>.location.pathname.lastIndexOf(<span class="string">"/"</span>)</span><br><span class="line">            <span class="keyword">var</span> currentPath = <span class="built_in">window</span>.location.pathname.slice(<span class="number">0</span>, index);</span><br><span class="line">            path = path || currentPath;</span><br><span class="line">            <span class="comment">// 2.处理默认保存的domain</span></span><br><span class="line">            domain = domain || <span class="built_in">document</span>.domain;</span><br><span class="line">            <span class="comment">// 3.处理默认的过期时间</span></span><br><span class="line">            <span class="keyword">if</span>(!day)&#123;</span><br><span class="line">                <span class="built_in">document</span>.cookie = key+<span class="string">"="</span>+value+<span class="string">";path="</span>+path+<span class="string">";domain="</span>+domain+<span class="string">";"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">                date.setDate(date.getDate() + day);</span><br><span class="line">                <span class="built_in">document</span>.cookie = key+<span class="string">"="</span>+value+<span class="string">";expires="</span>+date.toGMTString()+<span class="string">";path="</span>+path+<span class="string">";domain="</span>+domain+<span class="string">";"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        getCookie:<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(document.cookie);</span></span><br><span class="line">            <span class="keyword">var</span> res = <span class="built_in">document</span>.cookie.split(<span class="string">";"</span>);</span><br><span class="line">            <span class="comment">// console.log(res);</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; res.length; i++)&#123;</span><br><span class="line">                <span class="comment">// console.log(res[i]);</span></span><br><span class="line">                <span class="keyword">var</span> temp = res[i].split(<span class="string">"="</span>);</span><br><span class="line">                <span class="comment">// console.log(temp);</span></span><br><span class="line">                <span class="keyword">if</span>(temp[<span class="number">0</span>].trim() === key)&#123;</span><br><span class="line">                    <span class="keyword">return</span> temp[<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        delCookie:<span class="function"><span class="keyword">function</span> (<span class="params">key, path</span>) </span>&#123;</span><br><span class="line">            addCookie(key, getCookie(key), <span class="number">-1</span>, path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)(jQuery, <span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>Ajax</category>
      </categories>
  </entry>
  <entry>
    <title>Ajax(1)</title>
    <url>/2020/07/21/Ajax-1/</url>
    <content><![CDATA[<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1.JS中有两种注释</span></span><br><span class="line"><span class="comment">// 1.1单行注释</span></span><br><span class="line"><span class="comment">// 1.2多行注释</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">/* */</span></span><br><span class="line"><span class="comment">// 2.JS中如何定义变量?</span></span><br><span class="line"><span class="comment">//var num = 10;</span></span><br><span class="line"><span class="comment">//$num = 10;</span></span><br><span class="line"><span class="comment">// 3.JS中如何打印内容?</span></span><br><span class="line"><span class="comment">//console.log();</span></span><br><span class="line"><span class="comment">// 注意点: 后端编写的代码不能直接运行, 只能放到服务器对应的文件夹下, 通过服务器运行</span></span><br><span class="line"><span class="comment">// 如何通过服务器运行: 通过ip地址找到服务器对应的文件夹, 然后再找到对应的文件运行</span></span><br><span class="line"><span class="comment">//echo $num;</span></span><br><span class="line"><span class="comment">// 4.JS中如何定义集合</span></span><br><span class="line"><span class="comment">// 4.1数组</span></span><br><span class="line"><span class="comment">// 4.2字典(对象)</span></span><br><span class="line"><span class="comment">//var arr = [1, 3, 5];</span></span><br><span class="line"><span class="comment">// arr[0];</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">print_r($arr);<span class="comment">//打印数组整体</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">// echo $arr[1];</span></span><br><span class="line"><span class="comment">//var dict = &#123;"name":"lnj", "age":"33"&#125;;</span></span><br><span class="line"><span class="comment">// dict["name"];</span></span><br><span class="line">$dict = <span class="keyword">array</span>(<span class="string">"name"</span>=&gt;<span class="string">"lnj"</span>, <span class="string">"age"</span>=&gt;<span class="string">"33"</span>);</span><br><span class="line">print_r($dict);</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $dict[<span class="string">"name"</span>];</span><br><span class="line"><span class="comment">// 5.JS中的分支循环语句</span></span><br><span class="line"><span class="comment">// if/switch/三目/for/while</span></span><br><span class="line"><span class="comment">//$age = 16;</span></span><br><span class="line"><span class="comment">//if($age &gt;= 18)&#123;</span></span><br><span class="line"><span class="comment">//    echo "成年人";</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//    echo "未成年人";</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//$res = ($age &gt;= 18) ? "成年人" : "未成年人";</span></span><br><span class="line"><span class="comment">//echo $res;</span></span><br><span class="line"><span class="comment">//switch ($age)&#123;</span></span><br><span class="line"><span class="comment">//    case -1:</span></span><br><span class="line"><span class="comment">//        echo "非人类";</span></span><br><span class="line"><span class="comment">//        break;</span></span><br><span class="line"><span class="comment">//    case 18:</span></span><br><span class="line"><span class="comment">//        echo "成年人";</span></span><br><span class="line"><span class="comment">//        break;</span></span><br><span class="line"><span class="comment">//    default:</span></span><br><span class="line"><span class="comment">//        echo "未成年人";</span></span><br><span class="line"><span class="comment">//        break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">//for($i = 0; $i &lt; count($arr); $i++)&#123;</span></span><br><span class="line"><span class="comment">//    echo $arr[$i];</span></span><br><span class="line"><span class="comment">//    echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">$index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ($index &lt; count($arr))&#123;</span><br><span class="line">    <span class="keyword">echo</span> $arr[$index];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $index++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;02-get&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">1.可以通过form标签的method属性指定发送请求的类型</span><br><span class="line">2.如果是get请求会将提交的数据拼接到URL后面</span><br><span class="line">?userName&#x3D;lnj&amp;userPwd&#x3D;123456</span><br><span class="line">3.如果是post请求会将提交的数据放到请求头中</span><br><span class="line">4.GET请求和POST请求的异同</span><br><span class="line">4.1相同点:</span><br><span class="line">都是将数据提交到远程服务器</span><br><span class="line">4.2不同点:</span><br><span class="line">4.2.1提交数据存储的位置不同</span><br><span class="line">GET请求会将数据放到URL后面</span><br><span class="line">POST请求会将数据放到请求头中</span><br><span class="line">4.2.2提交数据大小限制不同</span><br><span class="line">GET请求对数据有大小限制</span><br><span class="line">POST请求对数据没有大小限制</span><br><span class="line">5.GET&#x2F;POST请求应用场景</span><br><span class="line">GET请求用于提交非敏感数据和小数据</span><br><span class="line">POST请求用于提交敏感数据和大数据</span><br><span class="line">--&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;02-get-post.php&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;userName&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;userPwd&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">print_r($_GET);</span><br><span class="line">echo $_GET[&quot;userName&quot;];</span><br><span class="line">echo $_GET[&quot;userPwd&quot;];</span><br><span class="line"></span><br><span class="line">print_r($_POST);</span><br><span class="line">echo $_POST[&quot;userName&quot;];</span><br><span class="line">echo $_POST[&quot;userPwd&quot;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;03-post-file&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">注意:</span><br><span class="line">1.上传文件一般使用POST提交</span><br><span class="line">2.上传文件必须设置enctype&#x3D;&quot;multipart&#x2F;form-data&quot;</span><br><span class="line">3.上传的文件在PHP中可以通过$_FILES获取</span><br><span class="line">4.PHP中文件默认会上传到一个临时目录, 接收完毕之后会自动删除</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">默认情况下服务器对上传文件的大小是有限制的, 如果想修改上传文件的限制可以修改php.ini文件</span><br><span class="line">file_uploads &#x3D; On   ; 是否允许上传文件 On&#x2F;Off 默认是On</span><br><span class="line">upload_max_filesize &#x3D; 2048M       ; 上传文件的最大限制</span><br><span class="line">post_max_size &#x3D; 2048M             ; 通过Post提交的最多数据</span><br><span class="line">max_execution_time &#x3D; 30000      ; 脚本最长的执行时间 单位为秒</span><br><span class="line">max_input_time &#x3D; 30000          ; 接收提交的数据的时间限制 单位为秒</span><br><span class="line">memory_limit &#x3D; 2048M            ; 最大的内存消耗</span><br><span class="line">--&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;03-post-file.php&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;upFile&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;上传&quot;&gt;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;echo &quot;post page&quot;;</span><br><span class="line">&#x2F;&#x2F;print_r($_POST);</span><br><span class="line">&#x2F;&#x2F;echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#x2F;&#x2F;print_r($_FILES);</span><br><span class="line">&#x2F;&#x2F; 1.获取上传文件对应的字典</span><br><span class="line">$fileInfo &#x3D; $_FILES[&quot;upFile&quot;];</span><br><span class="line">&#x2F;&#x2F;print_r($fileInfo);</span><br><span class="line">&#x2F;&#x2F; 2.获取上传文件的名称</span><br><span class="line">$fileName &#x3D; $fileInfo[&quot;name&quot;];</span><br><span class="line">&#x2F;&#x2F; 3.获取上传文件保存的临时路径</span><br><span class="line">$filePath &#x3D; $fileInfo[&quot;tmp_name&quot;];</span><br><span class="line">&#x2F;&#x2F;echo $fileName;</span><br><span class="line">&#x2F;&#x2F;echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#x2F;&#x2F;echo $filePath;</span><br><span class="line">&#x2F;&#x2F; 4.移动文件</span><br><span class="line">move_uploaded_file($filePath, &quot;.&#x2F;source&#x2F;&quot;.$fileName);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;04-ajax-get&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    1.什么是Ajax?</span><br><span class="line">    AJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload &#x3D; function(ev) &#123;</span><br><span class="line">            var oBtn &#x3D; document.querySelector(&quot;button&quot;);</span><br><span class="line">            oBtn.onclick &#x3D; function(ev1) &#123;</span><br><span class="line">                &#x2F;&#x2F; 1.创建一个异步对象</span><br><span class="line">                var xmlhttp &#x3D; new XMLHttpRequest();</span><br><span class="line">                &#x2F;&#x2F; 2.设置请求方式和请求地址</span><br><span class="line">                &#x2F;*</span><br><span class="line">                method：请求的类型；GET 或 POST</span><br><span class="line">                url：文件在服务器上的位置</span><br><span class="line">                async：true（异步,ajax使用异步）或 false（同步）</span><br><span class="line">                *&#x2F;</span><br><span class="line">                xmlhttp.open(&quot;GET&quot;, &quot;04-ajax-get.php&quot;, true);</span><br><span class="line">                &#x2F;&#x2F; 3.发送请求</span><br><span class="line">                xmlhttp.send();</span><br><span class="line">                &#x2F;&#x2F; 4.监听状态的变化</span><br><span class="line">                xmlhttp.onreadystatechange &#x3D; function(ev2) &#123;</span><br><span class="line">                    &#x2F;*XMLHttpRequest状态</span><br><span class="line">                    0: 请求未初始化</span><br><span class="line">                    1: 服务器连接已建立</span><br><span class="line">                    2: 请求已接收</span><br><span class="line">                    3: 请求处理中</span><br><span class="line">                    4: 请求已完成，且响应已就绪</span><br><span class="line">                    *&#x2F;</span><br><span class="line">                    if (xmlhttp.readyState &#x3D;&#x3D;&#x3D; 4) &#123;</span><br><span class="line">                        &#x2F;&#x2F;readyState为4、200即响应就绪</span><br><span class="line">                        &#x2F;&#x2F; 判断是否请求成功</span><br><span class="line">                        if (xmlhttp.status &gt;&#x3D; 200 &amp;&amp; xmlhttp.status &lt; 300 ||</span><br><span class="line">                            xmlhttp.status &#x3D;&#x3D;&#x3D; 304) &#123;</span><br><span class="line">                            &#x2F;&#x2F; 5.处理返回的结果</span><br><span class="line">                            console.log(&quot;接收到服务器返回的数据&quot;);</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            console.log(&quot;没有接收到服务器返回的数据&quot;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;发送请求&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;sleep(5);</span><br><span class="line">&#x2F;&#x2F;echo &quot;ajax get page&quot;;</span><br><span class="line">echo $_GET[&quot;userName&quot;];</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo $_GET[&quot;userPwd&quot;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;06-ajax-get&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;myAjax.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      &#x2F;&#x2F;get请求</span><br><span class="line">        window.onload &#x3D; function (ev) &#123;</span><br><span class="line">            var oBtn &#x3D; document.querySelector(&quot;button&quot;);</span><br><span class="line">            var res &#x3D; encodeURIComponent(&quot;wd&#x3D;张三&quot;);</span><br><span class="line">            console.log(res);</span><br><span class="line">            oBtn.onclick &#x3D; function (ev1) &#123;</span><br><span class="line">                &#x2F;&#x2F;                            %E5%BC%A0%E4%B8%89</span><br><span class="line">                &#x2F;&#x2F; https:&#x2F;&#x2F;www.baidu.com&#x2F;s?wd&#x3D;%E5%BC%A0%E4%B8%89</span><br><span class="line">                &#x2F;&#x2F; url?key&#x3D;value&amp;key&#x3D;value;</span><br><span class="line">                ajax(&quot;04-ajax-get.php&quot;, &#123;</span><br><span class="line">                    &quot;userName&quot;:&quot;lnj&quot;,</span><br><span class="line">                    &quot;userPwd&quot;:&quot;123456&quot;</span><br><span class="line">                &#125;, 3000</span><br><span class="line">                , function (xhr) &#123;</span><br><span class="line">                    alert(xhr.responseText);</span><br><span class="line">                &#125;, function (xhr) &#123;</span><br><span class="line">                    alert(&quot;请求失败&quot;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button&gt;发送请求&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; sleep(5);</span><br><span class="line">&#x2F;&#x2F; echo &quot;ajax get page&quot;;</span><br><span class="line">echo $_GET[&quot;userName&quot;];</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo $_GET[&quot;userPwd&quot;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">obj2str</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    obj = obj || &#123;&#125;; <span class="comment">// 如果没有传参, 为了添加随机因子,必须自己创建一个对象</span></span><br><span class="line">    obj.t = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">var</span> res = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        res.push(<span class="built_in">encodeURIComponent</span>(key)+<span class="string">"="</span>+<span class="built_in">encodeURIComponent</span>(obj[key]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.join(<span class="string">"&amp;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">url, obj, timeout, success, error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 0.将对象转换为字符串</span></span><br><span class="line">    <span class="keyword">var</span> str = obj2str(obj); <span class="comment">// key=value&amp;key=value;</span></span><br><span class="line">    <span class="comment">// 1.创建一个异步对象</span></span><br><span class="line">    <span class="keyword">var</span> xmlhttp, timer;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">    &#123;<span class="comment">// code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">        xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;<span class="comment">// code for IE6, IE5</span></span><br><span class="line">        xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.设置请求方式和请求地址</span></span><br><span class="line">    xmlhttp.open(<span class="string">"GET"</span>, url+<span class="string">"?"</span>+str, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 3.发送请求</span></span><br><span class="line">    xmlhttp.send();</span><br><span class="line">    <span class="comment">// 4.监听状态的变化</span></span><br><span class="line">    xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params">ev2</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(xmlhttp.readyState === <span class="number">4</span>)&#123;</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">            <span class="comment">// 判断是否请求成功</span></span><br><span class="line">            <span class="keyword">if</span>(xmlhttp.status &gt;= <span class="number">200</span> &amp;&amp; xmlhttp.status &lt; <span class="number">300</span> ||</span><br><span class="line">                xmlhttp.status === <span class="number">304</span>)&#123;</span><br><span class="line">                <span class="comment">// 5.处理返回的结果</span></span><br><span class="line">                <span class="comment">// console.log("接收到服务器返回的数据");</span></span><br><span class="line">                success(xmlhttp);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// console.log("没有接收到服务器返回的数据");</span></span><br><span class="line">                error(xmlhttp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判断外界是否传入了超时时间</span></span><br><span class="line">    <span class="keyword">if</span>(timeout)&#123;</span><br><span class="line">        timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"中断请求"</span>);</span><br><span class="line">            xmlhttp.abort();</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125;, timeout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!--POST请求+ajax最终版--&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;09-ajax-jquery&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;!--&lt;script src&#x3D;&quot;js&#x2F;jquery-1.12.4.js&quot;&gt;&lt;&#x2F;script&gt;--&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;myAjax2.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload &#x3D; function(ev) &#123;</span><br><span class="line">            var oBtn &#x3D; document.querySelector(&quot;button&quot;);</span><br><span class="line">            oBtn.onclick &#x3D; function(ev1) &#123;</span><br><span class="line">                ajax(&#123;</span><br><span class="line">                    url: &quot;04-ajax-get.php&quot;,</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        &quot;userName&quot;: &quot;lnj&quot;,</span><br><span class="line">                        &quot;userPwd&quot;: &quot;123456&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    timeout: 3000,</span><br><span class="line">                    type: &quot;post&quot;,</span><br><span class="line">                    success: function(xhr) &#123;</span><br><span class="line">                        alert(xhr.responseText);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    error: function(xhr) &#123;</span><br><span class="line">                        alert(&quot;请求失败&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;发送请求&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">echo $_GET[&quot;userName&quot;];</span><br><span class="line">echo $_GET[&quot;userPwd&quot;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">obj2str</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    data = data || &#123;&#125;; <span class="comment">// 如果没有传参, 为了添加随机因子,必须自己创建一个对象</span></span><br><span class="line">    data.t = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">var</span> res = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> data) &#123;</span><br><span class="line">        res.push(<span class="built_in">encodeURIComponent</span>(key) + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(data[key]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.join(<span class="string">"&amp;"</span>); <span class="comment">// userName=lnj&amp;userPwd=123456</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">option</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 0.将对象转换为字符串</span></span><br><span class="line">    <span class="keyword">var</span> str = obj2str(option.data); <span class="comment">// key=value&amp;key=value;</span></span><br><span class="line">    <span class="comment">// 1.创建一个异步对象</span></span><br><span class="line">    <span class="keyword">var</span> xmlhttp, timer;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123; <span class="comment">// code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">        xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// code for IE6, IE5</span></span><br><span class="line">        xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.设置请求方式和请求地址</span></span><br><span class="line">    <span class="keyword">if</span> (option.type.toLowerCase() === <span class="string">"get"</span>) &#123;</span><br><span class="line">        xmlhttp.open(option.type, option.url + <span class="string">"?"</span> + str, <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 3.发送请求</span></span><br><span class="line">        xmlhttp.send();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        xmlhttp.open(option.type, option.url, <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 注意点: 以下代码必须放到open和send之间</span></span><br><span class="line">        xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">        xmlhttp.send(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4.监听状态的变化</span></span><br><span class="line">    xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params">ev2</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (xmlhttp.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">                clearInterval(timer);</span><br><span class="line">                <span class="comment">// 判断是否请求成功</span></span><br><span class="line">                <span class="keyword">if</span> (xmlhttp.status &gt;= <span class="number">200</span> &amp;&amp; xmlhttp.status &lt; <span class="number">300</span> ||</span><br><span class="line">                    xmlhttp.status === <span class="number">304</span>) &#123;</span><br><span class="line">                    <span class="comment">// 5.处理返回的结果</span></span><br><span class="line">                    <span class="comment">// console.log("接收到服务器返回的数据");</span></span><br><span class="line">                    option.success(xmlhttp);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// console.log("没有接收到服务器返回的数据");</span></span><br><span class="line">                    option.error(xmlhttp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断外界是否传入了超时时间</span></span><br><span class="line">    <span class="keyword">if</span> (option.timeout) &#123;</span><br><span class="line">        timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"中断请求"</span>);</span><br><span class="line">            xmlhttp.abort();</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125;, option.timeout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- xml文件数据获取 --&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;11-ajax-xml&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;myAjax2.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload &#x3D; function(ev) &#123;</span><br><span class="line">            var oBtn &#x3D; document.querySelector(&quot;button&quot;);</span><br><span class="line">            oBtn.onclick &#x3D; function(ev1) &#123;</span><br><span class="line">                ajax(&#123;</span><br><span class="line">                    type: &quot;get&quot;,</span><br><span class="line">                    url: &quot;11-ajax-xml.php&quot;,</span><br><span class="line">                    success: function(xhr) &#123;</span><br><span class="line">                        &#x2F;&#x2F; console.log(xhr.responseXML);</span><br><span class="line">                        &#x2F;&#x2F; console.log(document);</span><br><span class="line">                        var res &#x3D; xhr.responseXML;</span><br><span class="line">                        console.log(res.querySelector(&quot;name&quot;).innerHTML);</span><br><span class="line">                        console.log(res.querySelector(&quot;age&quot;).innerHTML);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    error: function(xhr) &#123;</span><br><span class="line">                        console.log(xhr.status);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;发送请求&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; 执行结果中有中文, 必须在php文件顶部设置</span><br><span class="line">&#x2F;&#x2F;header(&quot;content-type:text&#x2F;html; charset&#x3D;utf-8&quot;);</span><br><span class="line">&#x2F;&#x2F; 如果PHP中需要返回XML数据, 也必须在PHP文件顶部设置</span><br><span class="line">header(&quot;content-type:text&#x2F;xml; charset&#x3D;utf-8&quot;);</span><br><span class="line">echo file_get_contents(&quot;info.xml&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>李白<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>55<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>Ajax</category>
      </categories>
  </entry>
  <entry>
    <title>jQuery(3)</title>
    <url>/2020/07/21/jQuery-3/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 节点操作 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-17<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $li = $(<span class="string">"&lt;li&gt;新增节点li&lt;/li&gt;"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("ul").append($li)//添加在节点之后</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $li.appendTo("ul")//添加在节点之后</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("ul").prepend($li)//添加在节点之前</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $li.prependTo("ul")</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"ul"</span>).after($li)<span class="comment">//添加到指定元素外部的后面</span></span></span><br><span class="line"><span class="actionscript">                $li.insertAfter(<span class="string">"ul"</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"ul"</span>).before($li)<span class="comment">//添加到指定元素外部的前面</span></span></span><br><span class="line"><span class="actionscript">                $li.insertBefore(<span class="string">"ul"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).detach()<span class="comment">//同remove</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("div").remove()//删除指定元素</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("div").empty()//删除指定元素的内容，自身不会被删除</span></span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $rp=$(<span class="string">"&lt;h2&gt;替换节点li&lt;/h2&gt;"</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"h1"</span>).replaceWith($rp)<span class="comment">//替换所有匹配元素</span></span></span><br><span class="line"><span class="actionscript">                $rp.replaceAll(<span class="string">"h1"</span>)<span class="comment">//同上</span></span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">3</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $li=$(<span class="string">"li:first"</span>).clone(<span class="literal">false</span>)</span></span><br><span class="line"><span class="actionscript">                $li.appendTo(<span class="string">"ul"</span>)<span class="comment">//浅复制，复制元素但是不复制元素的事件</span></span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">4</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $li=$(<span class="string">"li:first"</span>).clone(<span class="literal">true</span>)</span></span><br><span class="line"><span class="actionscript">                $li.appendTo(<span class="string">"ul"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>添加节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>删除节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>替换节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>浅复制节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>深复制节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第1个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第2个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第3个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>HELLO WORD<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 节点练习，微博发布 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-18<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            font: 14px/1.5 Helvetica Neue, Helvetica, Arial, Microsoft Yahei, Hiragino Sans GB, Heiti SC, WenQuanYi Micro Hei, sans-serif;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            min-width: 992px;</span><br><span class="line">            background: url(../Resource/ad-2.jpg) no-repeat;</span><br><span class="line">            background-size: cover;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">img</span>&#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 55px;</span><br><span class="line">            min-width: 992px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            width: 992px;</span><br><span class="line">            height: auto;</span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            float: left</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-class">.center1</span>&#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-class">.center1</span>&gt;<span class="selector-class">.center2</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            float: right;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.center1</span>&gt;<span class="selector-class">.comment</span> &#123;</span></span><br><span class="line">            width: 576px;</span><br><span class="line">            height: 78px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 164px;</span><br><span class="line">            top: 42px;</span><br><span class="line"><span class="css">            <span class="comment">/* 消除文本框变化 */</span></span></span><br><span class="line">            resize: none;</span><br><span class="line">            border: none;</span><br><span class="line">            outline: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.center1</span>&gt;<span class="selector-class">.send</span> &#123;</span></span><br><span class="line">            width: 82px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 126px;</span><br><span class="line">            left: 659px;</span><br><span class="line">            border: none;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-class">.list</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.list</span>&gt;<span class="selector-class">.info</span> &#123;</span></span><br><span class="line">            padding: 10px 20px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.info</span>&gt;<span class="selector-class">.infoText</span> &#123;</span></span><br><span class="line">            line-height: 25px;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.info</span>&gt;<span class="selector-class">.infoOperation</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.infoOperation</span>&gt;<span class="selector-class">.infoTime</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            font-size: 14px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.infoOperation</span>&gt;<span class="selector-class">.infohandle</span> &#123;</span></span><br><span class="line">            float: right;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.infohandle</span>&gt;<span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            margin-left: 10px;</span><br><span class="line">            padding: 0 15px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            background: url("../Resource/nav11.png") no-repeat;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 监听内容的实时输入,需要使用事件委托</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"body"</span>).delegate(<span class="string">".comment"</span>, <span class="string">"propertychange input"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> ($(<span class="keyword">this</span>).val().length &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">".send"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">false</span>)</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">".send"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">".send"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $text = $(<span class="string">".comment"</span>).val()</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> $create = createEle($text)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".list"</span>).prepend($create)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">//监听需要使用事件委托,由于添加的内容实在页面加载之后生成</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"body"</span>).delegate(<span class="string">".infoTop"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).text(<span class="built_in">parseInt</span>($(<span class="keyword">this</span>).text()) + <span class="number">1</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"body"</span>).delegate(<span class="string">".infoDown"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).text(<span class="built_in">parseInt</span>($(<span class="keyword">this</span>).text()) - <span class="number">1</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"body"</span>).delegate(<span class="string">".infoDel"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).parents(<span class="string">".info"</span>).remove()</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">createEle</span><span class="params">(text)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $create = $(<span class="string">"&lt;div class=\"info\"&gt;\n"</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">\</span>"<span class="attr">infoText</span>\"&gt;</span>" + text + "<span class="tag">&lt;/<span class="name">p</span>&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">\</span>"<span class="attr">infoOperation</span>\"&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">\</span>"<span class="attr">infoTime</span>\"&gt;</span>" + createTime() + "<span class="tag">&lt;/<span class="name">span</span>&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">\</span>"<span class="attr">infohandle</span>\"&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>"<span class="attr">javascript:</span>;\" <span class="attr">class</span>=<span class="string">'infoTop'</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>"<span class="attr">javascript:</span>;\" <span class="attr">class</span>=<span class="string">'infoDown'</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>"<span class="attr">javascript:</span>;\" <span class="attr">class</span>=<span class="string">'infoDel'</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span>\n" +</span></span></span><br><span class="line"><span class="actionscript">                    <span class="string">"                    &lt;/span&gt;\n"</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">"                &lt;/p&gt;\n"</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">"            &lt;/div&gt;"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> $create</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">createTime</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> arr = [date.getFullYear() + <span class="string">"-"</span>,</span></span><br><span class="line"><span class="actionscript">                date.getMonth() + <span class="number">1</span> + <span class="string">"-"</span>,</span></span><br><span class="line"><span class="actionscript">                date.getDay() + <span class="string">" "</span>,</span></span><br><span class="line"><span class="actionscript">                date.getHours() + <span class="string">":"</span>,</span></span><br><span class="line"><span class="actionscript">                date.getMinutes() + <span class="string">":"</span>,</span></span><br><span class="line">                date.getMinutes()]</span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> arr.join(<span class="string">""</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/WB_top.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">src</span>=<span class="string">"../Resource/left.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"center2"</span> <span class="attr">src</span>=<span class="string">"../Resource/TOP.png"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"发布"</span> <span class="attr">class</span>=<span class="string">"send"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"right"</span> <span class="attr">src</span>=<span class="string">"../Resource/right.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 拍地鼠 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-17<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 320px;</span><br><span class="line">            height: 480px;</span><br><span class="line">            background: url(../wolf/game_bg.jpg) no-repeat 0 0;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&gt;<span class="selector-tag">h1</span> &#123;</span></span><br><span class="line">            color: white;</span><br><span class="line">            margin-left: 60px;</span><br><span class="line">            padding-top: 10px;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&gt;<span class="selector-class">.progress</span> &#123;</span></span><br><span class="line">            width: 180px;</span><br><span class="line">            height: 16px;</span><br><span class="line">            background: url(../wolf/progress.png) no-repeat 0 0;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 63px;</span><br><span class="line">            top: 66px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&gt;<span class="selector-class">.start</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 150px;</span><br><span class="line">            line-height: 35px;</span><br><span class="line">            text-align: center;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-id">#E55C3D</span>, <span class="selector-id">#C50000</span>);</span></span><br><span class="line">            border-radius: 20px;</span><br><span class="line">            border: none;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            top: 320px;</span><br><span class="line">            left: 50%;</span><br><span class="line">            margin-left: -75px;</span><br><span class="line">            outline: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&gt;<span class="selector-class">.rules</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 22px;</span><br><span class="line">            line-height: 22px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            text-align: center;</span><br><span class="line">            border: none;</span><br><span class="line">            outline: none;</span><br><span class="line">            z-index: 10;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&gt;<span class="selector-class">.rule</span> &#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.5</span>);</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            padding-top: 100px;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.rule</span>&gt;<span class="selector-tag">p</span> &#123;</span></span><br><span class="line">            line-height: 50px;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.rule</span>&gt;<span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&gt;<span class="selector-class">.mask</span> &#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.5</span>);</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            padding-top: 200px;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mask</span>&gt;<span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ff4500</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 3<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line">            font-size: 38px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mask</span>&gt;<span class="selector-tag">button</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 150px;</span><br><span class="line">            line-height: 35px;</span><br><span class="line">            text-align: center;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-id">#74ACCF</span>, <span class="selector-id">#007DDC</span>);</span></span><br><span class="line">            border-radius: 20px;</span><br><span class="line">            border: none;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            top: 320px;</span><br><span class="line">            left: 50%;</span><br><span class="line">            margin-left: -75px;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.result</span>&#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 120px;</span><br><span class="line">            left: 80px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 显示游戏规则</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".rules"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".rule"</span>).stop().fadeIn(<span class="number">500</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 关闭游戏规则</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".close"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".rule"</span>).stop().fadeOut(<span class="number">500</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 开始游戏，包括进度条、图片动画</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".start"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".rules"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).stop().fadeOut(<span class="number">500</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 进度条</span></span></span><br><span class="line">                progressHandler()</span><br><span class="line">                wolfanimation()</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 重新开始游戏，包括重置进度条、游戏动画开始</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".restart"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".mask"</span>).stop().fadeOut(<span class="number">500</span>)</span></span><br><span class="line">                progressHandler()</span><br><span class="line">                wolfanimation()</span><br><span class="line"><span class="javascript">                $(<span class="string">".result"</span>).fadeOut(<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".scorelast"</span>).text(<span class="number">0</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 控制进度条方法，结束时动画暂停方法的调用</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">progressHandler</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".progress"</span>).css(&#123;</span></span><br><span class="line">                    width: 180</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> progressWidth = $(<span class="string">".progress"</span>).width()</span></span><br><span class="line">                    progressWidth -= 1.5</span><br><span class="line"><span class="javascript">                    $(<span class="string">".progress"</span>).css(&#123;</span></span><br><span class="line">                        width: progressWidth</span><br><span class="line">                    &#125;)</span><br><span class="line">                    if (progressWidth &lt;= 0) &#123;</span><br><span class="line">                        clearInterval(timer)</span><br><span class="line"><span class="javascript">                        $(<span class="string">".mask"</span>).stop().fadeIn(<span class="number">500</span>)</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">".rules"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">false</span>)</span></span><br><span class="line">                        Stopwolfanimation()</span><br><span class="line"><span class="javascript">                        $(<span class="string">".scorelast"</span>).text(<span class="built_in">parseInt</span>($(<span class="string">".score"</span>).text()))</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">".result"</span>).fadeIn(<span class="number">500</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, 500)</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 动画的显示，随机位置、随机图片与类型，及游戏规则方法调用</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> wolfTImer</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">wolfanimation</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> wolf1 = [<span class="string">'../wolf/h0.png'</span>, <span class="string">'../wolf/h1.png'</span>, <span class="string">'../wolf/h2.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'../wolf/h3.png'</span>, <span class="string">'../wolf/h4.png'</span>, <span class="string">'../wolf/h5.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'../wolf/h6.png'</span>, <span class="string">'../wolf/h7.png'</span>, <span class="string">'../wolf/h8.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'../wolf/h9.png'</span>]</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> wolf2 = [<span class="string">'../wolf/x0.png'</span>, <span class="string">'../wolf/x1.png'</span>, <span class="string">'../wolf/x2.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'../wolf/x3.png'</span>, <span class="string">'../wolf/x4.png'</span>, <span class="string">'../wolf/x5.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'../wolf/x6.png'</span>, <span class="string">'../wolf/x7.png'</span>, <span class="string">'../wolf/x8.png'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'../wolf/x9.png'</span>]</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> arrPos = [</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"100px"</span>, top: <span class="string">"115px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"20px"</span>, top: <span class="string">"160px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"190px"</span>, top: <span class="string">"142px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"105px"</span>, top: <span class="string">"193px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"19px"</span>, top: <span class="string">"221px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"202px"</span>, top: <span class="string">"212px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"120px"</span>, top: <span class="string">"275px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"30px"</span>, top: <span class="string">"295px"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123; left: <span class="string">"209px"</span>, top: <span class="string">"297px"</span> &#125;</span></span><br><span class="line">                ]</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $wolfImage = $(<span class="string">"&lt;img src='' class='wolfimage'&gt;"</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> posindex = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">8</span>)</span></span><br><span class="line">                $wolfImage.css(&#123;</span><br><span class="line"><span class="actionscript">                    position: <span class="string">"absolute"</span>,</span></span><br><span class="line">                    left: arrPos[posindex].left,</span><br><span class="line">                    top: arrPos[posindex].top</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $wolfType = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()) == <span class="number">0</span> ? wolf1 : wolf2</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 修改图片下标，当点击后显示出点击动画</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.wolfIndex = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.wolfIndexEnd = <span class="number">5</span></span></span><br><span class="line"><span class="actionscript">                wolfTImer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                    if (wolfIndex == wolfIndexEnd) &#123;</span><br><span class="line">                        $wolfImage.remove()</span><br><span class="line">                        clearInterval(wolfTImer)</span><br><span class="line">                        wolfanimation()</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    $wolfImage.attr(<span class="string">"src"</span>, $wolfType[wolfIndex])</span></span><br><span class="line">                    wolfIndex++</span><br><span class="line">                &#125;, 200)</span><br><span class="line"><span class="javascript">                $(<span class="string">".container"</span>).append($wolfImage)</span></span><br><span class="line">                gameRules($wolfImage)</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 结束游戏方法</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">Stopwolfanimation</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".wolfimage"</span>).remove()</span></span><br><span class="line">                clearInterval(wolfTImer)</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">gameRules</span><span class="params">($wolfImage)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// one只能点击一次可以加减分</span></span></span><br><span class="line"><span class="actionscript">                $wolfImage.one(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>.wolfIndex = <span class="number">6</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>.wolfIndexEnd = <span class="number">9</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> $src = $(<span class="keyword">this</span>).attr(<span class="string">"src"</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> flag = $src.indexOf(<span class="string">"h"</span>) &gt;= <span class="number">0</span></span></span><br><span class="line">                    if (flag) &#123;</span><br><span class="line"><span class="javascript">                        $(<span class="string">".score"</span>).text(<span class="built_in">parseInt</span>($(<span class="string">".score"</span>).text()) + <span class="number">10</span>)</span></span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">".score"</span>).text(<span class="built_in">parseInt</span>($(<span class="string">".score"</span>).text()) - <span class="number">10</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"score"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"start"</span>&gt;</span>开始游戏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"rules"</span>&gt;</span>游戏规则<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;div class="rules"&gt;游戏规则&lt;/div&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rule"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>游戏规则<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>1、游戏时间60s<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>2、拼手速，殴打灰太狼+10分<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>3、殴打小灰灰-10分<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span>[关闭]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>GAME OVER<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"restart"</span>&gt;</span>重新开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"result"</span>&gt;</span></span><br><span class="line">            恭喜您，您的得分为<span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"scorelast"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>jQuery</category>
      </categories>
  </entry>
  <entry>
    <title>jQuery(2)</title>
    <url>/2020/07/21/jQuery-2/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(function () &#123;</span><br><span class="line">&#x2F;&#x2F; 当子元素移入移出也会触发父元素</span><br><span class="line">&#x2F;&#x2F; $(&quot;.father&quot;).mouseover(function()&#123;</span><br><span class="line">&#x2F;&#x2F; &#125;)</span><br><span class="line">&#x2F;&#x2F; $(&quot;.father&quot;).mouseout(function()&#123;</span><br><span class="line">&#x2F;&#x2F; &#125;)</span><br><span class="line">&#x2F;&#x2F;可以解决上面问题</span><br><span class="line">$(&quot;.father&quot;).mouseenter(function()&#123;</span><br><span class="line">&#125;)</span><br><span class="line">$(&quot;.father&quot;).mouseleave(function()&#123;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;进一步优化，仅使用一个函数。此处也可以使用一个function也可监听移入移出</span><br><span class="line">$(&quot;.father&quot;).hover(function()&#123;</span><br><span class="line">&#125;,function()&#123;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">h1</span> &#123;</span></span><br><span class="line">            font-size: 20px;</span><br><span class="line">            line-height: 35px;</span><br><span class="line">            color: deeppink;</span><br><span class="line">            padding-left: 10px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dashed</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ul&gt;li &#123;</span><br><span class="line">            padding: 5px 10px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dashed</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(-n+3)</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            background: deeppink;</span><br><span class="line">        &#125;</span><br><span class="line">        ul&gt;li&gt;span &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 20px;</span><br><span class="line">            height: 20px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 20px;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            margin-top: 5px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            width: 80px;</span><br><span class="line">            height: 120px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&gt;<span class="selector-tag">p</span> &#123;</span></span><br><span class="line">            width: 180px;</span><br><span class="line">            height: 120px;</span><br><span class="line">            float: right;</span><br><span class="line">            font-size: 12p;</span><br><span class="line">            line-height: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.current</span> <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $("li").mouseenter(function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $(this).addClass("current")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $("li").mouseleave(function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $(this).removeClass("current")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"li"</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).addClass(<span class="string">"current"</span>)</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).removeClass(<span class="string">"current"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>电影排行榜<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span>电影名称</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/nav11.png"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>故事发生在地大物博风景壮丽的新疆，艾萨是一个从小到大都在这里长大的土生土长的新疆男孩。艾萨</span><br><span class="line">                        出生在一个并不富裕的家庭之中，母亲的患病让家里的经济条件雪上加霜，母亲的病不仅让她丧失了语言功能，还常常会离家</span><br><span class="line">                        出走不见踪迹，因此艾萨必须在上学之余格外小心的看护随时<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span>电影名称</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/nav11.png"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>故事发生在地大物博风景壮丽的新疆，艾萨是一个从小到大都在这里长大的土生土长的新疆男孩。艾萨</span><br><span class="line">                        出生在一个并不富裕的家庭之中，母亲的患病让家里的经济条件雪上加霜，母亲的病不仅让她丧失了语言功能，还常常会离家</span><br><span class="line">                        出走不见踪迹，因此艾萨必须在上学之余格外小心的看护随时<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span>电影名称</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/nav21.png"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>故事发生在地大物博风景壮丽的新疆，艾萨是一个从小到大都在这里长大的土生土长的新疆男孩。艾萨</span><br><span class="line">                        出生在一个并不富裕的家庭之中，母亲的患病让家里的经济条件雪上加霜，母亲的病不仅让她丧失了语言功能，还常常会离家</span><br><span class="line">                        出走不见踪迹，因此艾萨必须在上学之余格外小心的看护随时<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span>电影名称</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/nav31.png"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>故事发生在地大物博风景壮丽的新疆，艾萨是一个从小到大都在这里长大的土生土长的新疆男孩。艾萨</span><br><span class="line">                        出生在一个并不富裕的家庭之中，母亲的患病让家里的经济条件雪上加霜，母亲的病不仅让她丧失了语言功能，还常常会离家</span><br><span class="line">                        出走不见踪迹，因此艾萨必须在上学之余格外小心的看护随时<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- tab选项卡 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".nav&gt;li").mouseenter(function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $(this).addClass("current")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var index=$(this).index()//获取图片下标</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var $img=$(".image&gt;li").eq(index)//得到图片信息</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $img.addClass("show")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".nav&gt;li").mouseleave(function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $(this).removeClass("current")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var index=$(this).index()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var $img=$(".image&gt;li").eq(index)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $img.removeClass("show")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".nav&gt;li"</span>).mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).addClass(<span class="string">"current"</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).siblings().removeClass(<span class="string">"current"</span>)<span class="comment">//siblings()获取当前同一级别的其他元素</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> index=$(<span class="keyword">this</span>).index()<span class="comment">//获取图片下标</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $img=$(<span class="string">".image&gt;li"</span>).eq(index)<span class="comment">//得到图片信息</span></span></span><br><span class="line"><span class="actionscript">                $img.siblings().removeClass(<span class="string">"show"</span>)<span class="comment">//隐藏非当前图片</span></span></span><br><span class="line"><span class="actionscript">                $img.addClass(<span class="string">"show"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 440px;</span><br><span class="line">            height: 287px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">            margin: 50px auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">            display: flex;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            flex-grow: 1;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background: orange;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-class">.current</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.image</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            background-size: cover;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.image</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.image</span>&gt;<span class="selector-class">.show</span>&#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"current"</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>JUQERY<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>C语言<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"image"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"show"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-3.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        position: fixed;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">        float: right;</span><br><span class="line">        position: fixed;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 200px;</span><br><span class="line">    &#125;</span><br><span class="line">    img &#123;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line">    div &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        background: red;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 监听网页的滚动</span></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> offset = $(<span class="string">"html,body"</span>).scrollTop()</span></span><br><span class="line">            if(offset&gt;=200)&#123;</span><br><span class="line"><span class="javascript">                $(<span class="string">"img"</span>).show(<span class="number">1000</span>)</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"img"</span>).hide(<span class="number">1000</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"div"</span>).slideDown(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"展开"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"div"</span>).slideUp(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"展开"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"div"</span>).slideToggle(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"切换"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>展开<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>收缩<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/MI-phone1.webp"</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/MI-phone2.webp"</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 菜单 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-13<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">            line-height: 35px;</span><br><span class="line">            border-bottom: none;</span><br><span class="line">            text-indent: 2em;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">            border-bottom-left-radius: 5px;</span><br><span class="line">            border-bottom-right-radius: 5px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">            border-top-left-radius: 5px;</span><br><span class="line">            border-top-right-radius: 5px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">li</span>&gt;<span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 29px;</span><br><span class="line">            height: 29px;</span><br><span class="line">            right: 10px;</span><br><span class="line">            top: 3px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.sub</span> &#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.sub</span>&gt;<span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            background: mediumpurple;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.sub</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* addClass需要具体对哪一块操作 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&gt;<span class="selector-class">.current</span>&gt;<span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            transform: rotate(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.XL</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background: red;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            display: flex;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.XL</span>&gt;<span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            line-height: 50px;</span><br><span class="line">            display: block;</span><br><span class="line">            flex-grow: 1;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.XL</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.SUB</span>&#123;</span></span><br><span class="line">            background: salmon;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 折叠菜单</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".nav&gt;li"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $sub = $(<span class="keyword">this</span>).children(<span class="string">".sub"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 展开二级菜单</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $sub.slideDown(1000)</span></span></span><br><span class="line">                $sub.slideToggle(1000)</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $othersub = $(<span class="keyword">this</span>).siblings().children(<span class="string">".sub"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 非当前二级菜单收起</span></span></span><br><span class="line">                $othersub.slideUp(1000)</span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).toggleClass(<span class="string">"current"</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).siblings().removeClass(<span class="string">"current"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">//下拉菜单</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".XL&gt;li"</span>).mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $sub = $(<span class="keyword">this</span>).children(<span class="string">".SUB"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//执行动画之前stop()</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 此处需要停止当前正在进行的动画，否则多次快速移入出会不断累加</span></span></span><br><span class="line">                $sub.stop()</span><br><span class="line">                $sub.slideDown(500)</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">".XL&gt;li"</span>).mouseleave(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $sub = $(<span class="keyword">this</span>).children(<span class="string">".SUB"</span>)</span></span><br><span class="line">                $sub.stop()</span><br><span class="line">                $sub.slideUp(500)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>一级菜单<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>一级菜单<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>一级菜单<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"XL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>一级菜单</span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"SUB"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>一级菜单</span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"SUB"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>一级菜单</span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"SUB"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级菜单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 淡入淡出效果</span></span><br><span class="line"><span class="comment">$("button").eq(0).click(function()&#123;</span></span><br><span class="line"><span class="comment">$("div").fadeIn(1000,function()&#123;                    </span></span><br><span class="line"><span class="comment">&#125;)&#125;)</span></span><br><span class="line"><span class="comment">$("button").eq(1).click(function()&#123;</span></span><br><span class="line"><span class="comment">$("div").fadeOut(1000,function()&#123;</span></span><br><span class="line"><span class="comment">&#125;)&#125;)</span></span><br><span class="line"><span class="comment">$("button").eq(2).click(function()&#123;</span></span><br><span class="line"><span class="comment">$("div").fadeToggle(1000,function()&#123;                    </span></span><br><span class="line"><span class="comment">&#125;)&#125;)</span></span><br><span class="line"><span class="comment">$("button").eq(3).click(function()&#123;</span></span><br><span class="line"><span class="comment">$("div").fadeTo(1000,0.5,function()&#123;                    </span></span><br><span class="line"><span class="comment">&#125;)&#125;) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"span"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".ad"</span>).remove()</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".ad").slideDown(1000,function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     $(".ad").fadeOut(1000,function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         $(".ad").fadeIn(1000)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 动画链</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".ad"</span>).stop().slideDown(<span class="number">1000</span>).fadeOut(<span class="number">1000</span>).fadeIn(<span class="number">1000</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.ad</span> &#123;</span></span><br><span class="line">            position: fixed;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.ad</span>&gt;<span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 30px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ad"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>X<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自定义动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-15<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 自定义动画</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//animate，效果、时间、动画节奏默认swing、回调函数</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".one"</span>).animate(&#123;</span></span><br><span class="line">                    width: 300</span><br><span class="line"><span class="actionscript">                &#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; &#125;)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 动画速度，linear匀速、swing慢快慢</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">".two"</span>).animate(&#123;</span></span><br><span class="line">                    marginLeft: 300</span><br><span class="line"><span class="actionscript">                &#125;, <span class="number">3000</span>, <span class="string">"linear"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; &#125;)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".one"</span>).animate(&#123;</span></span><br><span class="line"><span class="actionscript">                    width: <span class="string">"+=200"</span><span class="comment">//在原有的基础上修改</span></span></span><br><span class="line"><span class="actionscript">                &#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; &#125;)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">3</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".one"</span>).animate(&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// width: "hide"//隐藏</span></span></span><br><span class="line"><span class="actionscript">                    width: <span class="string">"toggle"</span><span class="comment">//取反</span></span></span><br><span class="line"><span class="actionscript">                &#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; &#125;)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// jquery中修改多个属性会同时执行</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">4</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//可以逐步执行，delay延迟调用</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">".three"</span>).animate(&#123;</span></span><br><span class="line">                    width: 500</span><br><span class="line">                &#125;, 1000).delay(2000).animate(&#123;</span><br><span class="line">                    height: 300</span><br><span class="line"><span class="actionscript">                &#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; &#125;)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">5</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".forth"</span>).animate(&#123;</span></span><br><span class="line">                    width: 500</span><br><span class="line">                &#125;, 1000).animate(&#123;</span><br><span class="line">                    height: 300</span><br><span class="line">                &#125;, 1000).animate(&#123;</span><br><span class="line">                    width: 200</span><br><span class="line">                &#125;, 1000).animate(&#123;</span><br><span class="line">                    height: 100</span><br><span class="line">                &#125;, 1000)</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"button"</span>).eq(<span class="number">6</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 立即停止当前动画，执行后序动画</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $(".forth").stop()</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $(".forth").stop(false)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $(".forth").stop(false,false)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 立即停止当前动画和后序所有动画</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">".forth"</span>).stop(<span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".forth"</span>).stop(<span class="literal">true</span>, <span class="literal">false</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 立即完成当前动画和继续执行后序动画</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">".forth"</span>).stop(<span class="literal">false</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//立即完成当前的，并停止后序所有的动画</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">".forth"</span>).stop(<span class="literal">true</span>, <span class="literal">true</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            background: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.two</span> &#123;</span></span><br><span class="line">            background: darkorange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.three</span> &#123;</span></span><br><span class="line">            background: indianred;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.forth</span> &#123;</span></span><br><span class="line">            background: chartreuse;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>操作属性1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>操作属性2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>累加属性<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>关键字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"two"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>开始动画1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>开始动画2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>停止动画<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"three"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"forth"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jquery轮播图、图片触发效果 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-16<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, ele</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> $url = <span class="string">"url(\"../Resource/330-47.png\") no-repeat 0 "</span> + (index * <span class="number">-41.25</span>) + <span class="string">"px"</span></span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).children(<span class="string">"span"</span>).css(<span class="string">"background"</span>, $url)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"li"</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).children(<span class="string">"span"</span>).animate(&#123;</span></span><br><span class="line">                    top: -50</span><br><span class="line"><span class="actionscript">                &#125;, <span class="number">500</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="keyword">this</span>).css(<span class="string">"top"</span>, <span class="string">"60px"</span>)</span></span><br><span class="line"><span class="javascript">                    $(<span class="keyword">this</span>).animate(&#123;</span></span><br><span class="line">                        top: 0</span><br><span class="line">                    &#125;, 500)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> offset = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> timer</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">autoPlay</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                timer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                    offset += -3</span><br><span class="line">                    if (offset &lt;= -1260) &#123;</span><br><span class="line">                        offset = 0</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    $(<span class="string">"div&gt;ul"</span>).css(<span class="string">"marginLeft"</span>, offset)</span></span><br><span class="line">                &#125;, 20)</span><br><span class="line">            &#125;</span><br><span class="line">            autoPlay()</span><br><span class="line"><span class="javascript">            $(<span class="string">"div&gt;ul&gt;li"</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                clearInterval(timer)</span><br><span class="line"><span class="actionscript">                <span class="comment">// 设置动画透明度</span></span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).siblings().fadeTo(<span class="number">100</span>,<span class="number">0.5</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 选中后再图片中移动去除当前的背景</span></span></span><br><span class="line"><span class="javascript">                $(<span class="keyword">this</span>).fadeTo(<span class="number">100</span>,<span class="number">1</span>)</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                autoPlay()</span><br><span class="line"><span class="javascript">                $(<span class="string">"div&gt;ul&gt;li"</span>).fadeTo(<span class="number">100</span>,<span class="number">1</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.show</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 250px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">            margin: 20px auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.show</span>&gt;<span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            width: 25%;</span><br><span class="line">            height: 60px;</span><br><span class="line">            margin-top: 50px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            float: left;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.show</span>&gt;<span class="selector-tag">li</span>&gt;<span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 46px;</span><br><span class="line"><span class="css">            <span class="selector-tag">height</span>: 41<span class="selector-class">.25px</span>;</span></span><br><span class="line">            background: url("../Resource/330-47.png") no-repeat 0 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div &#123;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            width: 630px;</span><br><span class="line">            height: 170px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">            margin: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        div&gt;ul &#123;</span><br><span class="line">            width: 1890px;</span><br><span class="line">            height: 170px;</span><br><span class="line">            display: flex;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        img &#123;</span><br><span class="line">            width: 315px;</span><br><span class="line">            background-size: cover;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"show"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>淘宝<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>微博<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>网易<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>搜狐<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>腾讯<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>视频<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>京东<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-3.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-4.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>jQuery</category>
      </categories>
  </entry>
  <entry>
    <title>jQuery(1)</title>
    <url>/2020/07/21/jQuery-1/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">alert(&#39;hello&#39;)</span><br><span class="line">&#125;)</span><br><span class="line">与window.onload&#x3D;function(e)&#123;&#125;一样的作用</span><br><span class="line">1)原生js和jquery入口函数加载模式不同</span><br><span class="line">原生js会等到dom元素和图片全部加载完后才执行</span><br><span class="line">jquery会等到dom元素执行完毕，不必等到图片加载完毕</span><br><span class="line">2)原生js编写多个入口函数后面编写的会覆盖前面编写的</span><br><span class="line">jquery中编写多个入口函数，不会覆盖</span><br><span class="line">当使用$产生冲突可以使用 jQuery.noConflict()释放使用权，但是释放必须在编写其他jQuery之前编写，释放之后不能再使用$。此时可以var j&#x3D;jQuery.noConflict()来取代即可</span><br><span class="line">j(function()&#123;</span><br><span class="line">alert(&#39;hello&#39;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script&gt;</span></span><br><span class="line"><span class="comment">        window.onload = function () &#123;</span></span><br><span class="line"><span class="comment">            var img = document.getElementsByTagName("img")[0];</span></span><br><span class="line"><span class="comment">            console.log(img);</span></span><br><span class="line"><span class="comment">            var width = window.getComputedStyle(img).width;</span></span><br><span class="line"><span class="comment">            console.log("onload", width);</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">        $(document).ready(function () &#123;</span></span><br><span class="line"><span class="comment">            var $img = $("img");</span></span><br><span class="line"><span class="comment">            console.log($img);</span></span><br><span class="line"><span class="comment">            var $width = $img.width();</span></span><br><span class="line"><span class="comment">            console.log("ready", $width);</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// window.onload=function()&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     alert('he')</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// window.onload=function()&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     alert('h')</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">'he'</span>)</span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">'h'</span>)</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$()代表调用jQuery的核心函数</span><br><span class="line">可以接受一个字符串</span><br><span class="line">字符选择器(var $box1&#x3D;$(&quot;.box1&quot;);返回一个Jquery对象)</span><br><span class="line">字符串代码片段(var $p&#x3D;$(&quot;&lt;p&gt;ph&lt;&#x2F;p&gt;&quot;;返回一个Jquery对象);console.log($p);)</span><br><span class="line">Dom元素(会将Dom元素包装成一个Jquery对象返回)</span><br><span class="line">(var img &#x3D; document.getElementsByTagName(&quot;img&quot;)[0];</span><br><span class="line">var $img&#x3D;$(img);)总之都包装成一个Jquery对象</span><br><span class="line">Jquery对象是一个伪数组，含有0-length-1的属性，并且有length属性</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">静态方法：</span><br><span class="line">函数名.方法名&#x3D;function()&#123;&#125; 函数名.方法名()调用</span><br><span class="line">实例方法：</span><br><span class="line">函数名.prototype.方法名&#x3D;function()&#123;&#125; var a&#x3D;new 函数名(); a.方法名()调用即创建对象调用</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Jquery方法：</span><br><span class="line">1）each方法</span><br><span class="line">var arr &#x3D; [1, 2, 3, 4]</span><br><span class="line">var obj &#x3D; &#123; 0: 1, 1: 4, 2: 6, 3: 8, length: 4 &#125;&#x2F;&#x2F;伪数组</span><br><span class="line">arr.forEach(function (value, index) &#123;</span><br><span class="line">    console.log(index, value)</span><br><span class="line">&#125;)</span><br><span class="line">console.log(&quot;-------------&quot;)</span><br><span class="line">$.each(obj,function(index,value)&#123;&#x2F;&#x2F;参数位置，index、value</span><br><span class="line">    console.log(index, value)</span><br><span class="line">&#125;)</span><br><span class="line">2）map方法</span><br><span class="line">arr.map(function (value, index, array) &#123;</span><br><span class="line">    console.log(index, value, array)</span><br><span class="line">&#125;)</span><br><span class="line">console.log(&quot;--------------&quot;)</span><br><span class="line">$.map(obj, function (value, index) &#123;&#x2F;&#x2F;参数位置一致</span><br><span class="line">    console.log(index, value)</span><br><span class="line">&#125;)</span><br><span class="line">Jquery方法中each方法默认的返回值是遍历谁就返回谁、不支持在回调函数中遍历的数组进行处理</span><br><span class="line">map方法默认返回值是一个空数组、可以在回调函数通过return对遍历的数组进行处理</span><br><span class="line">var res&#x3D;$.map(obj, function (value, index) &#123;</span><br><span class="line">    console.log(index, value)</span><br><span class="line">    return index+value</span><br><span class="line">&#125;)</span><br><span class="line">console.log(res)</span><br><span class="line">3）trim方法</span><br><span class="line">去除字符串两端空格</span><br><span class="line">var str&#x3D;&quot;     hjh      &quot;</span><br><span class="line">var re&#x3D;$.trim(str)</span><br><span class="line">4）isWindow方法</span><br><span class="line">判断是否是window对象</span><br><span class="line">var res&#x3D;$.isWindow(w)</span><br><span class="line">5）isArray方法</span><br><span class="line">判断是否是真数组</span><br><span class="line">var res&#x3D;$.isArray(w)</span><br><span class="line">6）isFunction方法</span><br><span class="line">判断是否是函数</span><br><span class="line">var res&#x3D;$.isFunction(w) Jquery框架本质是一个函数</span><br><span class="line">7）holdReady方法</span><br><span class="line">$.holdReady(true)暂停$(function()&#123;&#125;)执行</span><br><span class="line">$.holdReady(false)恢复即可</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">内容选择器：</span><br><span class="line">:contains(text)  找到有文本的指定元素，text是包含的文本的内容</span><br><span class="line">:has(selector) 找到包含指定子元素的指定元素</span><br><span class="line">:parent 找到有文本或有子元素的指定元素</span><br><span class="line">:empty 找到既没有文本有没有子元素的指定元素</span><br><span class="line">$(function () &#123;</span><br><span class="line">&#x2F;&#x2F; var $div&#x3D;$(&quot;div:empty&quot;)</span><br><span class="line">&#x2F;&#x2F; console.log($div)</span><br><span class="line">&#x2F;&#x2F; var $div1&#x3D;$(&quot;div:parent&quot;)</span><br><span class="line">&#x2F;&#x2F; console.log($div1)</span><br><span class="line">&#x2F;&#x2F; var $div2 &#x3D; $(&quot;div:contains(&#39;DIV&#39;)&quot;)</span><br><span class="line">&#x2F;&#x2F; console.log($div2)</span><br><span class="line">var $div3 &#x3D; $(&quot;div:has(&#39;span&#39;)&quot;)</span><br><span class="line">console.log($div3)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;DIV&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;DIV1&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;p&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">属性：对象身上保存的变量</span><br><span class="line">属性节点：在html标签中添加的属性就是属性节点 &lt;span class&#x3D;&quot;box1 name&#x3D;&quot;it123&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">在浏览器中找到span这个dom元素后，展开看到的都是属性。在[&quot;0&quot;].attributes属性中保存的所有内容都是属性节点</span><br><span class="line">var span &#x3D; document.getElementsByTagName(&quot;span&quot;)[0]</span><br><span class="line">span.setAttribute(&quot;name&quot;, &quot;it456&quot;)&#x2F;&#x2F;设置属性节点的值</span><br><span class="line">span.getAttribute(&quot;name&quot;)&#x2F;&#x2F;获取属性节点的值</span><br><span class="line">任何对象都有属性，但是只有dom对象才有属性节点</span><br><span class="line">1、attr(name|pro|key,val|fn)</span><br><span class="line">获取或者设置属性节点的值，传递一个参数代表获取节点值，两个参数代表设置值</span><br><span class="line">无论找到多少个元素，都只会返回第一个元素指定的属性节点</span><br><span class="line">若设置的属性节点值不存在，就新增该属性节点</span><br><span class="line">&lt;span class&#x3D;&quot;span1&quot; name&#x3D;&quot;123&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;span2&quot; name&#x3D;&quot;456&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">$(&quot;span&quot;).attr(&quot;class&quot;)</span><br><span class="line">$(&quot;span&quot;).attr(&quot;class&quot;,&quot;box&quot;)设置class属性节点的值为box</span><br><span class="line">$(&quot;span&quot;).removeAttr(&quot;class&quot;)删除所有能够被找到的元素指定的属性节点。$(&quot;span&quot;).removeAttr(&quot;class name&quot;)删除多个属性节点</span><br><span class="line">2、prop</span><br><span class="line">$(&quot;span&quot;).eq(0).prop(&quot;class&quot;,&quot;box&quot;)使用与attr一致，eq(0)表示第一个span</span><br><span class="line">$(&quot;span&quot;).removeProp(&quot;class&quot;)与removeAttr一致</span><br><span class="line">attr和prop使用，当返回的时true&#x2F;false使用prop()(checked、disabled)</span><br><span class="line">布尔值属性：prop 非布尔值属性attr</span><br><span class="line">二者的同步问题，改变prop时不会同步attr、在没有动prop时，attr会同步prop、一旦动过prop，attr不会同步prop</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line">            height: 100px;</span><br><span class="line">            width: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>)[<span class="number">0</span>]</span></span><br><span class="line"><span class="actionscript">            btn.onclick=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> input=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>]</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> text=input.value</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"img"</span>).attr(<span class="string">"src"</span>,text)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"img"</span>).prop(<span class="string">"src"</span>,text)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("img").attr("class","box1")</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>切换图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 对元素的属性做修改，与js中写的函数作用一致 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>)</span></span><br><span class="line"><span class="actionscript">            btn[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).addClass(<span class="string">"class1 class2"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">0</span>].ondblclick=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).addClass(<span class="string">"class3"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).removeClass(<span class="string">"class2"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).toggleClass(<span class="string">"class1 class2 class3"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.class1</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.class2</span> &#123;</span></span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.class3</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 0 0 5<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.3</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文本值操作 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- html与innerhtml一致</span></span><br><span class="line"><span class="comment">text与innertext一致</span></span><br><span class="line"><span class="comment">val --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-4<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            border:  1px solid salmon;</span><br><span class="line">        &#125;</span><br><span class="line">        button&#123;</span><br><span class="line">            width: 60px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            border:  1px solid indigo;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>)</span></span><br><span class="line"><span class="actionscript">            btn[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                $("div").html("<span class="tag">&lt;<span class="name">p</span>&gt;</span>一段<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>")</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"div"</span>).html())</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                $("div").text("<span class="tag">&lt;<span class="name">p</span>&gt;</span>一段<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>")</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">3</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"div"</span>).text())</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">4</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"input"</span>).val(<span class="string">"请输入内容"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn[<span class="number">5</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"input"</span>).val())</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>设置html<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>获取html<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>设置text<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>获取text<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>设置value<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>获取value<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#S"</span>).css(<span class="string">"width"</span>, <span class="string">"100px"</span>).css(<span class="string">"height"</span>, <span class="string">"100px"</span>).css(<span class="string">"background-color"</span>, <span class="string">"red"</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">".A"</span>).css(&#123;</span></span><br><span class="line"><span class="actionscript">                width: <span class="string">"100px"</span>,</span></span><br><span class="line"><span class="actionscript">                height: <span class="string">"100px"</span>,</span></span><br><span class="line"><span class="actionscript">                backgroundColor: <span class="string">"blue"</span></span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取css样式</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log($(<span class="string">"#S"</span>).css(<span class="string">"width"</span>))</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"A"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"S"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#father</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            border: 1px solid yellow;</span><br><span class="line">            margin-left: 50px;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#son</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.scroll</span>&#123;</span></span><br><span class="line">            margin-top: 300px;</span><br><span class="line">            margin-left: 400px;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid violet;</span><br><span class="line">            overflow: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btns = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>);</span></span><br><span class="line"><span class="actionscript">            btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"#father"</span>).width())</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"#father"</span>).innerWidth())<span class="comment">//包含内边距</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"#father"</span>).outerWidth())<span class="comment">//包含边框</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"#son"</span>).offset().left)<span class="comment">//获取元素距离窗口的偏移位</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"#son"</span>).position().left)<span class="comment">//获取元素距离定位元素的偏移位,不能设置</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btns[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("#father").width("400px")</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// $("#son").offset(&#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     left:30,</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     top:30</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#son"</span>).css(&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// left:100</span></span></span><br><span class="line"><span class="actionscript">                    left:<span class="string">"100px"</span></span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 设置、获取滚动偏移量</span></span></span><br><span class="line"><span class="actionscript">            btns[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">".scroll"</span>).scrollTop())</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 获取网页的偏移量,IE在html获取为0</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"body"</span>).scrollTop()+$(<span class="string">"html"</span>).scrollTop())</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btns[<span class="number">3</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".scroll"</span>).scrollTop(<span class="number">300</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btns[<span class="number">4</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 获取网页的偏移量,IE在html获取为0</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log($(<span class="string">"body"</span>).scrollTop()+$(<span class="string">"html"</span>).scrollTop())</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btns[<span class="number">5</span>].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"body,html"</span>).scrollTop(<span class="number">40</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"son"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scroll"</span>&gt;</span></span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll </span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll </span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll </span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll</span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll</span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll</span><br><span class="line">        一个scroll 一个scroll 一个scroll 一个scroll 一个scroll 一个scroll</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>获取<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>设置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>获取scroll<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>设置scroll<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>获取网页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>设置网页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 两种事件绑定方式</span><br><span class="line">1 eventName(fn) 效率高（可优先使用），部分的事件没有实现添加不上</span><br><span class="line">$(&quot;button&quot;).onclick(function()&#123;</span><br><span class="line">    alert(&quot;A&quot;)</span><br><span class="line">&#125;)</span><br><span class="line">2 on(eventName,fn) 可以指定事件，效率低</span><br><span class="line">$(&quot;button&quot;).on(&quot;click.ZS&quot;,function&#123;&#x2F;&#x2F;事件添加.姓名来划分谁写的事件并不影响事件触发,触发的时候可以写click.ZS用于当同时定义该触发事件只调用该人定义的函数</span><br><span class="line">&#125;)</span><br><span class="line">--&gt;</span><br><span class="line">$(function () &#123;</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">   alert(&quot;hello&quot;)</span><br><span class="line">&#125;)</span><br><span class="line">$(&quot;button&quot;).on(&quot;click&quot;,function()&#123;</span><br><span class="line">   alert(&quot;lo&quot;)</span><br><span class="line">&#125;)&#125;)多个点击函数不会覆盖</span><br><span class="line">$(&quot;button&quot;).off()不传参会移除所有事件</span><br><span class="line">$(&quot;button&quot;).off(&quot;click&quot;)传一个参数会移除指定类型的所有事件</span><br><span class="line">$(&quot;button&quot;).off(&quot;click&quot;,box1)传两个参数会移除指定类型的指定事件</span><br><span class="line">return false&#x2F;event.stopPropagation();都可以组织事件冒泡</span><br><span class="line">event.preventDefault();&#x2F;return false阻止默认事件（跳转等）</span><br><span class="line">自定义事件：</span><br><span class="line">$(&quot;button&quot;).on(&quot;Myclick&quot;,function&#123;</span><br><span class="line">alert(&quot;t&quot;)</span><br><span class="line">&#125;)</span><br><span class="line">$(&quot;button&quot;).trigger(&quot;Myclick&quot;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">".father"</span>).on(<span class="string">"click.ZS"</span>,<span class="function"><span class="keyword">function</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"father click1"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">".father"</span>).on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"father click2"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(<span class="string">".son"</span>).on(<span class="string">"click.ZS"</span>,<span class="function"><span class="keyword">function</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"son click1"</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(<span class="string">".son"</span>).trigger(<span class="string">"click.ZS"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//利用trigger触发子元素带命名空间的事件，父元素带相同命名空间的事件也会触发，父元素没有命名空间的事件不会触发</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".son"</span>).trigger(<span class="string">"click.ZS"</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//利用trigger触发子元素不带命名空间的事件，子父元素相同类型的事件都会被触发</span></span></span><br><span class="line">      </span><br><span class="line"><span class="javascript">            $(<span class="string">".son"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"son"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">".father"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"father"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".father").trigger("click")//自动触发事件会造成事件冒泡</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".father").triggerHandler("click")//自动触发事件不会造成事件冒泡</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".son").trigger("click")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $(".son").triggerHandler("click")</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"input[type='submit']"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"submit"</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            $(<span class="string">"input[type='submit']"</span>).trigger(<span class="string">"click"</span>)<span class="comment">//会触发默认行为，此时是会跳转</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"input[type='submit']"</span>).triggerHandler(<span class="string">"click"</span>)<span class="comment">//不会触发默认行为</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对于a如果使用trigger需要在a中添加span否则不会执行默认行为 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://www.taobao.com"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery-8<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.3</span>);</span></span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.ph</span> &#123;</span></span><br><span class="line">            line-height: 50px;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.login</span> &#123;</span></span><br><span class="line">            width: 632px;</span><br><span class="line">            height: 339px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.login</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background: red;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $("button").click(function () &#123;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            //     $("ul").append("<span class="tag">&lt;<span class="name">li</span>&gt;</span>新增li<span class="tag">&lt;/<span class="name">li</span>&gt;</span>")</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $("ul").delegate("li", "click", function () &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     console.log($(this).html())</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"a"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $LOGIN = $(<span class="string">"&lt;div class=\"main\"&gt;\n"</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">\</span>"<span class="attr">login</span>\"&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">..</span>/<span class="attr">Resource</span>/<span class="attr">ad-2.jpg</span>\"&gt;</span>\n" +</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    "<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>\n" +</span></span></span><br><span class="line"><span class="actionscript">                    <span class="string">"&lt;/div&gt;\n"</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">"&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"body"</span>).append($LOGIN);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 由于需要在点击a标签后再触发span关闭，需要事件委托。a是在页面初始化就展示的而span是跳转后出现</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"body"</span>).delegate(<span class="string">".login&gt;span"</span>, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    $LOGIN.remove()</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;ul&gt;</span></span><br><span class="line"><span class="comment">        &lt;li&gt;我是第1个li&lt;/li&gt;</span></span><br><span class="line"><span class="comment">        &lt;li&gt;我是第2个li&lt;/li&gt;</span></span><br><span class="line"><span class="comment">        &lt;li&gt;我是第3个li&lt;/li&gt;</span></span><br><span class="line"><span class="comment">    &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">    &lt;button&gt;点击&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>LOGIN<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ph"</span>&gt;</span></span><br><span class="line">        蚂蚁金服准备在A股和港股两地上市这两则消息之所以引起如此大的反响，毫不意外。这两件事，是2018年4月港交所实施新政以来最大的成功。先说蚂蚁金服上市。</span><br><span class="line">        多年以来，香港资本市场采取“英规港随”的套路，不接受同股不同权的科技公司上市；到2018年4月，在李小加先生的推动之下，港交所实施“上市新规”，允许同股不同权和未盈利企业上市，随后一大批科技与互联网企业如过江之鲫，纷纷登陆港交所。</span><br><span class="line">        后来，虽然有小米、美团、饿了么等独角兽企业上市，以及后来的阿里、京东、网易在香港第二上市；但这些企业要么是尚未盈利，要么是已经上市多年，不具备首发效应。而港股市场真正意义上的科技互联网巨头，仍然只有腾讯。</span><br><span class="line">        今天，随着蚂蚁金服确定在香港上市，港股迎来第二只互联网科技巨头。中国搞金融科技的企业很多，有腾讯旗下的FinTech、有平安的金融壹账通（OneConnect）、有京东数科、百度度小满，等等。截至蚂蚁之前，除了金融壹账通在美国上市之外，其它尚未有明确上市计划。由于缺少对标样本，资本市场对这类金融科技企业，难以给出估值。</span><br><span class="line">        而蚂蚁金服的单独上市，给市场提供了一个极好的对标样本。这将使得许多先前包含在巨头内部的金融科技业务，得到了重新估值的机会。</span><br><span class="line">        正是为此，今天腾讯的股价大涨……。理由也很简单，蚂蚁金服上市，使得腾讯旗下的类似业务——腾讯金融科技——有了估值的直接对标样本。</span><br><span class="line">        推而广之，蚂蚁金服上市，为港股市场以及A股科创板提供了为金融科技企业估值的范例。这个范例，不仅是中国第一，而且是世界第一。就目前而言，美国也没有一家独立上市的纯粹的金融科技公司。</span><br><span class="line">        直接利好的是一堆蚂蚁金服概念股，例如A股中的恒生电子、张江高科、中国动向等。当然蚂蚁金服的大股东也是利好标的，例如人保、人寿等。再说恒生科技指数。</span><br><span class="line">        港股向来为人所病诟，错过了科技繁荣的十年、甚至20年。恒指作为一个代表金融和地产、特别是香港本地金融地产业的指数，在当前这一波牛市中，表现得非常差劲。</span><br><span class="line">        而这一轮连续创新高的新老互联网企业和科技企业，例如腾讯、美团、金蝶、金山软件、中芯国际、微盟……这些股票，恒指完全反应不出来。</span><br><span class="line">        如果把恒指的走势与腾讯、阿里、美团、小米、瑞声、舜宇、中芯国际、金蝶国际等科技公司做一比较，我们发现，年初至今的涨幅，这些公司全部超过恒指。即便排除比较妖的中芯国际，剩下的例如金蝶、美团等，年初至今涨幅也超过1倍；而腾讯、小米等涨幅也超过50%。比较而言恒指年初至今不涨反跌，跌幅在在9.6%。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>jQuery</category>
      </categories>
  </entry>
  <entry>
    <title>JS(6)</title>
    <url>/2020/07/18/JS-6/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">js调用函数时传递变量参数时，是值传递还是引用传递？</span><br><span class="line">都是值（基本&#x2F;地址值）传递</span><br><span class="line">可能是值传递，也可能是引用传递（地址值）</span><br><span class="line">js引擎管理内存？</span><br><span class="line">内存生命周期，分配小内存空间得到试用权、存储数据可反复操作、释放小内存空间</span><br><span class="line">释放内存，局部变量在函数执行完自动释放，对象在成为垃圾对象后被垃圾回收期回收</span><br><span class="line">调用执行函数？</span><br><span class="line">test();直接调用、obj.test();通过对象调用、new test();new调用、test.call&#x2F;apply(obj);让test临时成为obj方法调用</span><br><span class="line">回调函数？</span><br><span class="line">自己定义，没有调用也会执行。分为两类，dom时间回调函数、定时器回调函数、ajax请求回调函数、生命周期回调函数。</span><br><span class="line">数据类型：判断方法，typeof（数值、字符串、布尔值、undefined、function）不能区别null与object、object和array，instanceof判断对象的具体类型，&#x3D;&#x3D;&#x3D;null&#x2F;undefined</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">作用域：</span><br><span class="line">全局作用域、函数作用域、块作用域(ES6有)</span><br><span class="line">作用域是静态的，函数定义好就存在不变。执行上下文调用函数时创建，函数执行完后销毁</span><br><span class="line">闭包：存在外部函数、内部函数</span><br><span class="line">将函数作为另一个函数的返回值</span><br><span class="line">  function fn1()&#123;</span><br><span class="line">            var a&#x3D;2;</span><br><span class="line">            function fn2()&#123;</span><br><span class="line">                a++;</span><br><span class="line">                console.log(a);</span><br><span class="line">            &#125;</span><br><span class="line">            return fn2;</span><br><span class="line">        &#125;</span><br><span class="line">        var f&#x3D;fn1(); 外部函数调用一次产生一个闭包，f接受返回值，否则执行完毕销毁</span><br><span class="line">        f();&#x2F;&#x2F;3</span><br><span class="line">        f();&#x2F;&#x2F;4 </span><br><span class="line">将函数作为实参传递给另一个函数调用</span><br><span class="line">function show(msg,time)&#123;</span><br><span class="line">            setTimeout(function()&#123;</span><br><span class="line">                alert(msg);</span><br><span class="line">            &#125;,time);</span><br><span class="line">        &#125;</span><br><span class="line">        show(&#39;aaa&#39;,1000);</span><br><span class="line">闭包作用：</span><br><span class="line">1、使用函数内部的变量在函数执行完后，任然存活在内存中，延长了局部变量的生命周期</span><br><span class="line">2、让函数外部可以操作（读写）到函数内部的数据（变量&#x2F;函数）</span><br><span class="line">闭包，在嵌套内部函数定义执行完成就产生，在嵌套内部函数成为垃圾对象死亡</span><br><span class="line">function module() &#123;</span><br><span class="line">    var msg &#x3D; &quot;helLo Word&quot;</span><br><span class="line">    function dosome() &#123;</span><br><span class="line">        console.log(&#39;do&#39; + msg.toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">    function getsome() &#123;</span><br><span class="line">        console.log(&#39;get&#39; + msg.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line">    return &#123;</span><br><span class="line">        getsome: getsome,</span><br><span class="line">        dosome: dosome</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">(function () &#123;</span><br><span class="line">    var msg &#x3D; &quot;helLo Word&quot;</span><br><span class="line">    function Do() &#123;</span><br><span class="line">        console.log(&#39;do&#39; + msg.toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">    function Get() &#123;</span><br><span class="line">        console.log(&#39;get&#39; + msg.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line">    window.module2 &#x3D; &#123;</span><br><span class="line">        Do: Do,</span><br><span class="line">        Get: Get</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;test01.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var module &#x3D; module();</span><br><span class="line">        module.dosome();</span><br><span class="line">        module.getsome();</span><br><span class="line">        module2.Do();</span><br><span class="line">        module2.Get();</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原型链继承：</span><br><span class="line">1、</span><br><span class="line">function Su()&#123;</span><br><span class="line">this.sup&#x3D;&quot;A&quot;</span><br><span class="line">&#125;</span><br><span class="line">Su.prototype.showSu&#x3D;function()&#123;console.log(this.sup)&#125;</span><br><span class="line">function Sub()&#123;</span><br><span class="line">this.supb&#x3D;&quot;B&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;子类型的原型为父类型的一个实例对象</span><br><span class="line">Sub.prototype&#x3D;new Su();</span><br><span class="line">&#x2F;&#x2F;让子类型的原型的属性（constructor）指向子类型</span><br><span class="line">Sub.prototype.constructor&#x3D;Sub</span><br><span class="line">Sub.prototype.showSub&#x3D;function()&#123;console.log(this.supb)&#125;</span><br><span class="line">var sub&#x3D;new Sub();</span><br><span class="line">sub.showSu()</span><br><span class="line">2、组合继承</span><br><span class="line">function Person(name,age)&#123;</span><br><span class="line">this.name&#x3D;name;</span><br><span class="line">this.age&#x3D;age;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.setName&#x3D;function(name)&#123;</span><br><span class="line">this.name&#x3D;name</span><br><span class="line">&#125;</span><br><span class="line">function Student(name,age,price)&#123;</span><br><span class="line">Student.call(this,name,age)&#x2F;&#x2F;相当于this.Person(name,age)</span><br><span class="line">this.price&#x3D;price</span><br><span class="line">&#125;</span><br><span class="line">Student.prototype&#x3D;new Person()&#x2F;&#x2F;为了能看到父类型的方法</span><br><span class="line">Student.prototype.constructor&#x3D;Student</span><br><span class="line">Student.prototype.setPrice&#x3D;function(price)&#123;</span><br><span class="line">this.price&#x3D;price</span><br><span class="line">&#125;</span><br><span class="line">var s&#x3D;new Student(&#39;AA&#39;,22,10000)</span><br><span class="line">s.setname(&#39;bb&#39;)</span><br><span class="line">s.setPrice(12000)</span><br><span class="line">consloe.log(s.name,s.age,s.price)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function fun(n,o)&#123;</span><br><span class="line">console.log(o)</span><br><span class="line">return&#123;</span><br><span class="line">fun:function(m)&#123;</span><br><span class="line">return fun(m,n)</span><br><span class="line">&#125;&#125;&#125;</span><br><span class="line">var a&#x3D;fun(0)&#x2F;&#x2F;undefined</span><br><span class="line">a.fun(1)&#x2F;&#x2F;0</span><br><span class="line">a.fun(2)&#x2F;&#x2F;0</span><br><span class="line">a.fun(3)&#x2F;&#x2F;0</span><br><span class="line">var b&#x3D;fun(0).fun(1).fun(2).fun(3)&#x2F;&#x2F;undefined,0,1,2由于不断产生新的闭包局部变量生命周期延长</span><br><span class="line">var c&#x3D;fun(0).fun(1)</span><br><span class="line">c.fun(2)</span><br><span class="line">c.fun(3)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">js是单线程，使用h5中web workers可以多线程运行</span><br><span class="line">定时器一般会有细微的延迟调用，有时会延迟较大。alert可以暂停计时器的即是，点击确认后重新开始计时</span><br><span class="line">js单线程模式，作为浏览器的脚本语言，js主要用途是与用户互动以及操作dom，决定了他只能是单线程，否则会带来很复杂的同步问题</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Web Workers(多线程)：</span><br><span class="line">可以将一些大计算量的代码交给其运行而不冻结用户界面，但是子线程完全受主线程控制，且不能操作dom，并没有改变js单线程的本质。</span><br><span class="line">1、在分线程创建执行的js文件2、在主线程的js中发消息并设置回调</span><br><span class="line">速度慢、worker内代码不能访问dom更新UI、不能跨域访问(新浪访问百度)、不是所有浏览器都支持</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fbnc</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &lt;= <span class="number">2</span> ? <span class="number">1</span> : fbnc(n - <span class="number">1</span>) + fbnc(n - <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> number = event.data</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'分线程接受到主线程发送的数据：'</span> + number)</span><br><span class="line">    <span class="keyword">var</span> result = fbnc(number)</span><br><span class="line">    postMessage(result)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'分线程向主线程返回数据'</span> + result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"输入值"</span> <span class="attr">id</span>=<span class="string">"inputs"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>计算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementById(<span class="string">"inputs"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> number = inputs.value;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 创建一个worker对象并向其传递将在新线程中执行的脚本url</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> worker = <span class="keyword">new</span> Worker(<span class="string">'worker.js'</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 向worker发送数据</span></span></span><br><span class="line">            worker.postMessage(number);</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'主线程向worker发送数据'</span> + number);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 接受worker传过来的数据函数</span></span></span><br><span class="line"><span class="actionscript">            worker.onmessage = <span class="function"><span class="keyword">function</span> <span class="params">(event)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'主线程接受worker传过来的数据函数'</span> + event.data)</span></span><br><span class="line">                alert(event.data)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>javascript</category>
        <category>advance</category>
      </categories>
  </entry>
  <entry>
    <title>JS(5)</title>
    <url>/2020/07/18/JS-5/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.b1</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            left: 50px;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            left: 100px;</span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line">            border: 1px solid salmon;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn01 = <span class="built_in">document</span>.getElementById(<span class="string">"btn01"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn02 = <span class="built_in">document</span>.getElementById(<span class="string">"btn02"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn03 = <span class="built_in">document</span>.getElementById(<span class="string">"btn03"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"><span class="actionscript">            btn01.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//直接替换元素属性</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// box1.className = "box2";</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//指定添加元素的属性</span></span></span><br><span class="line"><span class="actionscript">                addclass(box1, <span class="string">"box3"</span>);</span></span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            btn02.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                removeclass(box1, <span class="string">"box3"</span>);</span></span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            btn03.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                changeclass(box1, <span class="string">"box3"</span>);</span></span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            <span class="comment">// obj要添加属性元素box、cn鸭皮添加的class值box2</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">addclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line">                if (!hasclass(obj, cn)) &#123;</span><br><span class="line"><span class="actionscript">                    obj.className += <span class="string">" "</span> + cn;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            <span class="comment">//检查是否含有cn</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">hasclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var reg = /\bb2\b/;</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\b"</span> + cn + <span class="string">"\\b"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> reg.test(obj.className);</span></span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">removeclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\b"</span> + cn + <span class="string">"\\b"</span>);</span></span><br><span class="line"><span class="actionscript">                obj.className = obj.className.replace(reg, <span class="string">""</span>);</span></span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            <span class="comment">//元素中含有则删除，没有添加</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">changeclass</span><span class="params">(obj, cn)</span> </span>&#123;</span></span><br><span class="line">                if (hasclass(obj, cn)) &#123;</span><br><span class="line">                    removeclass(obj, cn);</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">                    addclass(obj, cn);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span> <span class="attr">class</span>=<span class="string">"b1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn01"</span>&gt;</span>change<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn02"</span>&gt;</span>reserve<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn03"</span>&gt;</span>all<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 二级菜单 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../font/css/all.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.sdmenu</span> &#123;</span></span><br><span class="line">            width: 150px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            padding: 0 0 10px 0;</span><br><span class="line">            color: aqua;</span><br><span class="line">            background-color: darkgray;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.sdmenu</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.collapsed</span> &#123;</span></span><br><span class="line">            height: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menuspan</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">            height: 20px;</span><br><span class="line">            line-height: 20px;</span><br><span class="line">            padding-left: 5px;</span><br><span class="line">            font-weight: bold;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.sdmenu</span> <span class="selector-tag">div</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            display: flex;</span><br><span class="line">            height: 20px;</span><br><span class="line">            line-height: 20px;</span><br><span class="line">            padding: 0 5px;</span><br><span class="line">            justify-content: space-between;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line">            content: "\f101";</span><br><span class="line">            font-family: 'Font Awesome 5 Free';</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">span</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line">            content: "\f101";</span><br><span class="line">            font-family: 'Font Awesome 5 Free';</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:before</span>&#123;</span></span><br><span class="line">            content: "\f103";</span><br><span class="line">            font-family: 'Font Awesome 5 Free';</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./test01.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> menuspan = <span class="built_in">document</span>.querySelectorAll(<span class="string">".menuspan"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> openDiv = menuspan[<span class="number">0</span>].parentNode;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; menuspan.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                menuspan[i].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> parentDiv = <span class="keyword">this</span>.parentNode;</span></span><br><span class="line">                    changemenu(parentDiv);</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 避免初始操作第一个div导致展不开,&amp;&amp;统一使用changeclass有助于动画效果实现</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (parentDiv != openDiv &amp;&amp; !hasclass(openDiv, <span class="string">"collapsed"</span>)) &#123;</span></span><br><span class="line">                        changemenu(openDiv);</span><br><span class="line">                    &#125;</span><br><span class="line">                    openDiv = parentDiv;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">changemenu</span><span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//begin、end是执行动画起始点</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> begin = obj.offsetHeight;</span></span><br><span class="line"><span class="actionscript">                changeclass(obj, <span class="string">"collapsed"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> end = obj.offsetHeight;</span></span><br><span class="line"><span class="actionscript">                obj.style.height = begin + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                move(obj, <span class="number">10</span>, end, <span class="string">"height"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//删除内联样式，否则点击后高度不变</span></span></span><br><span class="line"><span class="actionscript">                    obj.style.height = <span class="string">""</span>;</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"my_menu"</span> <span class="attr">class</span>=<span class="string">"sdmenu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"menuspan"</span>&gt;</span>在线工具<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>图像优化<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>收藏夹图表生成器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>htaccess<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>梯度图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>按钮生成器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapsed"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"menuspan"</span>&gt;</span>支持我们<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>推荐我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链接我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网络资源<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapsed"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"menuspan"</span>&gt;</span>合作伙伴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>JavaScript工具包<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>CSS驱动<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>CodingForums<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>CSS例子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapsed"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"menuspan"</span>&gt;</span>测试电流<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Current or not<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Current or not<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Current or not<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">obj, speed, target,attr,callback</span>) </span>&#123;</span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    <span class="keyword">var</span> current = <span class="built_in">parseInt</span>(getstyle(obj, attr));</span><br><span class="line">    <span class="comment">// 避免考虑方向</span></span><br><span class="line">    <span class="keyword">if</span> (current &gt; target) &#123;</span><br><span class="line">        speed = -speed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//obj.timer可实现对多个元素同时控制</span></span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> oldvalue = <span class="built_in">parseInt</span>(getstyle(obj, attr));</span><br><span class="line">        <span class="keyword">var</span> newvalue = oldvalue + speed;</span><br><span class="line">        <span class="keyword">if</span> (speed &lt; <span class="number">0</span> &amp;&amp; newvalue &lt; target || speed &gt; <span class="number">0</span> &amp;&amp; newvalue &gt; target) &#123;</span><br><span class="line">            newvalue = target;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//attr为变量需要使用[]</span></span><br><span class="line">        obj.style[attr] = newvalue + <span class="string">"px"</span>;</span><br><span class="line">        <span class="keyword">if</span> (newvalue == target) &#123;</span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">            <span class="comment">//存在callback则调用，否则不调用同if判断</span></span><br><span class="line">            callback&amp;&amp;callback();<span class="comment">//可用于对元素的宽高，top、left位置阶段性变化</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">30</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getstyle</span>(<span class="params">obj, name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.getComputedStyle) &#123;</span><br><span class="line">        <span class="keyword">return</span> getComputedStyle(obj, <span class="literal">null</span>)[name];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> obj.currentStyle[name];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// obj要添加属性元素box、cn鸭皮添加的class值box2</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">addclass</span>(<span class="params">obj, cn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!hasclass(obj, cn)) &#123;</span><br><span class="line">        obj.className += <span class="string">" "</span> + cn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//检查是否含有cn</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasclass</span>(<span class="params">obj, cn</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// var reg = /\bb2\b/;</span></span><br><span class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\b"</span> + cn + <span class="string">"\\b"</span>);</span><br><span class="line">    <span class="keyword">return</span> reg.test(obj.className);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeclass</span>(<span class="params">obj, cn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\b"</span> + cn + <span class="string">"\\b"</span>);</span><br><span class="line">    obj.className = obj.className.replace(reg, <span class="string">""</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//元素中含有则删除，没有添加</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeclass</span>(<span class="params">obj, cn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (hasclass(obj, cn)) &#123;</span><br><span class="line">        removeclass(obj, cn);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        addclass(obj, cn);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JSON：</span><br><span class="line">分为两种对象&#123;&#125;、数组[]</span><br><span class="line">json中允许的值，字符串、数值、布尔值、null、对象、数组。</span><br><span class="line">一般将js对象转换为字符串来作为json交互数据var obj&#x3D;&#39;&#123;&quot;name&quot;:&quot;jk&quot;,&quot;age&quot;:16&#125;&#39;;</span><br><span class="line">var arr&#x3D;&#39;[123,&quot;word&quot;,true]&#39;;var obj2&#x3D;&#39;&#123;&quot;arr&quot;:[1,2,3]&#125;&#39;</span><br><span class="line">将json字符串转换为js中对象。JSON.parse(obj);</span><br><span class="line">将js中对象转换为json字符串。var str &#x3D; JSON.stringify(obj);</span><br><span class="line">IE7以下不兼容JSON，var obj&#x3D;eval(&quot;(&quot;+obj+&quot;)&quot;);即可，但是不安全，可忽略。直接引入js文件就可以解决</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>javascript</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>JS(4)</title>
    <url>/2020/07/10/JS-4/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--键盘事件，不能绑定到div中，绑定到焦点事件或document --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//按键一直按住会不停触发，连续触发时，一二次间隔会稍长，防止误操作</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// document.onkeydown=function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     event=event||window.event;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     //通过keyCode获取按键编码，判断哪个按键被按下</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     //altKey、ctrlKey、shiftKey判断这三个是否被按下</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     if(event.keyCode==89&amp;&amp;event.ctrlKey)&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//         console.log("y and alt is down");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//不会一直触发</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onkeyup=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> input=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            input.onkeydown=<span class="function"><span class="keyword">function</span><span class="params">(event)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                event=event||<span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log(event.keyCode);</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//取消默认行为，输入内容不会出现在文本框中,数字48-57</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//上右下左分别是37、38、39、40</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//可以只是显示数字</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                if(event.keyCode<span class="tag">&lt;<span class="name">=48||event.keyCode</span>&gt;</span>=57)&#123;</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--方向键移动元素 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//分开控制可解决初始移动卡顿的问题</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//开启定时器控制速度</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> dir = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> speed = <span class="number">20</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">switch</span> (dir) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="number">37</span>:</span></span><br><span class="line"><span class="actionscript">                        box1.style.left = box1.offsetLeft - speed + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="number">38</span>:</span></span><br><span class="line"><span class="actionscript">                        box1.style.top = box1.offsetTop - speed + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="number">39</span>:</span></span><br><span class="line"><span class="actionscript">                        box1.style.left = box1.offsetLeft + speed + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="number">40</span>:</span></span><br><span class="line"><span class="actionscript">                        box1.style.top = box1.offsetTop + speed + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, 30);</span><br><span class="line"><span class="actionscript">            <span class="comment">//仅仅控制方向</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 当按住ctrl后速度加速</span></span></span><br><span class="line">                if (event.ctrlKey) &#123;</span><br><span class="line">                    speed = 100;</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">                    speed = 20;</span><br><span class="line">                &#125;</span><br><span class="line">                dir = event.keyCode;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onkeyup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                dir = 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BOM：</span><br><span class="line">浏览器对象模型，通过js操纵浏览器。可以直接使用也可以使用window</span><br><span class="line">提供一些对象操纵浏览器。</span><br><span class="line">window</span><br><span class="line">navigator可用来识别不同的浏览器，使用navigator.userAgent判断浏览器信息，返回一个字符串</span><br><span class="line">location当前浏览器地址栏信息，可以操作浏览器跳转页面。直接修改为一个完整路径即可跳转到该路径，并生成相应历史记录。location.assign(&quot;&quot;)与直接修改一致、location.reload(true)强制清空缓存刷新、location.replace(&quot;&quot;)跳转后不会生成历史记录</span><br><span class="line">history可操作浏览器历史记录，但涉及隐私不能获取具体历史记录，只能操作浏览器向前后访问，只能在档次访问有效。history.length获取当次访问页面数目、history.back回退到上个页面、history.forward跳转到下一个页面、history.go(1&#x2F;-1)跳转到指定页面,可用整数来指定向前&#x2F;后跳的个数</span><br><span class="line">screen可获取用户显示器数据</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定时器： --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> img1 = <span class="built_in">document</span>.getElementById(<span class="string">"img1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> start = <span class="built_in">document</span>.getElementById(<span class="string">"start"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> end = <span class="built_in">document</span>.getElementById(<span class="string">"end"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> timer;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> index = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> imgarray = [<span class="string">'../Resource/banner2.png'</span>, <span class="string">'../Resource/banner3.png'</span>, <span class="string">'../Resource/banner4.png'</span>]</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//定时调用，每隔一段时间执行一次</span></span></span><br><span class="line"><span class="actionscript">            start.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                clearInterval(timer);</span><br><span class="line"><span class="actionscript">                timer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                    index++;</span><br><span class="line">                    index = index % imgarray.length;</span><br><span class="line">                    img1.src = imgarray[index];</span><br><span class="line">                &#125;, 1000);</span><br><span class="line">            &#125;;</span><br><span class="line"><span class="actionscript">            end.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                clearInterval(timer);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//定时器停止timer(第几个定时),clearInterval(可以接受任意参数)</span></span></span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"img1"</span> <span class="attr">src</span>=<span class="string">"../Resource/banner2.png"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 连续点击后会开启多个定时器,开启前关闭即可 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"start"</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"end"</span>&gt;</span>停止<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- var time=setTimeout(function()&#123;&#125;,1000);延时调用只会调用一次 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- clearTimeout(time); 延时定时可以互相替换--&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">            left: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#box2</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            background-color: forestgreen;</span><br><span class="line">            top: 200px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#btn01</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#btn02</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#btn03</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#btn04</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 150px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn01 = <span class="built_in">document</span>.getElementById(<span class="string">"btn01"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn02 = <span class="built_in">document</span>.getElementById(<span class="string">"btn02"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn03 = <span class="built_in">document</span>.getElementById(<span class="string">"btn03"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn04 = <span class="built_in">document</span>.getElementById(<span class="string">"btn04"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box2 = <span class="built_in">document</span>.getElementById(<span class="string">"box2"</span>);</span></span><br><span class="line"><span class="actionscript">            btn01.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                move(box1, <span class="number">20</span>, <span class="number">800</span>,<span class="string">"left"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn02.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                move(box1, <span class="number">20</span>, <span class="number">0</span>,<span class="string">"right"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn03.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                move(box2, <span class="number">10</span>, <span class="number">800</span>,<span class="string">"top"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            btn04.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                move(box2, <span class="number">10</span>, <span class="number">800</span>,<span class="string">"width"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    move(box2,<span class="number">20</span>,<span class="number">600</span>,<span class="string">"height"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">//可以对元素多重修改</span></span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">// obj执行动画的对象,speed速度,target执行的目标位置,attr元素运行的方向形式,callback回调函数动画执行后执行</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">move</span><span class="params">(obj, speed, target,attr,callback)</span> </span>&#123;</span></span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> current = <span class="built_in">parseInt</span>(getstyle(obj, attr));</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 避免考虑方向</span></span></span><br><span class="line">            if (current &gt; target) &#123;</span><br><span class="line">                speed = -speed;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//obj.timer可实现对多个元素同时控制</span></span></span><br><span class="line"><span class="actionscript">            obj.timer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> oldvalue = <span class="built_in">parseInt</span>(getstyle(obj, attr));</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> newvalue = oldvalue + speed;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                if (speed <span class="tag">&lt; <span class="attr">0</span> &amp;&amp; <span class="attr">newvalue</span> &lt; <span class="attr">target</span> || <span class="attr">speed</span> &gt;</span> 0 &amp;&amp; newvalue &gt; target) &#123;</span></span></span><br><span class="line">                    newvalue = target;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">//attr为变量需要使用[]</span></span></span><br><span class="line"><span class="actionscript">                obj.style[attr] = newvalue + <span class="string">"px"</span>;</span></span><br><span class="line">                if (newvalue == target) &#123;</span><br><span class="line">                    clearInterval(obj.timer);</span><br><span class="line"><span class="actionscript">                    <span class="comment">//存在callback则调用，否则不调用同if判断</span></span></span><br><span class="line"><span class="actionscript">                    callback&amp;&amp;callback();<span class="comment">//可用于对元素的宽高，top、left位置阶段性变化</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, 30);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getstyle</span><span class="params">(obj, name)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="built_in">window</span>.getComputedStyle) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> getComputedStyle(obj, <span class="literal">null</span>)[name];</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> obj.currentStyle[name];</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn01"</span>&gt;</span>RIGHT1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn02"</span>&gt;</span>LEFT1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn03"</span>&gt;</span>RIGHT2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn04"</span>&gt;</span>TEST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 可以将该函数封装到js中调用 --&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 轮播图 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#outer</span> &#123;</span></span><br><span class="line">            width: 632px;</span><br><span class="line">            height: 340px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            padding: 10px 0;</span><br><span class="line">            position: relative;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#imglist</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            display: flex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#navDiv</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            display: flex;</span><br><span class="line">            bottom: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#navDiv</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            line-height: 20px;</span><br><span class="line">            display: block;</span><br><span class="line">            text-align: center;</span><br><span class="line">            width: 15px;</span><br><span class="line">            height: 15px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            margin: 0 8px;</span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: 0<span class="selector-class">.5</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 兼容IE8透明 */</span></span></span><br><span class="line">            filter: alpha(opacity=50);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#navDiv</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background-color: black;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./test01.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> navDiv = <span class="built_in">document</span>.getElementById(<span class="string">"navDiv"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> outer = <span class="built_in">document</span>.getElementById(<span class="string">"outer"</span>);</span></span><br><span class="line"><span class="actionscript">            navDiv.style.left = (outer.offsetWidth - navDiv.offsetWidth) / <span class="number">2</span> + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> index = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> alla = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);</span></span><br><span class="line"><span class="actionscript">            alla[index].style.backgroundColor = <span class="string">"black"</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; alla.length; i++) &#123;</span></span><br><span class="line">                alla[i].num = i;</span><br><span class="line"><span class="actionscript">                alla[i].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//避免与自动循环冲突，点击优先</span></span></span><br><span class="line">                    clearInterval(timer);</span><br><span class="line"><span class="actionscript">                    index = <span class="keyword">this</span>.num;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// imglist.style.left = -632 * index + "px";</span></span></span><br><span class="line">                    a();</span><br><span class="line"><span class="actionscript">                    move(imglist, <span class="number">20</span>, <span class="number">-632</span> * index, <span class="string">"left"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                      <span class="comment">//点击执行完毕再次开启自动播放</span></span></span><br><span class="line">                        autoc();</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            autoc();</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (index &gt;= <span class="built_in">document</span>.getElementsByTagName(<span class="string">"img"</span>).length - <span class="number">1</span>) &#123;</span></span><br><span class="line">                    index = 0;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//将首图片添加在尾部，当跳转到此图片直接将其向左整体移动即可</span></span></span><br><span class="line">                    imglist.style.left = 0;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; alla.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//定义为默认样式，否则hover不会触发</span></span></span><br><span class="line"><span class="actionscript">                    alla[i].style.backgroundColor = <span class="string">""</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                alla[index].style.backgroundColor = <span class="string">"black"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> timer;</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">autoc</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                timer=setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                    index++;</span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> imgarr = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"img"</span>).length;</span></span><br><span class="line">                    index = index % imgarr;</span><br><span class="line"><span class="actionscript">                    move(imglist, <span class="number">20</span>, <span class="number">-632</span> * index, <span class="string">"left"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                        a();</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;, 2000);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"imglist"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-2.jpg"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-3.jpg"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../Resource/ad-1.jpg"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navDiv"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web</category>
        <category>javascript</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>JS(3)</title>
    <url>/2020/07/10/JS-3/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">以下设置位置都需要开启定位</span><br><span class="line">修改css样式，box1.style.width&#x3D;&quot;300px&quot;;</span><br><span class="line">当css中存在-需要使用驼峰命名，background-color-&gt;backgroundColor</span><br><span class="line">通过style设置的样式都是内联样式，会立即显示。</span><br><span class="line">可读取样式box1.style.width;即可，只能读取内联样式</span><br><span class="line">box1.currentStyle.width;可以读取当前显示的样式，只能支持IE。其他浏览器可使用getComputedStyle(box1,null)来获取。获取样式的元素、传递一个伪元素（一般使用null）,会返回一个对象，可指定.width即可。若没有设置width会返回当前视口的宽度。不支持IE8及以下浏览器。</span><br><span class="line">currentStyle、getComputerStyle都是只读，不能修改</span><br><span class="line">此时可自定义函数：obj元素名、name查询的width、height等</span><br><span class="line">      function getstyle(obj,name)&#123;</span><br><span class="line">                if(window.getComputedStyle)&#123;</span><br><span class="line">                    return getComputedStyle(obj,null)[name];</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    return obj.currentStyle[name];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">未定义window，getComputedStyle是一个变量需要去作用域中寻找（未找到会报错），加上后成为对象的属性（未找到返回undefined）</span><br><span class="line">box1.clientWidth&#x2F;Height;获取数值可以直接计算，返回内容区和内边距，不含border</span><br><span class="line">box1.offsetWidth&#x2F;Heigt;会获取元素全部的宽高，包括border</span><br><span class="line">box1.offsetParent;获取最近的开启定位的祖先元素，若都没开启，会返回body</span><br><span class="line">box1.offsetLeft&#x2F;Top;当前元素相对于定位父元素的水平&#x2F;垂直偏移量</span><br><span class="line">box1.scrollWidth&#x2F;Height;获取元素滚动区域的宽高</span><br><span class="line">box1.scrollLeft&#x2F;Top;水平&#x2F;垂直滚动条滚动的距离</span><br><span class="line">scrollHeight-scrollTop&#x3D;&#x3D;clientHeight表明垂直滚动条到底，适用于强制用户阅读信息后方可来确认已阅读，在表单添加disable&#x3D;&quot;disable&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#info</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:150px</span>;</span></span><br><span class="line">            height: 500px;</span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">            overflow: auto;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            line-height: 16px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> info=<span class="built_in">document</span>.getElementById(<span class="string">"info"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> inputs=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// onscroll滚动条滚动时触发</span></span></span><br><span class="line"><span class="actionscript">            info.onscroll=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                if(info.scrollHeight-info.scrollTop==info.clientHeight)&#123;</span><br><span class="line"><span class="actionscript">                    inputs[<span class="number">0</span>].disabled=<span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">                    inputs[<span class="number">1</span>].disabled=<span class="literal">false</span>;<span class="comment">//false表示解除</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>请您先注册<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        百度是全球最大的中文搜索引擎，是中国最大的以信息和知识为核心的互联网综合服务公司，更是全球领先的人工智能平台型公司。2000年1月1日创立于中关村，公司创始人李彦宏拥有“超链分析”技术专利，也使中国成为美国、俄罗斯、和韩国之外，全球仅有的4个拥有搜索引擎核心技术的国家之一。</span><br><span class="line">        作为全球最大的中文搜索引擎，百度每天响应来自100余个国家和地区的数十亿次搜索请求，是网民获取中文信息的最主要入口。百度以“用科技让复杂的世界更简单”为使命，不断坚持技术创新，致力于“成为最懂用户，并能帮助人们成长的全球顶级高科技公司”。</span><br><span class="line">        百度是中国最大的以信息和知识为核心的互联网综合服务公司。在AI驱动下，百度的移动生态是中国最大的以信息和知识为核心的移动生态，以百家号、智能小程序和托管页为主要支柱。2019年百度用户规模突破10亿。百度App日活跃用户2.22亿，信息流位居中国第一。百家号创作者达到300万。百度智能小程序是国内唯一完全开源的小程序平台，月活用户规模破3.54亿。百度知道、百度百科、百度文库等六大知识类产品累计生产超10亿条高质量内容，构建了中国最大的知识内容体系。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span>我已同意所示协议</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 鼠标移动 1）显示位置 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#areaDiv</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            border: 1px solid darkblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#showMsg</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 20px;</span><br><span class="line">            border: 1px solid hotpink;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// onmousemove鼠标移动时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> areaDiv=<span class="built_in">document</span>.getElementById(<span class="string">"areaDiv"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> showMsg=<span class="built_in">document</span>.getElementById(<span class="string">"showMsg"</span>);</span></span><br><span class="line"><span class="actionscript">            areaDiv.onmousemove=<span class="function"><span class="keyword">function</span><span class="params">(event)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 解决事件对象兼容性</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// if(!event)&#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     event=window.event;//解决IE兼容</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">                event=event||<span class="built_in">window</span>.event;<span class="comment">//作用同上</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> x=event.clientX;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> y=event.clientY;</span></span><br><span class="line"><span class="actionscript">                showMsg.innerHTML=<span class="string">"x="</span>+x+<span class="string">"y="</span>+y;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"areaDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"showMsg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 鼠标移动 2）跟随鼠标移动 以及解决当含有scorll后鼠标移动为问题--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span>&#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// onmousemove鼠标移动时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// document给文档绑定，防止只能向下移动</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//clientX是可见窗口计算坐标当存在scorll后滚动会有偏差,pageX获取相对于当前页面的坐标可解决，但不兼容IE8</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//解决存在滚轮的情况。处理兼容性，前者适用于chrome</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> st=<span class="built_in">document</span>.body.scrollTop||<span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> sl=<span class="built_in">document</span>.body.scrollLeft||<span class="built_in">document</span>.documentElement.scrollLeft;</span></span><br><span class="line"><span class="javascript">                event=event||<span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var x=event.pageX;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var y=event.pageY;</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> x=event.clientX;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> y=event.clientY;</span></span><br><span class="line"><span class="actionscript">              <span class="comment">//使用left需要开启定位</span></span></span><br><span class="line"><span class="actionscript">                box1.style.left=x+sl+<span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                box1.style.top=y+st+<span class="string">"px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"height: 1000px;width: 1000px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">冒泡：</span><br><span class="line">即相同事件的传递。多数情况有益</span><br><span class="line">s.onclick&#x3D;function()&#123;</span><br><span class="line">   event&#x3D;event||window.event;</span><br><span class="line">   event.cancelBubble&#x3D;true;&#x2F;&#x2F;取消冒泡</span><br><span class="line">   alert(&quot;S&quot;);</span><br><span class="line">&#125;</span><br><span class="line">事件委派，利用冒泡将指定的事件绑定到祖先元素上，每次触发后代元素上的事件就会一直冒泡到祖先元素中响应函数处理事件，可以减少事件绑定次数。此时点击全局都会生效，需要添加if使用target来查看当前触发的元素，event.target.className&#x3D;&#x3D;&quot;link&quot;,需要给触发的元素添加一个class来判断绑定多个事件。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">box1.onclick&#x3D;function()&#123;&#125;;绑定多个事件会覆盖剩一个。使用以下方法解决后可绑定多个响应函数依次执行</span><br><span class="line">box1.addEventListener(&quot;click&quot;,function()&#123; &#x2F;&#x2F;this指的是绑定的对象</span><br><span class="line">alert(1);alert(2);&#125;,false);</span><br><span class="line">事件的字符串(不需要on)、回调函数，事件触发该函数会调用、是否在捕获阶段触发。但不支持IE及以下浏览器。</span><br><span class="line">使用box1.attachEvent(&quot;onclick&quot;,function()&#123;  &#x2F;&#x2F;this指的是window</span><br><span class="line">alert(1);alert(2);&#125;);该方法是后绑定先执行</span><br><span class="line">综合以上两种得出：</span><br><span class="line">function bind(obj, eventstr, callback) &#123;</span><br><span class="line">if(obj.addEventListener)&#123;</span><br><span class="line">obj.addEventListener(eventstr,callback,false);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">&#x2F;&#x2F;obj.attachEvent(&quot;on&quot;+eventstr,callback);</span><br><span class="line">&#x2F;&#x2F;解决调用函数的对象，全部变为自身来调用</span><br><span class="line">obj.attachEvent(&quot;on&quot;+eventstr,function()&#123;</span><br><span class="line">callback.call(obj);&#x2F;&#x2F;在匿名函数中调用回调函数</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">bind(box1, &quot;click&quot;,function () &#123;</span><br><span class="line">alert(1);</span><br><span class="line">alert(2);</span><br><span class="line">&#125;);</span><br><span class="line">obj绑定时间的对象、eventstr时间的字符串（不要on）、callback回调函数</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 拖拽： --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#box2</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">            top: 200px;</span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box2 = <span class="built_in">document</span>.getElementById(<span class="string">"box2"</span>);</span></span><br><span class="line">            drag(box1);</span><br><span class="line">            drag(box2);</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">drag</span><span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            obj.onmousedown = <span class="function"><span class="keyword">function</span> <span class="params">(event)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//解决IE中选中后会作为搜索信息搜索</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// if(box1.setCapature)&#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//     box1.setCapature();</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="javascript">                event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//解决点击后鼠标位于左上角</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ol = event.clientX - obj.offsetLeft;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ot = event.clientY - obj.offsetTop;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> st = <span class="built_in">document</span>.body.scrollTop || <span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> sl = <span class="built_in">document</span>.body.scrollLeft || <span class="built_in">document</span>.documentElement.scrollLeft;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//此处使用document而不是box1为了避免元素被遮盖后无法移动</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> left = event.clientX - ol;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> top = event.clientY - ot;</span></span><br><span class="line"><span class="actionscript">                    obj.style.left = left + sl + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                    obj.style.top = top + st + <span class="string">"px"</span>;</span></span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//取消onmousemove即可</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmouseup = <span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// box1.releaseCapture&amp;&amp;box1.releaseCapture();</span></span></span><br><span class="line">                &#125;;</span><br><span class="line"><span class="actionscript">                <span class="comment">//防止拖拽网页中内容去自动搜索</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 滚轮事件： --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            height: 1000px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 火狐不支持onmousewheel</span></span></span><br><span class="line"><span class="actionscript">            box1.onmousewheel = <span class="function"><span class="keyword">function</span> <span class="params">(event)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// event.wheelDelta获取鼠标滚动方向，不看大小，只看正负，但不支持火狐(event.detail正值向下)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//需要addEventListener来使用该方法</span></span></span><br><span class="line">                if (event.wheelDelta &gt; 0 || event.detail &lt; 0) &#123;</span><br><span class="line"><span class="actionscript">                    box1.style.height = box1.clientHeight - <span class="number">10</span> + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    box1.style.height = box1.clientHeight + <span class="number">10</span> + <span class="string">"px"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">//当滚轮滚动时，如果浏览器有滚动条，滚动条会随之滚动，可取消这样的默认行为</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//由于使用了addEventListener需要使用以下方法</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//但IE8不支持,需要false</span></span></span><br><span class="line">                if (event.preventDefault)&#123;</span><br><span class="line">                    event.preventDefault();</span><br><span class="line"><span class="actionscript">                &#125;<span class="comment">//取消DOMMouseScroll默认行为</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span><span class="comment">//取消onmousewheel默认行为</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            bind(box1, <span class="string">"DOMMouseScroll"</span>, box1.onmousewheel)</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">bind</span><span class="params">(obj, eventstr, callback)</span> </span>&#123;</span></span><br><span class="line">            if (obj.addEventListener) &#123;</span><br><span class="line"><span class="actionscript">                obj.addEventListener(eventstr, callback, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                obj.attachEvent(<span class="string">"on"</span> + eventstr, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    callback.call(obj);<span class="comment">//在匿名函数中调用回调函数</span></span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>javascript</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>JS(2)</title>
    <url>/2020/07/10/JS-2/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Math可直接使用，不是构造函数，是一个工具类</span><br><span class="line">Math.ceil()向上取整，Math.floor()向下取整</span><br><span class="line">Math.random()*10随机数0-10</span><br><span class="line">Math.max(a,b,c);</span><br><span class="line">Math.pow(x,y);x^y,sqrt()</span><br><span class="line">包装类：</span><br><span class="line">可以将基本数据类型转换为对象，</span><br><span class="line">String()、Number()、Boolean()不直接调用使用toString()等来临时调用即可</span><br><span class="line">var num&#x3D;new Number(2);</span><br><span class="line">字符串方法：</span><br><span class="line">a&#x3D;str.charAt(0);返回字符串中指定位置的字符</span><br><span class="line">a&#x3D;str.charCodeAt(1);获取指定位置字符的编码</span><br><span class="line">a&#x3D;String.fromcharCode(20015);根据字符编码获取字符</span><br><span class="line">a&#x3D;str.concat(&quot;a&quot;,&quot;b&quot;);</span><br><span class="line">a&#x3D;str.indexOf(&quot;h&quot;);检索字符串汇总是否含有指定内容，若存在该内容，返回第一次出现的索引。可指定第二个参数（开始查找的位置）。lastindexOO(&quot;h&quot;)字后向前查找。</span><br><span class="line">slice(0,2)开始位置（包括）、结束位置（不含，可为负数，可省略）</span><br><span class="line">substring(1,2);同上，使用负数默认为0，自动调整位置，前小后大</span><br><span class="line">substr(1,2);开始位置（包括）、截取长度</span><br><span class="line">split(&quot;,&quot;)拆分字符串为数组</span><br><span class="line">toUpperCase();将字符串转换为大写、toLowerCase();将字符串转换为小写</span><br><span class="line">均不会影响原字符串</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">正则表达式：</span><br><span class="line">用于定义一些字符串的规则，可以根据这些规则检查字符串是否符合，并将其提取出来</span><br><span class="line">var reg&#x3D;new regExp(&quot;正则表达式&quot;,&quot;匹配模式&quot;);这种方法较为灵活，可设置形参便于使用</span><br><span class="line">var reg&#x3D;new regExp(&quot;a&quot;);检查字符串中是否含有a</span><br><span class="line">var str&#x3D;&quot;a&quot;;</span><br><span class="line">var re&#x3D;reg.test(str);可以传递一个匹配模式作为第二个参数，i-忽略大小写，g全局匹配模式。</span><br><span class="line">可以使用字面量创建正则表达式，reg&#x3D;&#x2F;a&#x2F;i;正则表达式、匹配模式。</span><br><span class="line">reg.test(&quot;abc&quot;);reg&#x3D;&#x2F;a|b|c&#x2F;;或。也可使用reg&#x3D;&#x2F;[abcd]&#x2F;;reg&#x3D;&#x2F;[a-z]&#x2F;;也可设置正则表达式。reg&#x3D;&#x2F;[A-z]&#x2F;;表示任意字母。reg&#x3D;&#x2F;a[bde]c&#x2F;;</span><br><span class="line">reg&#x3D;&#x2F;[^ab]&#x2F;;除了ab都可以</span><br><span class="line">string结合正则表达式：result&#x3D;str.search(&#x2F;a[bcd]c&#x2F;);存在则返回第一次出现索引，否则返回-1</span><br><span class="line">str.match(&#x2F;[A-z]&#x2F;g);将一个字符串中符合条件的内容提取出来，可设置全局，将所有符合条件的都提取出来，可同时设置ig。会将返回的数据保存到数组中。</span><br><span class="line">str.replace(&quot;&#x2F;a&#x2F;gi&quot;,&quot;bbb&quot;);原字符串、替换字符串</span><br><span class="line">通过量词设置一个内容出现的次数，var reg&#x3D;&#x2F;a&#123;3&#125;&#x2F;;量词只对前面的内容起作用。var reg&#x3D;&#x2F;a&#123;1,3&#125;&#x2F;;出现1-3次。var reg&#x3D;&#x2F;a&#123;3,&#125;&#x2F;;出现三次以上。</span><br><span class="line">var reg&#x3D;&#x2F;ab+c&#x2F;;至少一个b。</span><br><span class="line">var reg&#x3D;&#x2F;a*b&#x2F;;0或多个a。</span><br><span class="line">var reg&#x3D;&#x2F;a?b&#x2F;;0或1个a。</span><br><span class="line">var reg&#x3D;&#x2F;^a&#x2F;;是否以a开头</span><br><span class="line">var reg&#x3D;&#x2F;a$&#x2F;;结尾是否是a</span><br><span class="line">var reg&#x3D;&#x2F;^a|a$&#x2F;;</span><br><span class="line">var phone&#x3D;&#x2F;^1[3-9][0-9]&#123;9&#125;&#x2F;;设置第一位、二位、三位、最后9位的取值范围</span><br><span class="line">var reg&#x3D;&#x2F;\.&#x2F;;使用.需要转义字符。reg&#x3D;new RegExp(&quot;\\.&quot;);构造函数中使用\\</span><br><span class="line">\w-任意字母、数字、_；\W-除了以上；\d-任意数字；\D-除了数字；\s-空格；\S-除了；\b-单词；&#x2F;\bchild\b&#x2F;;是否含有单词child,必须是独立的单词。\B-不含有</span><br><span class="line">str&#x3D;str.replace(&#x2F;^\s*|\s*$&#x2F;g,&quot;&quot;)去除开头结尾空格</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DOM：通过js操纵网页</span><br><span class="line">文档对象模型，节点-构成HTML文档最基本的内容。文档节点、元素节点、属性节点、文本节点。</span><br><span class="line">btn.onclick&#x3D;function()&#123;</span><br><span class="line">alert(&quot;点一下&quot;);</span><br><span class="line">&#125;</span><br><span class="line">btn.ondblclick&#x3D;function()&#123;</span><br><span class="line">alert(&quot;点两下&quot;);</span><br><span class="line">&#125;</span><br><span class="line">btn.onmousemove&#x3D;function()&#123;</span><br><span class="line">alert(&quot;mouse触发&quot;);</span><br><span class="line">&#125;</span><br><span class="line">节点属性：nodeName、nodeType、nodeValue</span><br><span class="line">通过document对象调用</span><br><span class="line">document.getElementById()通过id属性获取一个元素节点对象</span><br><span class="line">document.getElementsTagName()通过标签名获取一组元素节点对象</span><br><span class="line">document.getElementsByName()通过name属性获取一组元素节点对象</span><br><span class="line">通过具体元素节点调用</span><br><span class="line">a.getElementById()</span><br><span class="line">a.childNodes</span><br><span class="line">a.children</span><br><span class="line">a.firstChild</span><br><span class="line">a.firstElementChild</span><br><span class="line">a.lastChild</span><br><span class="line">a.lastElementChild</span><br><span class="line">a.previous(next)Sibling</span><br><span class="line">a.previous(next)ElementSibling</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// idstr表示点击函数的对象的id属性 fun表示绑定的函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">myclick</span><span class="params">(idstr,fun)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn01 = <span class="built_in">document</span>.getElementById(idstr);</span></span><br><span class="line">            btn01.onclick = fun;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn01"</span>,<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line">                alert(bj.innerHTML);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn02"</span>,<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 根据标签名来获取一组元素节点对象，会返回一个类数组对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    alert(lis[i].innerHTML); <span class="comment">// innerHTML用于获取元素内部的html代码</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn03"</span>,<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByName(<span class="string">"gender"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputs.length; i++) &#123;</span></span><br><span class="line">                    alert(inputs[i].value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn04"</span>,<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>).getElementsByTagName(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; city.length; i++) &#123;</span></span><br><span class="line">                    alert(city[i].innerHTML);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn05"</span>,<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> cns = city.childNodes;<span class="comment">//所有子节点</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// alert(cns.length);//dom中空白也会被当成文本节点</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> cns2 = city.children;<span class="comment">//所有子元素（标签）</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cns2.length; i++) &#123;</span></span><br><span class="line">                    alert(cns2[i].innerHTML);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn06"</span>,<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> phone = <span class="built_in">document</span>.getElementById(<span class="string">"phone"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> fir = phone.firstChild;<span class="comment">//第一个子节点，包括空白文本</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> fir2 = phone.lastChild;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> fir1 = phone.firstElementChild;<span class="comment">//第一个子元素，兼容性不好</span></span></span><br><span class="line">                alert(fir1.innerText);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn07"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> pre=bj.parentNode;<span class="comment">//父节点，元素</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// alert(pre.innerHTML);</span></span></span><br><span class="line"><span class="actionscript">                alert(pre.innerText);<span class="comment">//可去除标签</span></span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn08"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> an= <span class="built_in">document</span>.getElementById(<span class="string">"android"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ps=an.previousSibling;<span class="comment">//前一个兄弟节点,会获取空白</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ps1=an.previousElementSibling;<span class="comment">//前一个兄弟元素</span></span></span><br><span class="line">                alert(ps1);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn09"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> un = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>);</span></span><br><span class="line">                alert(un.value);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn10"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> un = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>);</span></span><br><span class="line"><span class="actionscript">                un.value=<span class="string">"ABCDE"</span>;</span></span><br><span class="line">                alert(un.value);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn11"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// alert(bj.innerHTML);</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 可以通过孩子获取其元素的文本</span></span></span><br><span class="line">                alert(bj.firstChild.nodeValue);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.all</span> &#123;</span></span><br><span class="line">            display: flex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        li &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            border: 1px solid firebrick;</span><br><span class="line">            line-height: 40px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            margin-left: 20px;</span><br><span class="line">            border: 1px solid royalblue;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        button &#123;</span><br><span class="line">            width: 150px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">            background-color: rebeccapurple;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            border-radius: 5px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">            margin-top: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line">            margin-left: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"total"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>城市选择<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"bj"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>单机游戏<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"game"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"rl"</span>&gt;</span>地下城<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>联盟<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>cf<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>cs<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>操作系统<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"phone"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>IOS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"android"</span>&gt;</span>ANDROID<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>WINDOWS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">                gender:</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span> /&gt;</span></span><br><span class="line">                male</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span> /&gt;</span></span><br><span class="line">                female</span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                name:</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"abcde"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"btnlist"</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn01"</span>&gt;</span>查找bj节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn02"</span>&gt;</span>查找所有lj节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn03"</span>&gt;</span>查找name=gender的节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn04"</span>&gt;</span>查找city下所有li节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn05"</span>&gt;</span>查找city所有子节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn06"</span>&gt;</span>查找phone的第一个子节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn07"</span>&gt;</span>查找bj的父节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn08"</span>&gt;</span>查找android的前一个兄弟节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn09"</span>&gt;</span>返回username的value属性值<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn10"</span>&gt;</span>设置username的value属性值<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn11"</span>&gt;</span>返回bj的文本值<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="symbol">&amp;#9760;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 选择框 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">myclick</span><span class="params">(idstr, fun)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn01 = <span class="built_in">document</span>.getElementById(idstr);</span></span><br><span class="line">            btn01.onclick = fun;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> checkedAllbox = <span class="built_in">document</span>.getElementById(<span class="string">"checkedAllbox"</span>);<span class="comment">//获取全/不选多选框</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> items = <span class="built_in">document</span>.getElementsByName(<span class="string">"items"</span>);<span class="comment">//获取items选择框</span></span></span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"checkedallbtn"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var items = document.getElementsByName("items");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    items[i].checked = <span class="literal">true</span>;<span class="comment">//通过checked来决定选中与否，true、false</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                checkedAllbox.checked = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"checkednobtn"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    items[i].checked = <span class="literal">false</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                checkedAllbox.checked = <span class="literal">false</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"checkedrevbtn"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                checkedAllbox.checked = <span class="literal">true</span>;<span class="comment">//可提前设置为true当未选中时再false</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span></span><br><span class="line">                    items[i].checked = !items[i].checked;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 当反选时需要改变全/不选多选框</span></span></span><br><span class="line">                    if (!items[i].checked) &#123;</span><br><span class="line"><span class="actionscript">                        checkedAllbox.checked = <span class="literal">false</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"sendbtn"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span></span><br><span class="line">                    if (items[i].checked) &#123;</span><br><span class="line">                        alert(items[i].value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">// var checkedAllbox=document.getElementById("checkedAllbox");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// checkedAllbox.onclick=function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"checkedAllbox"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// items[i].checked = document.getElementById("checkedAllbox").checked;</span></span></span><br><span class="line"><span class="actionscript">                    items[i].checked = <span class="keyword">this</span>.checked;<span class="comment">//即调用此方法的对象</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">// 为多选框分别绑定响应函数以便根据其来改变 全选/全不选的选择与否</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                items[i].onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    checkedAllbox.checked = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; items.length; j++) &#123;</span></span><br><span class="line">                        if (!items[j].checked) &#123;</span><br><span class="line"><span class="actionscript">                            checkedAllbox.checked = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">                            <span class="keyword">break</span>;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        button &#123;</span><br><span class="line">            width: 60px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            border: 1px solid firebrick;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        爱好的运动<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"checkedAllbox"</span> /&gt;</span>全选/全不选</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">value</span>=<span class="string">"足球"</span>&gt;</span>足球</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">value</span>=<span class="string">"篮球"</span>&gt;</span>蓝球</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">value</span>=<span class="string">"羽毛球"</span>&gt;</span>羽毛球</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">value</span>=<span class="string">"乒乓球"</span>&gt;</span>乒乓球</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"checkedallbtn"</span> <span class="attr">value</span>=<span class="string">"全选"</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"checkednobtn"</span> <span class="attr">value</span>=<span class="string">"全不选"</span>&gt;</span>全不选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"checkedrevbtn"</span> <span class="attr">value</span>=<span class="string">"反选"</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"sendbtn"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取body,document.body</span><br><span class="line">获取html,document.documentElement;</span><br><span class="line">获取页面中所有元素document.all</span><br><span class="line">根据元素的class的属性值查询一族元素节点对象</span><br><span class="line">var box1&#x3D;document.getElementsByClassName(&quot;box1&quot;);兼容性不强，IE8及以下不兼容</span><br><span class="line">需要一个选择器的字符串作为参数，可以提供一个css选择器来查询元素节点对象</span><br><span class="line">var div&#x3D;document.querySelector(&quot;.box1 div&quot;);可以兼容IE8。该方法总会返回唯一的元素，满足条件有多个只会返回第一个。</span><br><span class="line">var div&#x3D;document.querySelectorAll(&quot;.box1&quot;);可以将符合条件的元素获取到数组中（不论符合有几个）</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- dom增删改 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// idstr表示点击函数的对象的id属性 fun表示绑定的函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">myclick</span><span class="params">(idstr, fun)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn01 = <span class="built_in">document</span>.getElementById(idstr);</span></span><br><span class="line">            btn01.onclick = fun;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn01"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);<span class="comment">//创建一个元素节点对象，需要一个标签名作为参数，将会根据该标签名创建元素节点对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">"广州"</span>);<span class="comment">//创建一个文本对象</span></span></span><br><span class="line"><span class="actionscript">                li.appendChild(text);<span class="comment">//向父节点中添加一个子节点</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);<span class="comment">//获取city</span></span></span><br><span class="line">                city.appendChild(li);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn02"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);<span class="comment">//创建一个元素节点对象，需要一个标签名作为参数，将会根据该标签名创建元素节点对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">"广州"</span>);<span class="comment">//创建一个文本对象</span></span></span><br><span class="line"><span class="actionscript">                li.appendChild(text);<span class="comment">//向父节点中添加一个子节点</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span></span><br><span class="line">                city.insertBefore(li, bj);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn03"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);<span class="comment">//创建一个元素节点对象，需要一个标签名作为参数，将会根据该标签名创建元素节点对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">"广州"</span>);<span class="comment">//创建一个文本对象</span></span></span><br><span class="line"><span class="actionscript">                li.appendChild(text);<span class="comment">//向父节点中添加一个子节点</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span></span><br><span class="line">                city.replaceChild(li, bj);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn04"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// var city=document.getElementById("city");</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// city.removeChild(bj);</span></span></span><br><span class="line"><span class="actionscript">                bj.parentNode.removeChild(bj);<span class="comment">//二者都可</span></span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn05"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span></span><br><span class="line">                alert(city.innerHTML);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn06"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bj = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);</span></span><br><span class="line"><span class="actionscript">                bj.innerHTML = <span class="string">"南京"</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            myclick(<span class="string">"btn07"</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">                // city.innerHTML += "<span class="tag">&lt;<span class="name">li</span>&gt;</span>南京<span class="tag">&lt;/<span class="name">li</span>&gt;</span>"; // 会影响全局</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);<span class="comment">//创建一个元素节点对象，需要一个标签名作为参数，将会根据该标签名创建元素节点对象</span></span></span><br><span class="line"><span class="actionscript">                li.innerHTML=<span class="string">"南京"</span>;</span></span><br><span class="line">                city.appendChild(li);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.all</span> &#123;</span></span><br><span class="line">            display: flex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#total</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            border: 1px solid turquoise;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        li &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            background-color: aqua;</span><br><span class="line">            width: 80px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            border: 1px solid firebrick;</span><br><span class="line">            line-height: 40px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            margin: 20px 0 0 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line">            margin-left: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        button &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            border: 1px solid firebrick;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"total"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>城市选择<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"bj"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"btnlist"</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn01"</span>&gt;</span>创建一个广州节点，添加到city中<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn02"</span>&gt;</span>将广州节点插入到bj节点前<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn03"</span>&gt;</span>将广州节点替换bj节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn04"</span>&gt;</span>删除bj节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn05"</span>&gt;</span>读取city内的html代码<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn06"</span>&gt;</span>设置bj内的html代码<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn07"</span>&gt;</span>add<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- dom增删改 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">del</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> tr = <span class="keyword">this</span>.parentNode.parentNode;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> name = tr.getElementsByTagName(<span class="string">"td"</span>)[<span class="number">0</span>].innerHTML;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> name1 = tr.children[<span class="number">0</span>].innerHTML;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> flag = confirm(<span class="string">"确认删除"</span> + name1 + <span class="string">"否？"</span>);<span class="comment">//给出选择按钮</span></span></span><br><span class="line">            if (flag) &#123;</span><br><span class="line">                tr.parentNode.removeChild(tr);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//避免超链接跳转</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> a = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);<span class="comment">//获取所有超链接</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span></span><br><span class="line">                a[i].onclick = del;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> addEmpButton = <span class="built_in">document</span>.getElementById(<span class="string">"addEmpButton"</span>);</span></span><br><span class="line"><span class="actionscript">            addEmpButton.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> name = <span class="built_in">document</span>.getElementById(<span class="string">"empName"</span>).value;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> email = <span class="built_in">document</span>.getElementById(<span class="string">"email"</span>).value;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> salary = <span class="built_in">document</span>.getElementById(<span class="string">"salary"</span>).value;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (name != <span class="string">""</span> &amp;&amp; email != <span class="string">""</span>&amp;&amp;salary != <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">"tr"</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> nametd = <span class="built_in">document</span>.createElement(<span class="string">"td"</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> emailtd = <span class="built_in">document</span>.createElement(<span class="string">"td"</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> salarytd = <span class="built_in">document</span>.createElement(<span class="string">"td"</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> atd = <span class="built_in">document</span>.createElement(<span class="string">"atd"</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</span></span><br><span class="line">                    nametd.innerHTML = name;</span><br><span class="line">                    emailtd.innerHTML = email;</span><br><span class="line">                    salarytd.innerHTML = salary;</span><br><span class="line"><span class="actionscript">                    a.innerHTML = <span class="string">"Delete"</span>;</span></span><br><span class="line">                    atd.appendChild(a);</span><br><span class="line">                    tr.appendChild(nametd);</span><br><span class="line">                    tr.appendChild(emailtd);</span><br><span class="line">                    tr.appendChild(salarytd);</span><br><span class="line">                    tr.appendChild(atd);</span><br><span class="line"><span class="actionscript">                    a.href = <span class="string">"javascript:;"</span>;</span></span><br><span class="line">                    a.onclick = del;</span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> employeetable = <span class="built_in">document</span>.getElementById(<span class="string">"employeetable"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> tbody = employeetable.getElementsByTagName(<span class="string">"tbody"</span>)[<span class="number">0</span>];</span></span><br><span class="line">                    tbody.appendChild(tr);</span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.getElementById(<span class="string">"empName"</span>).value = <span class="string">""</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.getElementById(<span class="string">"email"</span>).value = <span class="string">""</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.getElementById(<span class="string">"salary"</span>).value = <span class="string">""</span>;</span></span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"NULL"</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#employeetable</span> &#123;</span></span><br><span class="line">            width: 700px;</span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#formDiv</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            border: 1px solid tomato;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#employeetable</span> <span class="selector-tag">td</span> &#123;</span></span><br><span class="line">            border: 1px solid gold;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#employeetable</span> <span class="selector-tag">tr</span> &#123;</span></span><br><span class="line">            height: 30px;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        button &#123;</span><br><span class="line">            background-color: brown;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"employeetable"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Salary<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>&amp;nbsp<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tom<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tom@Tom.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>5000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">" deleteEmp?id=001"</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Make<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Make@Make.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>6000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">" deleteEmp?id=002"</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jim<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jim@Jim.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>7000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">" deleteEmp?id=003"</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"formDiv"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>ADD PERSON<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"word"</span>&gt;</span>name:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"inp"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">id</span>=<span class="string">"empName"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"word"</span>&gt;</span>email:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"inp"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"word"</span>&gt;</span>salary:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"inp"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"salary"</span> <span class="attr">id</span>=<span class="string">"salary"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"addEmpButton"</span>&gt;</span></span><br><span class="line">                        submit</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web</category>
        <category>javascript</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>JS(1)</title>
    <url>/2020/07/10/JS-1/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert(&quot;error&quot;);控制浏览器弹出一个警告框</span><br><span class="line">document.write(&quot;hello&quot;)页面中输出一个内容</span><br><span class="line">console.log(&quot;word&quot;)控制台输出内容</span><br><span class="line">script一旦引入外部文件就不能编写代码，若需要则需要重新创建一个script标签来编写。</span><br><span class="line">字面量：可以直接输出使用，使用变量来保存字面量。var a&#x3D;123;</span><br><span class="line">数据类型：string(字符串)、number(数值)、boolean(布尔值)、null(空值)、undefined(未定义)、object(对象)。</span><br><span class="line">字符串，单双引号嵌套使用需要分开，可以使用\转义字符。</span><br><span class="line">console.log(typeof a);检查一个变量类型</span><br><span class="line">js中表示数字最大值，Number.MAX_VALUE。若表示的数字超过最大值则返回一个Infinity&#x2F;-Infinity字面量</span><br><span class="line">NAN(不是一个数字)类型是一个number。不要使用js对精确度要求较高的运算。</span><br><span class="line">转换为String:</span><br><span class="line">调用方法，var a&#x3D;123;a&#x3D;a.toString();不影响原变量。null、undefined无该方法。</span><br><span class="line">调用函数，a&#x3D;String(a);null、undefined类型会直接变为字面量。</span><br><span class="line">转换为Number:</span><br><span class="line">调用函数,var b&#x3D;&quot;234&quot;;var c&#x3D;Number(b)。&quot;abc&quot;等字符串转换成NaN，若字符串是空串转换为0</span><br><span class="line">boolean值true-1、false-0。undefined-NaN。</span><br><span class="line">parseInt()将一个字符串转换为Number，将串中有效的整数提取出来、parseFloat()提取有效的小数。非字符串使用会先转换成字符串再进行。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进制：</span><br><span class="line">16进制，a&#x3D;0x10。8进制，01。</span><br><span class="line">var a&#x3D;&quot;040&quot; a&#x3D;parseInt(a,10)指定转换的进制。</span><br><span class="line">转换为boolean()，Boolean(a)</span><br><span class="line">数字转为boolean，除0、NaN之外都是true</span><br><span class="line">字符串转为boolean，除空串之外都是true</span><br><span class="line">null、undefined都转换为false</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">运算符：</span><br><span class="line">typeof运算符对每一个值的类型以string返回。</span><br><span class="line">任何值与NaN运算都是NaN,可以使用+对数字运算，对字符串连接。</span><br><span class="line">任何值与字符串做加法运算都会转换成字符串，可用于将任意类型转换为string。a+&quot;&quot;</span><br><span class="line">-、*对两个值做减、乘法运算，都转换为Number后运算。可借用此类特性将其他数据类型转换为Number。a-0</span><br><span class="line">result&#x3D;9%3;result&#x3D;0</span><br><span class="line">unicode编码表的使用，在script中直接\u2620，在body中则需要转换到十进制2620-&gt;9760,&lt;h1&gt;&amp;#9760;&lt;h1&gt;即可。</span><br><span class="line">&#x3D;&#x3D;&#x2F;!&#x3D;使用时会自动类型转换来比较&quot;123&quot;&#x3D;&#x3D;123,当使用&#x3D;&#x3D;&#x3D;&#x2F;!&#x3D;&#x3D;则不会自动类型转换。</span><br><span class="line">max c&#x3D;a&gt;b?a:b,若是非布尔值会自动转换。</span><br><span class="line">var score&#x3D;prompt(&quot;输入一个数据&quot;)生成一个提示框可以进行输入,并可将数据赋值给一个变量使用</span><br><span class="line">console.time(&quot;T&quot;);console.timeEnd(&quot;T&quot;);计时器</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">object(对象):</span><br><span class="line">一种复合的数据类型，在对象中可以保存多个不同数据类型属性</span><br><span class="line">对象分类，1）内建对象，基本数据类型都是、ES标准中定义的对象2）宿主对象，JS运行环境提供的对象（BOM、DOM）3）自定义对象，开发人员自定义的对象</span><br><span class="line">创建对象，var obj&#x3D;new Object();obj.name&#x3D;&quot;李华&quot;;delete obj.name;</span><br><span class="line">obj[&quot;123&quot;]&#x3D;&quot;李华&quot;;此时使用特殊属性名来存储。[]中可填写任意的值。可以使用变量来查询值，var n&#x3D;&quot;123&quot;;console.log(obj[n]);</span><br><span class="line">对象的属性值可以是任意类型，可以是一个对象var obj2&#x3D;new Object();obj2.name&#x3D;&quot;A&quot;;obj.score&#x3D;obj2;</span><br><span class="line">检查一个对象中是否含有某个属性，console.log(&quot;score&quot; in obj2)</span><br><span class="line">注意，基本数据类型保存在栈中变量与值相对应，对象则存储在堆内存中，再结合栈来指定其值</span><br><span class="line">两个对象相比较比较内存地址，基本数据类型是比较值。</span><br><span class="line">可以使用对象字面量来创建对象var obj&#x3D;&#123;&#125;;obj.name&#x3D;&quot;李华&quot;;可直接指定对象中的属性</span><br><span class="line">var obj&#x3D;&#123;</span><br><span class="line">name:&quot;李华&quot;,</span><br><span class="line">age:22,</span><br><span class="line">city:&quot;信阳&quot;&#125;;若使用属性名过于特殊也可添加&quot;&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">函数对象：</span><br><span class="line">函数声明创建函数，function fun(a,b)&#123;console.log(&quot;hello&quot;);alert(&quot;word&quot;);&#125;,封装到函数中的代码不会立即执行，调用时执行。fun();调用。传入多余参数不会赋值。若少参数则会定义为undefined</span><br><span class="line">函数表达式创建函数，var fun&#x3D;function(a,b)&#123;&#125;</span><br><span class="line">立即执行函数(function(a,b)&#123;&#125;)(123,456);</span><br><span class="line">将一个函数作为对象的属性保存即方法</span><br><span class="line">查看对象中属性的数量，for(var n in obj)&#123;console.log(&quot;属性名&quot;+n);console.log(&quot;属性值&quot;+obj[n]);&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在全局作用域中存在一个全局对象window,代表浏览器窗口，由浏览器创建我们可以直接使用，全局作用域中创建的变量都会作为window对象的属性保存、创建的函数都会作为window对象的方法保存。</span><br><span class="line">所有var声明的变量都会在代码执行前被声明（但不会被赋值），若不使用var则不会提前声明。</span><br><span class="line">使用函数声明创建的函数会在所有代码执行前创建，可以提前调用。使用函数表达式创建的函数不会提前声明，即不能在声明前调用。</span><br><span class="line">函数作用域中变量的值如果找不到局部的参数就去父函数中寻找，依次查询。函数作用域中也可以提前声明（不会被赋值），函数表达式也类似全局中的调用。</span><br><span class="line">在函数中不使用var声明的变量都是全局变量，在函数中定义形参就相当于var声明了变量（局部变量）</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">解析器在调用函数每次都会想函数内部传递一个隐含的参数，这个参数为this指向一个对象（上下文对象）</span><br><span class="line">执行上下文，其实就是在执行代码之前将数据预处理，全局上下文是将变量、function函数、this都是window的属性。而函数上下文(调用时产生)this为调用函数的对象、var，形参变量都为执行上下文的属性、function为上下文方法。</span><br><span class="line">执行上下文可以解释变量、函数提前调用的情况。</span><br><span class="line">以函数形式调用时，this永远都是window。以方法形式调用时，this是调用方法的那个对象。</span><br><span class="line">构造函数：每使用一种构造函数创建的对象都属于一个类。</span><br><span class="line">Person.prototype.sayname&#x3D;function()&#123;alert(this.name);&#125;</span><br><span class="line">function Person(name,age,gender)&#123;</span><br><span class="line">this.name&#x3D;name;</span><br><span class="line">this.age&#x3D;age;</span><br><span class="line">this.gender&#x3D;gender;</span><br><span class="line">this.sayname&#x3D;fun;</span><br><span class="line">&#125;</span><br><span class="line">var per&#x3D;new Person(&quot;李华&quot;,22,&quot;女&quot;);</span><br><span class="line">per.sayname();</span><br><span class="line">可以使用instanceof检查一个对象是否是一个类的实例,所有对象都是Object的后代</span><br><span class="line">console.log(per instanceof Person);</span><br><span class="line">每执行构造一次函数就需要创建一个sayname方法,可直接调用全局函数（可以改进）</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原型对象</span><br><span class="line">相当于一个公共的区域，所有同一个类的实例都可以访问到这个原型对象。可以将对象共有的内容，同一设置到原型对象中，当访问对象中的一个属性或方法时，会现在自身寻找有则直接使用，否则去原型对象中寻找使用。</span><br><span class="line">prototype，显示原型对象，定义函数时自动添加，默认是一个空的object对象</span><br><span class="line">_proto_，隐式原型对象，创建对象时自动添加，默认为构造函数的prototype属性</span><br><span class="line">对象的隐式原型的值与其构造函数的显示原型的值相对应，Myclass.prototype&#x3D;&#x3D;&#x3D;c._proto_</span><br><span class="line">读取对象的属性值会自动到原型链中查找(_proto_)，设置对象属性不会查找原型链，若当前对象没有则直接添加该属性。</span><br><span class="line">方法一般定义在原型中，属性通过构造函数定义在对象本身上(Myclass.prototype.sayname)</span><br><span class="line">function Myclass()&#123;&#125;</span><br><span class="line">Myclass.prototype.a&#x3D;123;</span><br><span class="line">Myclass.prototype.sayname&#x3D;function()&#123;alert(this.name);&#125;</span><br><span class="line">var c&#x3D;new Myclass();</span><br><span class="line">c.sayname();</span><br><span class="line">console.log(c.a);</span><br><span class="line">c.hasOwnProperty(&quot;sayname&quot;)检查对象自身是否含有某个属性。</span><br><span class="line">c._proto_._proto_.hasOwnProperty(&quot;hasOwnProperty&quot;)查看原型中函数是否存在</span><br><span class="line">console.log(per);直接打印一个对象，实际上是输出对象的toString()方法的返回值，可以对该对象的toString()方法修改，Myclass.prototype.toString&#x3D;function()&#123;return &quot;Myclass[name&#x3D;]&quot;+this.name;&#125;修改原型的toSting即可对所有该类的都修改</span><br><span class="line">将不再使用的对象设置为null。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数组：</span><br><span class="line">var array&#x3D;new Array();</span><br><span class="line">push()、pop()、unshift()向数组开头添加一个或多个元素、shift删除第一个元素并可以返回</span><br><span class="line">可以使用for循环来遍历数组，也可以使用forEach</span><br><span class="line">arr.forEach(function(value,index,obj))value：当前遍历的元素、index：当前元素的索引、obj：当前遍历的数组。</span><br><span class="line">var a&#x3D;arr.slice(start,end)从某个数组中提取出指定元素，包含开始不包含结束，可省略end取start及其之后的元素。end也可使用负值。var b&#x3D;arr.splice(开始的索引,删除的数量,&quot;第三个及以后可以传递新的元素自动插入开始索引前面&quot;)删除原数组元素并其添加新元素。会对原数组产生影响</span><br><span class="line">a.concat(b,&quot;a&quot;,&quot;b&quot;);连接多个数组。不会对原数组影响</span><br><span class="line">result&#x3D;arr.join(&quot;-&quot;);将数组转换为字符串，不会对原数组影响,可指定连接符。默认为,连接。</span><br><span class="line">arr.reverse();反转，对原数组影响</span><br><span class="line">arr.sort();对原数组元素排序，按照unicode编码排序，对原数组产生影响。可指定排序规则</span><br><span class="line">arr&#x3D;[1,2,3];arr.sort(function(a,b)&#123;</span><br><span class="line">return a-b;降序</span><br><span class="line">&#125;);根据返回值来改变顺序,return 1改变，-1、0不改变</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">call、apply都是函数对象的方法，需要函数对象来调用。可以将一个对象指定为第一个参数，此时这个对象将会成为函数执行时的this。call可以将实参在对象之后依次传递，apply则需要将实参封装到一个数组中统一传递。</span><br><span class="line">调用函数时，浏览器每次都会传递两个隐含的参数，1函数的上下文对象this2封装实参的对象arguments（类数组对象，通过索引来操作数据，可获取实参长度）function fun()&#123;console.log(arguments.length&#x2F;arguments[1]);&#125;fun(&quot;a&quot;,1);不定义形参可以使用</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">date：</span><br><span class="line">var d&#x3D;new Date(&quot;12&#x2F;13&#x2F;2020 12:12:12&quot;);</span><br><span class="line">getDate();获取当前是几日</span><br><span class="line">getDay();周几，返回0-6的值</span><br><span class="line">getMonth&#x2F;Hours&#x2F;Minutes&#x2F;Seconds();月份，0-11</span><br><span class="line">getFullYear();年份</span><br><span class="line">getTime();时间戳，毫秒</span><br><span class="line">time&#x3D;Date.now();当前执行时的时间戳</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>javascript</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5(4)</title>
    <url>/2020/07/09/HTML5-4/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">响应式布局：</span><br><span class="line">即媒体查询，在不同设备或不同状态分别设置样式。</span><br><span class="line">语法@media all,print&#123;&#125;，查询规则&#123;&#125;,媒体类型，all所有设备、print打印设备、screen带屏幕的设备、speech屏幕阅读器。可添加一个only来兼容老版本的浏览器。</span><br><span class="line">媒体特性：</span><br><span class="line">device-width:设备独立像素</span><br><span class="line">width视口宽度、height视口高度</span><br><span class="line">@media (width:500px)&#123;body&#123;background:#fff&#125;&#125;当视口宽度为500px生效。一般只是考虑宽度,一般使用一个范围来改变@medio (min&#x2F;max-width:500px)&#123;body&#123;background:#fff&#125;&#125;大于&#x2F;小于指定宽度生效。</span><br><span class="line">一般比较常用的端点，&lt;768最小屏幕max-width&#x3D;768px、&gt;768小屏幕min-width&#x3D;768px、&gt;992中屏幕min-width&#x3D;992px、&gt;1200大屏幕max-width&#x3D;1200px</span><br><span class="line">@media (min-width:500px) and (max-width:800px)&#123;body&#123;background:#fff&#125;&#125;设置范围生效</span><br></pre></td></tr></table></figure>

<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.A</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">324px</span>;</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="string">"https://corp-static.meitu.com/corp-new/060b7688371a2d487f9ddab39d6f32c5_1587361557.jpg"</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-bar</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left-menu</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        <span class="selector-class">.nav</span>&#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.nav</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="comment">// background-color: #fff;</span></span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="selector-tag">a</span>&#123;</span><br><span class="line">                <span class="attribute">display</span>: block;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">                <span class="attribute">line-height</span>: <span class="number">64px</span>;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">                <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.menu-icon</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">transform-origin</span>: left center;</span><br><span class="line">            <span class="attribute">transition</span>: <span class="number">0.1s</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">li</span>:nth-child(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">18px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">li</span>:nth-child(<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">24px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">li</span>:nth-child(<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">li</span>:nth-child(<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">// 向下旋转</span></span><br><span class="line">                <span class="attribute">transform</span>: rotateZ(<span class="number">50deg</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">li</span>:nth-child(<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="comment">// 隐藏</span></span><br><span class="line">                <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">li</span>:nth-child(<span class="number">3</span>)&#123;</span><br><span class="line">                <span class="attribute">transform</span>: rotateZ(-<span class="number">50deg</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> only screen&#123;</span><br><span class="line">    <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">1055px</span>)&#123;</span><br><span class="line">        <span class="selector-class">.left-menu</span>&#123;</span><br><span class="line">            <span class="attribute">order</span>: <span class="number">2</span>;</span><br><span class="line">            <span class="attribute">flex</span>: auto;</span><br><span class="line">            <span class="selector-class">.menu-icon</span>&#123;</span><br><span class="line">                <span class="comment">// 改变视图来隐藏目录图标</span></span><br><span class="line">                <span class="attribute">display</span>: none;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-class">.nav</span>&#123;</span><br><span class="line">                <span class="comment">// 显示目录列表，并将其横向排列</span></span><br><span class="line">                <span class="comment">// display: block;</span></span><br><span class="line">                <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">100px</span>;</span><br><span class="line">                <span class="attribute">display</span>: flex;</span><br><span class="line">                <span class="comment">// 清除top等定位</span></span><br><span class="line">                <span class="attribute">position</span>: static;</span><br><span class="line">                <span class="comment">// justify-content: space-around;</span></span><br><span class="line">                <span class="selector-tag">li</span>&#123;</span><br><span class="line">                    <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">                    <span class="comment">// width: auto;</span></span><br><span class="line">                    <span class="selector-tag">a</span>&#123;</span><br><span class="line">                        <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">                    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">                    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">                    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">                    <span class="attribute">position</span>: absolute;</span><br><span class="line">                    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">                    <span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.logo</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">            <span class="attribute">order</span>:<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.user-info</span>&#123;</span><br><span class="line">            <span class="attribute">order</span>: <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./MT.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>MT<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://img.app.meitudata.com/corp-new/image/logo-white.@f94af395.png --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://corp-static.meitu.com/corp-new/060b7688371a2d487f9ddab39d6f32c5_1587361557.jpg --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"A"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top-bar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"menu-icon"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>简介<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>业务<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>人才<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>社会责任<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>合作案例<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>投资者<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>媒体<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;h1&gt;</span></span><br><span class="line"><span class="comment">                &lt;a class="logo" href="#"&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="comment">            &lt;/h1&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"background-size: cover; color: #fff; height: 20px;"</span> <span class="attr">src</span>=<span class="string">"https://img.app.meitudata.com/corp-new/image/logo-white.@f94af395.png"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//小米</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,user-scalable=no,maximum-scale=1.0,minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">content</span>=<span class="string">"小米官网直营小米公司旗下所有产品，包括小米手机系列小米10 Pro 、小米9、小米MIX Alpha，Redmi 红米系列Redmi 10X、Redmi K30，小米电视、笔记本、米家智能家居等，同时提供小米客户服务及售后支持."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"小米,redmi,小米10,Redmi 10X,小米MIX Alpha,小米商城"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./MI.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"MI_basic.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"Resource/favicon.ico"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">        小米商城 - 小米10 Pro、Redmi 10X、小米MIX Alpha，小米电视官方网站</span><br><span class="line">    <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> (<span class="attribute">max-width:</span><span class="number">1330px</span>) &#123;</span></span><br><span class="line">            /* .to-top &#123;</span><br><span class="line">                width: 30px;</span><br><span class="line">                height: 206px;</span><br><span class="line">                background-color: white;</span><br><span class="line">                position: fixed;</span><br><span class="line">                bottom: 180px;</span><br><span class="line">         </span><br><span class="line">                right: 50%;</span><br><span class="line">                margin-right: -696px;</span><br><span class="line"><span class="css">                <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#e1e2e3</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-class">.to-top</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">                width: 24px;</span><br><span class="line">                height: 32px;</span><br><span class="line">                vertical-align: bottom;</span><br><span class="line">                padding: 4px 3px;</span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#b0b0b0</span>;</span></span><br><span class="line">            &#125; */</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"topbar-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w topbar clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"service"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>小米商城<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>MIUI<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>IoT<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>云服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>金融<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>有品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>小爱开放平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>企业团购<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>资质证照<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>协议规则<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"app"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>下载app</span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"qrcode"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/MI.png"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>小米商城app<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>Select Location<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"shop-cart"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"buy"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-shopping-cart"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        购物车(0)</span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buylist"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>小米商城app<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>消息通知<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header w clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"logo"</span> <span class="attr">title</span>=<span class="string">"小米"</span>&gt;</span></span><br><span class="line">                小米官网</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"MI"</span> <span class="attr">href</span>=<span class="string">"//www.mi.com/index.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"Huawei"</span> <span class="attr">href</span>=<span class="string">"//www.huawei.com/index.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav-wrapper clearfix"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"all-goods-wrapper"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"all"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>全部商品分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"left-menu"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    手机 电话卡</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    电视 盒子</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    笔记本 显示器 平板</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    家电 插线板</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    手机 电话卡</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    出行 穿戴</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    智能 路由器</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    电源 配件</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    健康 儿童</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    耳机 音响</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                    生活 箱包</span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"catagory"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>小米手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>Redmi 红米<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>笔记本<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>家电<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>路由器<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"show-goods"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>智能硬件<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>社区<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search-wrapper"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"search"</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"search-info"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"冰箱"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"search-btn"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner w"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"img-list"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/ad-1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/ad-2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/ad-3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pointer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"to-top"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-human.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-repair.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-service.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-shop.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ad-top w"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ad w"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"short-cut"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clock"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        小米秒杀</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-building"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        企业团购</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-frog"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        F码通道</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-frog"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        米粉卡</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-keyboard"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        以旧换新</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-keyboard"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        话费充值</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"ad-img"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/ad-1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/ad-2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/ad-2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"phone w"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"phone-detail"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">                手机</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"phone-main"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"phone-left"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-Alpha.webp"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"phone-right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone1.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>小米10 青春版5G<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone2.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>小米10<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone3.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Redmi K30 Pro<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone4.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Redmi K30 Pro 变焦版<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone5.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>小米10 Pro<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone6.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Redmi K30<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone7.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Redmi K30 5G<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/MI-phone8.webp"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Redmi 8<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.topbar-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.topbar</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.topbar</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#b0b0b0</span>;</span><br><span class="line">    <span class="comment">/*设置块元素充满高度*/</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.topbar</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.topbar</span> <span class="selector-class">.line</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#424242</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.service</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.service</span>, <span class="selector-class">.topbar</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.qrcode</span>,</span><br><span class="line"><span class="selector-class">.app</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">148px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">transition</span>: height <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">108px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span> <span class="selector-class">.qrcode</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">27px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">124px</span>;</span><br><span class="line">    <span class="comment">/*逐渐显示二维码*/</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span> <span class="selector-class">.qrcode</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">86px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">17px</span> <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span> <span class="selector-class">.qrcode</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span>, <span class="selector-class">.user-info</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#424242</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.shop-cart</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.buy</span> <span class="selector-class">.buylist</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.buylist</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">49px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="comment">/*隐藏logo中的文字*/</span></span><br><span class="line">    <span class="attribute">text-indent</span>: -<span class="number">999px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"./Resource/MI_logo.png"</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: contain;</span><br><span class="line">    <span class="attribute">transition</span>: left <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> <span class="selector-class">.Huawei</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"./Resource/HW.png"</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.MI</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">55px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.Huawei</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1050px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">95px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*nav子元素靠左浮动*/</span></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*左侧导航条*/</span></span><br><span class="line"><span class="selector-class">.left-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">290px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">608px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">162px</span>;</span><br><span class="line">    <span class="comment">/*继承父元素行高*/</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*19*/</span></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.left-menu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.left-menu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left-menu</span> <span class="selector-tag">a</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="comment">/*浮动之后需重新设置行高*/</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">55px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left-menu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.catagory</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.catagory</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1036px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">606px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e1e2e3</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">290px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使导航条相对全部商品分类这一个块定位*/</span></span><br><span class="line"><span class="selector-class">.all-goods-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav-wrapper</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="comment">/*设置为块元素，无论鼠标触碰什么位置都可点亮*/</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav-wrapper</span> <span class="selector-tag">li</span> <span class="selector-class">.left-menu</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav-wrapper</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.all</span> &#123;</span><br><span class="line">    <span class="comment">/*站位隐藏第一个*/</span></span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:first-of-type)</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:nth-child(10))</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:nth-child(9))</span><span class="selector-pseudo">:hover</span> ~ <span class="selector-class">.goods-info</span>,</span><br><span class="line">    <span class="comment">/*.nav .show-goods:hover ~ .goods-info,*/</span></span><br><span class="line"><span class="selector-class">.goods-info</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">228px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">224</span>, <span class="number">224</span>, <span class="number">224</span>);</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods-info</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="comment">/*height: 228px;*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: height <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">290px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">28px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-info</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">217px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#999999</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="comment">/*设置边框线消失*/</span></span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-info</span><span class="selector-pseudo">:focus</span>,</span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-info</span><span class="selector-pseudo">:focus</span> + <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-btn</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">51px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#999999</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">608px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.img-list</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.img-list</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1326px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">608px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pointer</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pointer</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pointer</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.pointer</span> <span class="selector-class">.active</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.to-top</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">206px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">180px</span>;</span><br><span class="line">    <span class="comment">/*现将块放置在中间，利用等式设置right为负值，不改变自身，浏览器会自动增加left的值控制位置*/</span></span><br><span class="line">    <span class="attribute">right</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: -<span class="number">696px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e1e2e3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.to-top</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#b0b0b0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ad-top</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ad</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span>,</span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span>,</span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">290px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">172px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#5f5750</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">52px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#cfcccc</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e1e2e3</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e1e2e3</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.short-cut</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">320px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">243</span>,<span class="number">243</span>,<span class="number">243</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-detail</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">811px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-detail</span> <span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-detail</span> <span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">48</span>,<span class="number">48</span>,<span class="number">48</span>);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-detail</span> <span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">69</span>,<span class="number">69</span>,<span class="number">69</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-detail</span> <span class="selector-class">.right</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.phone-detail</span> <span class="selector-class">.right</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-main</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">780px</span>;</span><br><span class="line">    <span class="comment">/*width: 1326px;*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-main</span> <span class="selector-class">.phone-right</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">290px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">243</span>,<span class="number">243</span>,<span class="number">243</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-main</span> <span class="selector-class">.phone-left</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">290px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone-main</span> <span class="selector-class">.phone-right</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">230px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">70px</span> <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.phone-main</span> <span class="selector-class">.phone-right</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">5px</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5(3)</title>
    <url>/2020/07/08/HTML5-3/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">旋转正方体</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html &#123;</span><br><span class="line">            perspective: 800px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.cube</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            position: relative;</span><br><span class="line">            transform-style: preserve-3d;</span><br><span class="line">            animation: run 20s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.cube</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line"><span class="css">            <span class="comment">/* 设置透明度 设置透明时需要backface-visibility*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: 0<span class="selector-class">.7</span>;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            backface-visibility: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            vertical-align: top;</span><br><span class="line">            background-size: cover;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line">            transform: rotateY(90deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line">            transform: rotateY(-90deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line">            transform: rotateX(90deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line">            transform: rotateX(-90deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line">            transform: rotateY(180deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box6</span>&#123;</span></span><br><span class="line">            transform: rotateY(0deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> run &#123;</span></span><br><span class="line">            from&#123;</span><br><span class="line">                transform: rotateX(0deg) rotateZ(0deg) ;</span><br><span class="line">            &#125;</span><br><span class="line">            to&#123;</span><br><span class="line">                transform: rotateX(1turn) rotateZ(1turn) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/GTX.jpg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/LEADER.jpeg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/LJR.jpg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ZZX.jpeg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/LS.jpg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box6"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/ad-1.jpg"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">less：</span><br><span class="line">css的预处理语言。css增强版，编写更少的代码实现更强大的样式。</span><br><span class="line">变量：可以直接对宽高写加减乘除</span><br><span class="line">可以在变量中存储一个任意的值，当需要时可以任意的修改变量中的值，@a:100px,@b:#fff;等都可以创建，使用直接使用width:@a;也可以创建个类.@(c)&#123;&#125; @c：box1;</span><br><span class="line">可以引用width:300px;height:$width;</span><br><span class="line">使用&amp;表示外层的父元素</span><br><span class="line">.p2:extend(.p1)&#123;color:red&#125;,表示分组p1,p2&#123;&#125;,然后对p2添加新的属性</span><br><span class="line">@inport &quot;a.less&quot;可引入其他的less</span><br><span class="line">混合:</span><br><span class="line">将一系列属性从一个规则集引入另一个规则集的方式</span><br><span class="line">.A&#123;&#125; .B&#123;.A&#125;普通混合</span><br><span class="line">.A(@m,@n,@p)&#123;&#125; .B&#123;.A(10px,10px,red)&#125;带参数的混合</span><br><span class="line">.A(@m:10px,@n:10px,@p:red)&#123;&#125;带默认值的混合,此时可以在调用时不传参直接.A()</span><br><span class="line">.A(@m:10px,@n:10px,@p:red)&#123;&#125; .B(@p:blue)命名参数混合</span><br><span class="line">.A(@_)&#123;width:0px&#125; .A(a,@m,@n)&#123;height:10px&#125; .A(b,@m,@n)&#123;height:20px&#125; .A(c,@m,@n)&#123;height:30px&#125;       .A(b,30px,40px)匹配模式,可以动态的调用不同类型</span><br><span class="line">less中避免编译，加减乘除等计算，交给浏览器来编译 width:~&quot;100+100px&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.box1&#123;</span><br><span class="line">    background-color: lavender;</span><br><span class="line">    .box2&#123;</span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line">    &gt;.box3&#123;</span><br><span class="line">        color: black;</span><br><span class="line">        &amp;:hover&#123;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;:hover&#123;</span><br><span class="line">        color: aqua;</span><br><span class="line">    &#125;</span><br><span class="line">    div &amp;&#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">.p1&#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">// 对p1扩展</span><br><span class="line">.p2:extend(.p1)&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">.p2:extend(.box1&gt;.box3)&#123;</span><br><span class="line">    color: blueviolet;</span><br><span class="line">&#125;</span><br><span class="line">// 复制p1很少用</span><br><span class="line">.p3&#123;</span><br><span class="line">    .p1();</span><br><span class="line">&#125;</span><br><span class="line">// 使用类选择器添加一个括号，实际专门给被人来使用(混合函数)</span><br><span class="line">.p4()&#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background-color: wheat;</span><br><span class="line">&#125;</span><br><span class="line">.p5&#123;</span><br><span class="line">    .p4;</span><br><span class="line">&#125;</span><br><span class="line">// 混合函数主要是传不同的参数来定义,可以传递多个值</span><br><span class="line">.p6(@a)&#123;</span><br><span class="line">    width: @a;</span><br><span class="line">    height: @a;</span><br><span class="line">&#125;</span><br><span class="line">div&#123;</span><br><span class="line">    .p6(250px);</span><br><span class="line">&#125;</span><br><span class="line">//也可以@a:230px这样不按照顺序来传值</span><br><span class="line">.p7(@a,@b,@bg)&#123;</span><br><span class="line">    width: @a;</span><br><span class="line">    height: @b;</span><br><span class="line">    border: @bg;</span><br><span class="line">&#125;</span><br><span class="line">a&#123;</span><br><span class="line">    .p7(230px,30px,1px solid #fff);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.box1 &#123;</span><br><span class="line">  background-color: lavender;</span><br><span class="line">&#125;</span><br><span class="line">.box1 .box2 &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">.box1 &gt; .box3,</span><br><span class="line">.p2 &#123;</span><br><span class="line">  color: black;</span><br><span class="line">&#125;</span><br><span class="line">.box1 &gt; .box3:hover &#123;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line">.box1:hover &#123;</span><br><span class="line">  color: aqua;</span><br><span class="line">&#125;</span><br><span class="line">div .box1 &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">&#125;</span><br><span class="line">.p1,</span><br><span class="line">.p2 &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.p2 &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">.p2 &#123;</span><br><span class="line">  color: blueviolet;</span><br><span class="line">&#125;</span><br><span class="line">.p3 &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.p5 &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  background-color: wheat;</span><br><span class="line">&#125;</span><br><span class="line">div &#123;</span><br><span class="line">  width: 250px;</span><br><span class="line">  height: 250px;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line">  width: 230px;</span><br><span class="line">  height: 30px;</span><br><span class="line">  border: 1px solid #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">弹性盒子：</span><br><span class="line">display:flex</span><br><span class="line">flex-grow:1;对剩余空间分配给每个元素</span><br><span class="line">flex-shrink:0(不收缩);父元素不足容纳子元素对子元素收缩</span><br><span class="line">flex-wrap: nowrap&#x2F;wrap&#x2F;wrap-reverse;元素满之后是否自动换行</span><br><span class="line">对横向元素布局：justify-content: flex-start&#x2F;flex-end&#x2F;center(元素居中排列,可取代margin:0 auto)&#x2F;space-around(空白分配到元素两侧)&#x2F;space-between;(分配空白空间到元素间)&#x2F;soace-evenly(分配到元素单侧)</span><br><span class="line">对纵向单行元素布局：align-items:strart(默认值,将每行元素的长度设置一致)flex-start(不会拉伸，自上而下来)&#x2F;flex-end&#x2F;center。stretch（对空白空间平均分配）</span><br><span class="line">align-content与justify-content一致,只是对纵向空白的划分。可使用align-self:对每个元素重定义，可覆盖align-items。将其看成一个整体来布局</span><br><span class="line">flex-direction:row</span><br><span class="line">flex-basic:100px;元素基础长度，横向为指定宽度，纵向指定高度，默认为auto参考元素自身高宽。可以使用flex:1 1 auto;对拉伸、收缩、基础长度同时设置。也可使用initial(0,1,auto)、auto(1、1、auto)、none(0,0,auto)</span><br><span class="line">border:1、2、3...影响排列的顺序</span><br><span class="line">flex:1;相当于flex-grow:1;flex-shrink:1;flex-basic:0%来平均分配空间</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">像素：</span><br><span class="line">css像素(给定的100px)、物理像素(分辨率)</span><br><span class="line">默认情况下一个css像素&#x3D;一个物理像素。</span><br><span class="line">视口(viewport)屏幕中显示网页的区域，默认情况宽度为1920px(css像素)此时二者比为1:1</span><br><span class="line">物理像素固定为1920</span><br><span class="line">默认移动端的像素会设置为980px(css像素)</span><br><span class="line">移动端不同设备使用100vw来设置视口的满宽度</span><br><span class="line">多列布局：</span><br><span class="line">column-count:2;分栏的个数column-gap:多列间距;column-rule:1px solid;分割线</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//移动端实例</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./LOVE.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>LOVE<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"top-bar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu-btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-stream"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                LOVE STUDY</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search-btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"Resource/banner-3.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"first"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">" fa fa-book"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            CAO小学</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"second"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">" fa fa-cut"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            CAO初中</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"third"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">" fa fa-envelope"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            CAO高中</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fouth"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">" fa fa-globe"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            CAO大学</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"course-list"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新课程<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"more"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner-2.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner2.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_2.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner-2.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner2.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_2.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"course-list"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新资料<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"more"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner3.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_3.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner4.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_4.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner3.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_3.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-img"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/banner4.png"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"course-title"</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_4.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nickname"</span>&gt;</span></span><br><span class="line">                        李华</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">@total-width:</span><span class="number">750</span>;</span><br><span class="line"><span class="selector-class">.w</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">693</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100vw</span>/<span class="variable">@total-width</span>*<span class="number">40</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eff0f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-bar</span><span class="selector-pseudo">:extend(.w)</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">175</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="comment">// align-items: center;</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">175</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#24253d</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">        <span class="selector-tag">i</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.banner</span><span class="selector-pseudo">:extend(.w)</span>&#123;</span><br><span class="line">    <span class="selector-tag">img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.menu</span><span class="selector-pseudo">:extend(.w)</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">329</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-flow</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">align-content</span>: space-around;</span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">327</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">104</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">8</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">104</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="selector-tag">i</span>&#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">30</span>/<span class="number">40rem</span> <span class="number">0</span> <span class="number">38</span>/<span class="number">40rem</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.first</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#f97053</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.second</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#cd6efe</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.third</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#f97053</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.fouth</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#1bc4fb</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.course-list</span><span class="selector-pseudo">:extend(.w)</span>&#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">46</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="selector-class">.title</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">h2</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">33</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#24253d</span>;</span><br><span class="line">        <span class="attribute">border-left</span>: <span class="number">2px</span> solid <span class="number">#3a84ff</span>;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">4px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">28</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#656565</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-list</span>&#123;</span><br><span class="line">    <span class="comment">// 设置溢出的元素可以通过滚动来展示</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">720</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">350</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">// flex-wrap: wrap;</span></span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">align-content</span>: space-around;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    <span class="comment">// 即是在一行也不改变元素大小</span></span><br><span class="line">    <span class="attribute">flex</span>: none;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">320</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">324</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">22</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">24</span>/<span class="number">40rem</span>;</span><br><span class="line">    <span class="selector-tag">img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">vertical-align</span>: top;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.course-title</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">32</span>/<span class="number">40rem</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#24253d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.user-info</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="selector-class">.avatar</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">42</span>/<span class="number">40rem</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">42</span>/<span class="number">40rem</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.nickname</span>&#123;</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">24</span>/<span class="number">40rem</span>;</span><br><span class="line">            <span class="attribute">counter-reset</span>: <span class="number">#969396</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5(2)</title>
    <url>/2020/07/04/HTML5-2/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字体：</span><br><span class="line">font-family 字体簇可选值（serif衬线字体、sans-serif非衬线字体、monospace等宽字体）指定该字体类别，浏览器会自动选择。可以指定多种字体使用,隔开即可。  @font-face &#123;font-family: &quot;myfont&quot;;src: url(&quot;&quot;);&#125;提供服务器上字体给用户来使用（字体名字、字体路径）使用，font-family:myfont。加载速度和版权问题会出现。</span><br><span class="line">图标字体，使用fontawesome解压后放在项目下,&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;font&#x2F;css&#x2F;all.css&quot;&gt;引入即可使用。&lt;i class&#x3D;&quot;fa fa-align-center&quot; style&#x3D;&quot;font-size: 50px;color: #0090ff&quot;&gt;&lt;&#x2F;i&gt;,&lt;i&gt;任意元素包裹使用。也可使用伪元素来设置：.div1::before&#123;content: &#39;\f2b9&#39;;font-family: &#39;Font Awesome 5 Brands&#39;;font-weight: 500;color: #0090ff;&#125;。</span><br><span class="line">其中的content参考手册中f开头的文字、font-family需参考all.css中fas、fab的font-family一般Free&#x2F;Brands。如果是fas需要添加font-weight属性。参考手册如下：</span><br><span class="line">也可使用Iconfont(数量多，但注意版权)登录后收藏到项目然后下载，文件中会有html的手册。配置与上面的一致。</span><br><span class="line">行高：line-height:2;可设置初始行高1.33的高度。</span><br><span class="line">font简写属性：font:40px&#x2F;2 &#39;Times&#39;;同时设置大小、行间距、family。font-weight:bold加粗。font-style:normal-正常；italic-斜体</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.runoob.com/font-awesome/fontawesome-reference.html" target="_blank" rel="noopener">https://www.runoob.com/font-awesome/fontawesome-reference.html</a> </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文本：</span><br><span class="line">text-align:right&#x2F;left&#x2F;center&#x2F;justify文本左&#x2F;右&#x2F;水平对齐&#x2F;两端对齐</span><br><span class="line">vertical-align:baseline&#x2F;top&#x2F;bottom&#x2F;middle基线对齐（默认）&#x2F;顶部对齐&#x2F;底部对齐&#x2F;居中对齐（伪居中，与小写x中部对齐）。其中顶部和底部参考的都是父元素的边界。</span><br><span class="line">使用图片相当于替换，但此时会以基线对齐会有缝隙，vertical-align可以有效避免此类问题</span><br><span class="line">text-decoration:给文本设置下划线并且可设置颜色</span><br><span class="line">.a&#123;width:100px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&#125;设置一行中过多字体省略显示。white-space:设置空白区域，normal-正常，nowrap-不换行，pre-保留空白</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">背景图片：</span><br><span class="line">background-image: url();,可同时设置背景图片和颜色，此时背景颜色称为背景图片的背景色，若背景图片大于背景色会隐藏部分。background-repeat设置背景重复方式：repeat-沿着x、y轴重复，repeat-x、repeat-y，no-repeat.</span><br><span class="line">background-position:设置背景图片位置，top、left、right、bottom、center。至少需要两个值定位，也可以使用偏移量来确定位置，可使用负值。</span><br><span class="line">background-clip:设置背景范围，border-box(默认值)背景可以出现在边框下方，padding-box-此时不会出现在边框，content-box-只出现在内容区。</span><br><span class="line">background-origin:背景图片的偏移量计算的原点，padding-box-从内边距开始计算，border-box-从边框处开始，content-box-从内容区开始。</span><br><span class="line">background-size:背景图片尺寸，可以认为是给图片缩放实现完整显示。需要给定宽高。若只给定一个值另一个值会自适应。可使用auto来确定。cover-比例不变，将元素铺满。contain-比例不变，图片完整显示。</span><br><span class="line">background-attachment:背景图片是否跟随元素移动，scroll-移动，fixed-固定（很少使用）</span><br><span class="line">以上的属性可在一个background:中设置即可，若同时设置需注意size必须在position后面使用&#x2F;隔开，origin需在clip之前。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">渐变色：</span><br><span class="line">1）线性渐变（沿着一条直线）background-image: linear-gradient(red,yellow);从红色向黄色渐变，自上而下。</span><br><span class="line">linear-gradient(to left,red,yellow);可指定方向。也可使用45deg使用度数确定方向、0.5turn来使用圈来确定。可以设定每种颜色开始渐变的位置red 50px。background-image: repeating-linear-gradient,重复渐变的范围，此时可设置开始位置。</span><br><span class="line">2）径向渐变（四周放射渐变）background-image: radial-gradient。可指定大小（需设置宽高），其他与线性类似。当添加at top left;来确定圆心位置。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">表格：</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt; tr-行，td-列。&lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;&#x2F;td&gt; 、&lt;td rowspan&#x3D;&quot;2&quot;&gt;&lt;&#x2F;td&gt;,横向、纵向合并两个单元格。</span><br><span class="line">长表格，&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;&lt;&#x2F;tbody&gt;&lt;tfoot&gt;&lt;&#x2F;tfoot&gt;&lt;&#x2F;table&gt;,将单元格分为三个部分，无论放置的位置如何都固定显示未头部、中部、尾部。</span><br><span class="line">设置边框之间距离，border-spacing:0px;合并边框，border-collapse:collapse;,该属性可用于为表格分边界线不至于显示重叠的边界线。</span><br><span class="line">为避免大量的行而分辨不清使用tr:nth-child(2n)&#123;background-color:&#125;。注意tr不是table的子元素，两者之间存在一个tbody。</span><br><span class="line">td中的元素默认是垂直居中的，使用vertical-align调整。</span><br><span class="line">不使用表格布局。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">表单：</span><br><span class="line">用于提交数据。form，&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; autocomplete&#x3D;&quot;on&#x2F;off&quot;&gt; autocomplete用来输入数据时对以前输入的数据的显示。可直接放置在&lt;form autocomplete&gt;中对全部文本框生效。readonly设置为只读（数据会提交）、disable（数据不会提交、禁用）、autofocus自动获取焦点（即选择为初始的输入框）</span><br><span class="line">单选按钮，&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;choose&quot; value&#x3D;&quot;a&quot; check&gt;&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;choose&quot; value&#x3D;&quot;b&quot; check&gt;value指定发送给服务器的值、checked初始选择。</span><br><span class="line">多选，&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;choose&quot; value&#x3D;&quot;a&quot; check&gt;,与单选类似</span><br><span class="line">下拉列表，&lt;select name&#x3D;&quot;a&quot;&gt;&lt;option selected value&#x3D;&quot;1&quot;&gt;选项一&lt;&#x2F;option&gt;selected默认选择</span><br><span class="line">按钮，&lt;button type&#x3D;&quot;submit&#x2F;reset&#x2F;button&quot;&gt;提交&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">过渡：</span><br><span class="line">属性变换时的切换方式，transition:all 1s;。过渡必须是一个有效数值到另一个数值过渡</span><br><span class="line">transition-property:width,height;指定要执行过渡的属性,需要指定过渡的边</span><br><span class="line">transition-duration:2s;指定过渡的时间,可对宽高分别设置时间</span><br><span class="line">transition-timing-function:ease(先加速再减速)、linear(匀速)、ease-in(加速)、ease-out(减速)、ease-in-out(先加再减)、cubic-bezier(两点坐标指定变化速度)(未指定时序函数)、steps(3,start&#x2F;end(默认，时间结束执行))不流畅来按照步数跳动;过渡时序函数，即变化的长度。</span><br><span class="line">transition-delay:2s;等待一段时间后再执行。</span><br><span class="line">可直接使用transition全部设置，设置时间时第一个是持续时间，第二个是延迟时间。</span><br><span class="line">.box1&#123;height: 200px;width: 97px;margin: 0 auto;background-image: url(&quot;Resource&#x2F;MI-T.png&quot;);background-position: 0 0;transition: 0.5s steps(3);&#125;</span><br><span class="line">.box1:hover&#123;background-position: -291px 0;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://cubic-bezier.com/#.17,.67,.67,.5" target="_blank" rel="noopener">https://cubic-bezier.com/#.17,.67,.67,.5</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">动画：</span><br><span class="line">与过度类似,可以使用变化速度的transition-timing-function值，不同在于动画可以自动触发效果。关键帧(没秒中图片变换数)</span><br><span class="line">animation-name: test;生效的关键帧的名字</span><br><span class="line">animation-duration: 2s;执行时间。</span><br><span class="line">@keyframes test &#123;to&#123;margin-left: 291px;&#125;from&#123;margin-left: 0;&#125;&#125;</span><br><span class="line">animation-iteration-count: infinite;执行次数，1、2、3、infinite</span><br><span class="line">animation-direction: alternate-reverse;执行方向normal、reverse、alternate(重复执行动画会反向执行)、alternate-reverse</span><br><span class="line">animation-play-state: paused;动画执行状态running(默认)、paused。可在一定时刻暂停</span><br><span class="line">animation-fill-mode: none;执行完毕元素回到原来位置、forward动画结束元素直接停止在终点、backwords动画延时等待就会处于开始位置、both结合forward与backwords</span><br><span class="line">仅仅使用animation注意的问题同过渡一致。</span><br><span class="line">.box1&#123;height: 183px;width: 123px;margin: 0 auto;background-image: url(&quot;Resource&#x2F;run1.jpg&quot;);animation: run 1s steps(4) infinite;&#125;@keyframes run &#123;</span><br><span class="line">to&#123;background-position: -492px;&#125;from&#123;background-position: 0;&#125;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,user-scalable=no,maximum-scale=1.0,minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./font/css/all.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line">            height: 183px;</span><br><span class="line">            width: 123px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            background-image: url("Resource/run1.jpg");</span><br><span class="line">            animation: run 1s steps(4) infinite;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">            animation: paused;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> run &#123;</span></span><br><span class="line">            to&#123;</span><br><span class="line">                background-position: -492px;</span><br><span class="line">            &#125;</span><br><span class="line">            from&#123;</span><br><span class="line">                background-position: 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.out</span>&#123;</span></span><br><span class="line">            height: 500px;</span><br><span class="line">            border-bottom: 10px black solid;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line"><span class="css">            <span class="comment">/*解决外边距重叠*/</span></span></span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.out</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#00ff40</span>;</span></span><br><span class="line">            animation: down 2s forwards ease-in infinite;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> down &#123;</span></span><br><span class="line">            from&#123;</span><br><span class="line">                margin-top: 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="comment">/*时间执行到20%时，距离最大(落地)*/</span></span></span><br><span class="line">            20%,60%,to&#123;</span><br><span class="line">                margin-top: 400px;</span><br><span class="line">                animation-timing-function: ease-in;</span><br><span class="line">            &#125;</span><br><span class="line">            40%&#123;</span><br><span class="line">                margin-top: 200px;</span><br><span class="line">            &#125;</span><br><span class="line">            80%&#123;</span><br><span class="line">                margin-top: 100px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line">            background-color: black;</span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: 0<span class="selector-class">.3s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#00ff40</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: 0<span class="selector-class">.6s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#d900ff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: 0<span class="selector-class">.9s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> <span class="selector-class">.box6</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ff0000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: 1<span class="selector-class">.2s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> <span class="selector-class">.box7</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ff6700</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: 1<span class="selector-class">.5s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> <span class="selector-class">.box8</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#0090ff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: 1<span class="selector-class">.8s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box6"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box7"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box8"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">变形：</span><br><span class="line">通过css改变元素的形状或位置，不会影响页面的布局。</span><br><span class="line">平移，transform:translateX(100px&#x2F;50%)沿着x轴平移、translateY()沿着y轴平移、translateZ()沿着z轴平移。百分比是参照盒子本身的长宽。设置perspective后即可进行空间上的旋转展示</span><br><span class="line">使用top、left、right、botom:0;margin:auto;设置元素居中有局限，必须设置宽高。当使用元素撑起盒子就需要使用，left:50%;top:50%;transform:translateX(-50%) translateX(-50%);即可。</span><br><span class="line">z轴平移，可设置html&#123;perspective: 800px;&#125;即人眼与屏幕的距离，多次设置该值会产生叠加。perspective-origin:left top;x、y轴开始的位置。transform: translateZ(200px) rotateX(180deg&#x2F;.5turn);两种属性顺序不同效果不同rotateZ沿Z轴旋转</span><br><span class="line">backface-visibility: hidden&#x2F;visible;隐藏&#x2F;显示背面</span><br><span class="line">scaleX(100px&#x2F;2(倍数))、scaleY()、scale()Y、X方向、双方向，scaleZ()需要3D效果</span><br><span class="line">transform-origin:20px 20px;设置变形的原点</span><br><span class="line">transform: rotate3d(1, 1, 1, 360deg);分别代表按照x,y,z轴旋转，非0就旋转</span><br><span class="line">transform-style: preserve-3d;作用于子元素</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">时钟</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.clock</span> &#123;</span></span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 500px;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            position: relative;</span><br><span class="line">            background-image: url(./Resource/B.jpg);</span><br><span class="line">            background-size: cover;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.clock</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.hour-wrapper</span> &#123;</span></span><br><span class="line">            height: 70%;</span><br><span class="line">            width: 70%;</span><br><span class="line">            animation: run 216000s linear;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.hour</span> &#123;</span></span><br><span class="line">            height: 50%;</span><br><span class="line">            width: 4px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.minute-wrapper</span> &#123;</span></span><br><span class="line">            height: 80%;</span><br><span class="line">            width: 80%;</span><br><span class="line">            animation: run 3600s steps(60) infinite;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.minute</span> &#123;</span></span><br><span class="line">            height: 50%;</span><br><span class="line">            width: 3px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.second-wrapper</span> &#123;</span></span><br><span class="line">            height: 90%;</span><br><span class="line">            width: 90%;</span><br><span class="line">            animation: run 60s steps(60) infinite;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.second</span> &#123;</span></span><br><span class="line">            height: 50%;</span><br><span class="line">            width: 2px;</span><br><span class="line">            background-color: burlywood;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> run&#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line">                transform: rotateZ(0);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            to &#123;</span><br><span class="line">                transform: rotateZ(360deg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class="b"&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hour-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hour"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"minute-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"minute"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"second-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"second"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 扇形导航条 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line">        position: fixed;</span><br><span class="line">        right: 20px;</span><br><span class="line">        bottom: 20px;</span><br><span class="line">        width: 19px;</span><br><span class="line">        height: 19px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wrap</span>&gt;<span class="selector-class">.inner</span>&gt;<span class="selector-tag">img</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        margin: 4px;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        background-size: cover;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wrap</span>&gt;<span class="selector-class">.home</span> &#123;</span></span><br><span class="line">        margin: 4px;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        position: absolute;</span><br><span class="line">        background: url(./Resource/yes.png) no-repeat;</span><br><span class="line">        background-size: cover;</span><br><span class="line">        transition: 1s;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> homeEle = <span class="built_in">document</span>.querySelector(<span class="string">".home"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> imgs = <span class="built_in">document</span>.querySelectorAll(<span class="string">"#wrap&gt;.inner&gt;img"</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> flag = <span class="literal">true</span></span></span><br><span class="line">        c = 100</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.style.transition = <span class="string">"1s"</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.style.transform = <span class="string">"rotate(-720deg) scale(1)"</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.style.opacity = <span class="number">1</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.removeEventListener(<span class="string">"transitionend"</span>, fn)</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">            imgs[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.transition = <span class="string">"1s"</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.transform = <span class="string">"rotate(-720deg) scale(2)"</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.opacity = <span class="number">0.5</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.addEventListener(<span class="string">"transitionend"</span>, fn)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        homeEle.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">            if (flag) &#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.transform = <span class="string">"rotate(-720deg)"</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.transition = <span class="number">0.7</span> + (i * <span class="number">0.15</span>) + <span class="string">"s"</span></span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.transform = <span class="string">"rotate(-720deg) scale(1)"</span></span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.left = -getPoint(c, <span class="number">90</span> * i / (imgs.length - <span class="number">1</span>)).left + <span class="string">"px"</span></span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.top = -getPoint(c, <span class="number">90</span> * i / (imgs.length - <span class="number">1</span>)).top + <span class="string">"px"</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.transform = <span class="string">"rotate(0deg)"</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.transition = <span class="number">0.7</span> + ((imgs.length - i - <span class="number">1</span>) * <span class="number">0.15</span>) + <span class="string">"s"</span></span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.transform = <span class="string">"rotate(0deg) scale(1)"</span></span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.left = <span class="number">0</span> + <span class="string">"px"</span></span></span><br><span class="line"><span class="actionscript">                    imgs[i].style.top = <span class="number">0</span> + <span class="string">"px"</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            flag = !flag</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getPoint</span><span class="params">(c, deg)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> x = <span class="built_in">Math</span>.round(c * <span class="built_in">Math</span>.sin(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>))</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> y = <span class="built_in">Math</span>.round(c * <span class="built_in">Math</span>.cos(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>))</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                left: x,</span><br><span class="line">                top: y</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_1.png"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_2.png"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_3.png"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_4.png"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./Resource/gr_3.png"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"home"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5(1)</title>
    <url>/2020/07/03/HTML5-1/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">meta标签：</span><br><span class="line">&lt;!--    网站关键字--&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;keywords&quot; content&#x3D;&quot;HTML5,前端,CSS&quot;&gt;</span><br><span class="line">&lt;!--    网站的描述--&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;京东JD.COM-专业的综合网上购物商城&quot;&gt;</span><br><span class="line">&lt;!--    一定时间后跳转--&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;3;url&#x3D;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;</span><br><span class="line">&lt;h1&gt;、&lt;p&gt;都是块标签（独占一行）</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语义化标签：</span><br><span class="line">header 表示网页头部</span><br><span class="line">main 表示网页主体部分，只有一个</span><br><span class="line">footer 表示网页的底部</span><br><span class="line">aside 侧边栏，和主体有关的其他内容</span><br><span class="line">nav 网页中的导航</span><br><span class="line">article 一个独立的文章</span><br><span class="line">section 表示一个独立的区块</span><br><span class="line">div 表示区块，可代替上面  span行内元素</span><br><span class="line">hgroup 用来为标题分组，可以将一组相关的标题同时放入</span><br><span class="line">em 标签用于语音语调加重，不独占一行（行内元素）</span><br><span class="line">strong 标签表示强调，不独占一行（行内元素）</span><br><span class="line">&lt;blockquote&gt; 长引用，独占一行</span><br><span class="line">&lt;q&gt; 短引用，不独占一行</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">列表：</span><br><span class="line">&lt;ul&gt;列 &lt;li&gt;行  无序列表  &lt;ol&gt;列 &lt;li&gt;行  有序列表</span><br><span class="line">direction: rtl&#x2F;ltr;修改文字的方向</span><br><span class="line">unicode-bidi: bidi-override;</span><br><span class="line">text-overflow: ellipsis&#x2F;clip;溢出隐藏省略号、直接剪切掉</span><br><span class="line">overflow: hidden;</span><br><span class="line">white-space: nowrap;</span><br><span class="line">-webkit-box-reflect: left 10px;镜像显示</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">超链接：</span><br><span class="line">行内元素，在a标签可以嵌套除自身之外的任何元素，添加target属性来选择本页面还是跳转到新页面，_self、_blank(新)。1）&lt;a href&#x3D;&quot;www.baidu.com&quot;&gt;百度&lt;&#x2F;a&gt; 可以添加路径跳转本地目录2）&lt;a href&#x3D;&quot;#&quot;&gt; 回到顶部 &lt;a id&#x3D;&quot;tips&quot; href&#x3D;&#39;#&#39;&gt;hello&lt;&#x2F;a&gt; ... &lt;a href&#x3D;&quot;#tips&quot;&gt;跳转到hello&lt;&#x2F;a&gt; 页内跳转。可以在任意标签添加id,然后使用类似&lt;a href&#x3D;&quot;#tips&quot;&gt;可以点击后跳转。3）&lt;a href&#x3D;&quot;javascript:;&quot;&gt;点击后不跳转，作为占位符&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">图片标签：</span><br><span class="line">img属于替换元素，alt属性对图片的描述，根据该描述来寻找图片。jpeg:支持颜色丰富、不支持透明效果、不支持动图。gif:支持颜色少、支持简单透明、支持动图。png：颜色丰富、复杂透明、不支持动图。webp：具备其他图片格式所有优点,缺点兼容性不好（IE）。base64：对图片进行编码，显示快。效果一样用小的、不一样用效果好的。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">内联框架：</span><br><span class="line">使用较少：&lt;iframe src&#x3D;&quot;&quot; width&#x3D;&quot; &quot;height&#x3D;&quot; &quot; frameborder&#x3D;&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">音视频播放：</span><br><span class="line">1）一般不允许用户操作,&lt;audio src&#x3D;&quot;.&#x2F;林俊杰-黑夜问白天的副本.mp3&quot; controls&gt;&lt;&#x2F;audio&gt;,controls可以控制显示,autoplay自动播放（但大部分浏览器不会自动播放）,loop循环播放。 &lt;audio controls&gt;不好意思&lt;source src&#x3D;&quot;林俊杰-黑夜问白天的副本.mp3&quot;&gt;&lt;&#x2F;audio&gt;不支持播放可显示文字提示，并且可写多个类型音频防止不支持 2） &lt;video src&#x3D;&quot;&quot;&gt;&lt;&#x2F;video&gt;使用方式基本一致</span><br><span class="line">属性：</span><br><span class="line">currentTime&#x2F;volume&#x2F;paused&#x2F;ended&#x2F;error(返回错误代码)&#x2F;currentSrc(当前媒体地址)</span><br><span class="line">视频还具有poster(播放前预览图片)&#x2F;width&#x2F;height&#x2F;vidioHeight&#x2F;vedioWeight</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">选择器：</span><br><span class="line">1）使用id选择器，在css中或者style中使用#id名&#123;&#125;来定义（不能重复）。使用class（类选择器）也可，使用class时可以同时起多个名字，只需空格隔开。复合选择器交集使用.名字 .名字  并集需要使用,即可（分组选择器）。</span><br><span class="line">2）父子元素、祖先后代元素，对于子元素可使用父&gt;子来指定。兄弟元素：使用 兄+弟来定义紧跟兄的元素。兄~弟 选择兄后面所有元素。</span><br><span class="line">3）属性选择：title&#x3D;&quot;&quot;属性，鼠标放置会出现提示文字，可以符合定义具有该属性的文字，&lt;p title&#x3D;&quot;a&quot;&gt;hello&lt;&#x2F;p&gt;  p[title]&#123;&#125;；p[title&#x3D;a]&#123;&#125;含有指定属性和属性值的元素；p[title^a]&#123;&#125;以a开头的具有title的元素；p[title$a]&#123;&#125;以a结尾的具有title的元素；p[title*a]&#123;&#125;以a开头或结尾的具有title的元素；</span><br><span class="line">4）伪类选择：ul&gt;li*5 tab键自动生成行列结构，可类似使用。不存在的类，描述一个元素的特殊状态，例如第一个元素、被点击的元素、鼠标移入的元素等。一般使用:开头，ul&gt;li:first-child&#123;&#125;设置第一个元素、ul&gt;li:last-child&#123;&#125;最后一个、ul&gt;li:nth-child(1)&#123;&#125;指定第几个元素，2n&#x2F;even偶数位，2n+1&#x2F;odd奇数位。根据所有的元素排序。first(last&#x2F;nth)-of-type 同类型的来排序。:not否定伪类，ul&gt;li:not(:nth-child(3))&#123;&#125;除去该元素，也可使用of-type.:only-child只有一个孩子节点</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">伪类：</span><br><span class="line">1）超链接伪类，前两个仅用于链接使用，后面两个适用于全部标签。&lt;a href&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt; 定义未访问过的链接(正常的链接)颜色 a:link&#123;&#125;；a:visited&#123;&#125;访问过(但是该属性只能修改颜色，涉及隐私少使用);a:hover&#123;&#125;鼠标移入的状态显示;a:active&#123;&#125;鼠标点击显示。</span><br><span class="line">2）伪元素，p::first-letter&#123;&#125;对p标签首字母操作，p::first-line&#123;&#125;对第一行操作，p::selection&#123;&#125;给选中元素添加操作；div::before&#x2F;after&#123;content:&#39;【】&#39;;&#125;标签的最开始结束位置添加元素，结合content使用，该元素无法选中（经常使用）:root</span><br><span class="line">3）表单伪类，:enabled 匹配可编辑的表单 :disable 匹配禁用的表单 :checked 匹配被选中的表单:focus匹配获焦的表单</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">继承：</span><br><span class="line">仅存在于祖先子孙之间，背景、布局等相关不会继承。不同选择器选择同一个元素，设置不同颜色值时会冲突，此时由选择器优先级决定。内联样式-1000&gt;id-100&gt;类和伪类选择器-10&gt;元素选择器-1&gt;通配选择器(*)-0&gt;继承的样式，具有混合选择器优先级求和得到最大，注意累加不会超过上一级别，定义同一个选择器不同名，最后一个定义决定最终效果。如果在一个样式中添加!important会变成最高级别的样式显示，但注意慎用。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">em、rem、rgb、hls：</span><br><span class="line">em相对于元素的字体大小来计算、rem相对于根元素（HTML字体）的字体大小来计算</span><br><span class="line">rgb,三原色（255,255,255）rgba,添加一个不透明度（1-完全不透明，0-完全透明，.5-半透明）</span><br><span class="line">16进制rgb（ffffff）两位两位重复可简写</span><br><span class="line">hsl(不常用),(色相,饱和度,亮度)，取值均为0-100%</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文档流：</span><br><span class="line">网页是一个多层的结构，通过css可以为每一层设置样式，用户只能看到最顶上一层，这些层中最下面一层为文档流，文档流是网页的基础，创建的元素都是在文档流中排列。元素两个状态：①在文档流中1）块元素，独占一行、默认宽度是父元素的全部、默认高度是被子元素撑开2）行内元素，span等，自左向右水平排列，一行中容纳不下行内元素会换行，被子元素撑开</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">盒子模型：</span><br><span class="line">1、css将页面中的所有元素都设置为一个矩形的盒子。盒子大小颜色可设置。盒子边框：border-width: 1px;(会有默认值)border-color: #d900ff;(默认黑色)border-style: solid、dashed(虚线);至少设置三个（可以同时设置，顺序不限border:1px #d900ff solid）同时设置四个边框不需要的设置border-right:none;即可。</span><br><span class="line">2、margin:设置上、左外边距移动自己，设置右下移动别人,可为负值</span><br><span class="line">3、水平布局：margin-left+border-left+padding-left+width+margin-right+border-right+padding-right&#x3D;父元素内容区的宽度。一般margin-right无用，不使用auto时浏览器会自动调整使等式成立。若上面七个值存在设置auto则自动调整设置为auto的值使等式满足。只有margin-left、margin-right、width可设置为auto</span><br><span class="line">4、垂直布局：overflow: visible(溢出)&#x2F;hidden(隐藏)&#x2F;scroll(滚动条);也可使用auto,自动给予滚动条，防止溢出。overflow-x&#x2F;y:分别对x、y处理</span><br><span class="line">5、外边距折叠：垂直方向相邻外边距会重叠。兄弟元素之间垂直外边距会取两者之间的较大值（都是正值），都是负值取绝对值最大的，兄弟之间重叠有利。父子元素，父子元素相邻上外边距，子元素会传递给父元素。可使用padding但是盒子会增大、也可以使外边距不相邻。暂时只有这两种方法。</span><br><span class="line">6、行内元素：不支持设置宽高（&lt;span&gt;、&lt;a&gt;等）,行内元素的padding、margin、border不会影响垂直方向的布局。可通过display来设置为块元素，inline-行内元素，block-块元素，inline-block-行内块元素（既可以设置长宽又不独占一行）少用。table-设置为表格，none-元素不在页面显示。visibility：设置元素的显示状态，visible-默认值，元素在页面中正常显示，hidden-元素在页面中隐藏不显示，但是占据页面位置。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">浏览器默认样式：</span><br><span class="line">list-style:none;去除无序列表点。重置样式表,reset.css-去除浏览器的默认样式,normalize.css-同一默认样式</span><br><span class="line">text-decoration:none 去除下划线</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">盒子大小、轮廓阴影、圆角：</span><br><span class="line">box-sizing:,设置盒子尺寸的计算方式，content-box,宽度和高度来设置内容区的大小。border-box,宽度和高度来设置整个盒子可见框的大小。</span><br><span class="line">outline:10px red solid 设置元素的轮廓线，与border不同之处在于该属性不会影响其他元素的位置布局，可直接覆盖其他的元素。多用于鼠标触及后的边框显示</span><br><span class="line">box-shadow:10px 10px 20px rgba(0,0,0,.3)，与outline一样都不会影响其他元素位置。可设置偏移量（否则会被上面元素覆盖）正值向右&#x2F;下，负值向左&#x2F;上 阴影的模糊半径（值越大）颜色（需使用透明度）</span><br><span class="line">border-top-left-radius:20px 40px 水平、垂直的半径 border:10px 20px 30px 40px(一般使用)设置三个值，则左上开始顺时针，对角相同。border-radius:50%;圆形</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">浮动：</span><br><span class="line">使一个元素向其父元素的左或右侧移动。使用后从文档流中脱离、不占用位置、使用后可以按行排列、不会溢出父元素。此时浮动时不会找过前面其他的浮动元素(即是上方存在空间也不会超过兄弟元素),浮动在下方不会覆盖上方未浮动元素，反之则覆盖。float:none、left、right。</span><br><span class="line">浮动元素不会遮盖文字，文字自动环绕在图片周围。浮动后脱离文档流</span><br><span class="line">脱离文档流特点：块元素不再独占一行、块的宽高被内容撑开；行内元素（span）不支持设置宽高，脱离文档流后变为块元素。即块和行内不再区分。</span><br><span class="line">注意：使用float时，父元素的高度默认是被子元素撑开时，当子元素浮动后，会完全脱离文档流无法支撑父元素高度，导致高度塌陷。可以固定父元素高度，也可以使用BFC（使用后成为一个独立的布局区域，开启后不会被浮动元素覆盖、子父元素外边距不会重合(eg:使用margin-top父元素不会向下移动)、可包含浮动子元素）。开启方式：设置元素浮动（父元素）、设置为行内块元素、将元素的overflow设置为一个非visiable(父元素)即：overflow:hidden&#x2F;auto（建议使用）</span><br><span class="line">clear:清楚浮动元素对当前元素影响(不会被浮动元素覆盖),left:清除左侧影响,right:清除右侧影响,both清除两侧最大的影响。浏览器自动添加一个上外边距使位置不受影响。此时可以使用clear解决塌陷。</span><br><span class="line">after:解决高度塌陷:(浮动的元素).a::after&#123;clear:both;display:block;&#125;after为行内元素。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">以上解决外边距重合及高度塌陷都会存在一定的缺陷，下面的可以更有效的解决</span><br><span class="line">clearfix:解决外边距重合及高度塌陷问题， .clearfix::before,.clearfix::after&#123;content: &#39;&#39;;display: table;clear: both;&#125;在父元素中类选择器添加clearfix即可</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">定位：position</span><br><span class="line">相对定位：relative,可任意确定元素在界面的位置，开启相对定位后不设置偏移量(offset:top、bottom、left、right)就不会发生任何变化、参照元素在文档流中的位置定位的（参照之前自身的位置）、会提升元素的层级（可以覆盖未设置的元素）、不会脱离文档流、不会改变元素的性质块还是块</span><br><span class="line">绝对定位：absolute,不设置偏移量元素的位置不发生变化、元素从文档流中脱离、改变元素的性质行内变成块，块的宽高被内容撑开、会提升元素的层级、相对于包含块定义（离当前元素最近的开启定位（position不是static）的祖先块元素）若所有祖先都没开启则相对于html根元素</span><br><span class="line">固定定位：fixed,大部分同绝对定位类似，不同在于相对于视口（视口固定不动的）来定位，即绝对定位会随着网页滚动条移动，固定定位则不会。</span><br><span class="line">粘滞定位：sticky,类似相对定位，不同在于在元素到达某个位置会被固定在页面（兼容性不好，少用）</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">绝对定位最为常用，1）使用绝对定位水平方向和增加left+right。left、right也可设置为auto，设置谁为auto浏览器会自动为其填充宽度。需先绝对定位left、right为0后再设置margin-left&#x2F;right。2）垂直方向,绝对定位top&#x2F;bottom为0后再设置margin-top&#x2F;bottom:auto(此时可设置为水平的居中)。最后可结合两者设置为双方向居中</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">元素层级：</span><br><span class="line">z-index,元素的层级相同则优先显示靠下的元素，祖先元素永远不会遮盖后代元素</span><br><span class="line">图片边框：</span><br><span class="line">border-image-source: url(.&#x2F;images&#x2F;11.jpg);</span><br><span class="line">border-image-slice: 33.333%;</span><br><span class="line">border-image-repeat: round;</span><br><span class="line">border-image-width: 20px;</span><br><span class="line">&#x2F;* 规定边框超出边框盒的大小 *&#x2F;</span><br><span class="line">border-image-outset: 20px;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;llllllll&quot; list&#x3D;&quot;list&quot;&gt;</span><br><span class="line">&lt;datalist id&#x3D;&quot;list&quot;&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;1&quot;&gt;1&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;2&quot;&gt;2&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;3&quot;&gt;3&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;4&quot;&gt;4&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;datalist&gt;</span><br><span class="line"></span><br><span class="line">    input::-webkit-input-placeholder &#123;</span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line">    下拉标签</span><br><span class="line">        &lt;details&gt;</span><br><span class="line">    &lt;summary&gt;1234&lt;&#x2F;summary&gt;</span><br><span class="line">    &lt;p&gt;1&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p&gt;2&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p&gt;3&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p&gt;4&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;details&gt;</span><br></pre></td></tr></table></figure>

<p>一、HTML、CSS基础、JavaScript语法基础。学完基础后，可以仿照电商网站（例如京东、小米）做首页的布局。</p>
<p>二、JavaScript语法进阶。包括：作用域和闭包、this和对象原型等。相信我，JS语法，永远是面试中最重要的部分。</p>
<p>三、jQuery、Ajax等。jQuery没有过时，它仍然是前端基础的一部分。</p>
<p>四、ES6语法。这部分属于JS新增的语法，面试必问。其中，关于 promise、async 等内容要尤其关注。</p>
<p>五、HTML5和CSS3。要熟悉其中的新特性。</p>
<p>六、canvas。面试时，有的公司不一定会问canvas，靠运气。如果时间不够，这部分的内容可以先不学。但如果你会，绝对属于加分项。</p>
<p>七、移动Web开发、Bootstrap等。要注意移动开发中的适配和兼容性问题。</p>
<p>八、前端框架：Vue.js和React。这两个框架至少要会一个。入门时，建议先学Vue.js，上手相对容易。但无论如何，同时掌握 Vue 和 React 才是合格的前端同学。</p>
<p>九、Node.js。属于加分项，如果时间不够，可以先不学，但至少要知道 node 环境的配置。</p>
<p>十、自动化工具：构建工具 Webpack、构建工具 gulp、CSS 预处理器 Sass 等。注意，Sass 比 Less 用得多，gulp 比 grunt 用得多。</p>
<p>十一、前端综合：HTTP协议、跨域通信、安全问题（CSRF、XSS）、浏览器渲染机制、异步和单线程、页面性能优化、防抖动（Debouncing）和节流阀（Throtting）、lazyload、前端错误监控、虚拟DOM等。</p>
<p>十二、编辑器相关。Sublime Text 是每个学前端的人都要用到的编辑器。另外，前端常见的IDE有两个：WebStorm 和 Visual Studio Code。WebStorm 什么都好，可就是太卡顿；VS Code就相对轻量很多。个人总结一下：用VS Code 的人越来越多，用 WebStorm 的人越来越少。</p>
<p>十三、TypeScript（简称TS）。ES 是 JS 的标准，TS 是 JS 的超集。TS属于进阶内容，建议把上面的基础掌握之后，再学TS。</p>
]]></content>
      <categories>
        <category>Web</category>
        <category>H5&amp;CSS</category>
        <category>basic</category>
      </categories>
  </entry>
  <entry>
    <title>1118 Birds in Forest</title>
    <url>/2020/06/29/1118-Birds-in-Forest/</url>
    <content><![CDATA[<p>Some scientists took pictures of thousands of birds in a forest. Assume that all the birds appear in the same picture belong to the same tree. You are supposed to help the scientists to count the maximum number of trees in the forest, and for any pair of birds, tell if they are on the same tree.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive number <em>N</em> (≤104) which is the number of pictures. Then <em>N</em> lines follow, each describes a picture in the format:</p>
<p><em>K</em> <em>B</em>1 <em>B</em>2 … <em>B**K</em></p>
<p>where <em>K</em> is the number of birds in this picture, and <em>B**i</em>‘s are the indices of birds. It is guaranteed that the birds in all the pictures are numbered continuously from 1 to some number that is no more than 104.</p>
<p>After the pictures there is a positive number <em>Q</em> (≤104) which is the number of queries. Then <em>Q</em> lines follow, each contains the indices of two birds.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first output in a line the maximum possible number of trees and the number of birds. Then for each query, print in a line <code>Yes</code> if the two birds belong to the same tree, or <code>No</code> if not.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 10 1 2</span><br><span class="line">2 3 4</span><br><span class="line">4 1 5 7 8</span><br><span class="line">3 9 6 4</span><br><span class="line">2</span><br><span class="line">10 5</span><br><span class="line">3 7</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 10</span><br><span class="line">Yes</span><br><span class="line">No</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> <span class="built_in">max</span>=<span class="number">10001</span>;</span><br><span class="line"><span class="keyword">int</span> fa[<span class="built_in">max</span>]=&#123;<span class="number">0</span>&#125;,sum[<span class="built_in">max</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> m,n,k;</span><br><span class="line"><span class="keyword">bool</span> exist[<span class="built_in">max</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findfather</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x!=fa[x])&#123;</span><br><span class="line">        x=fa[x];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fA=findfather(a);</span><br><span class="line">    <span class="keyword">int</span> fB=findfather(b);</span><br><span class="line">    <span class="keyword">if</span>(fA!=fB)&#123;</span><br><span class="line">        fa[fA]=fB;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">max</span>;i++)&#123;</span><br><span class="line">        fa[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> id,temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;id;</span><br><span class="line">        exist[id]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;i&lt;k<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;temp;</span><br><span class="line">            <span class="keyword">union</span>(id,temp);</span><br><span class="line">            exist[temp]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">max</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(exist[i]=<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> root=findfather(i);</span><br><span class="line">            sum[root]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> numtree=<span class="number">0</span>,numbird=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">max</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(exist[i]==<span class="literal">true</span>&amp;&amp;sum[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            numtree++;</span><br><span class="line">            numbird+=sum[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;numtree&lt;&lt;<span class="string">" "</span>&lt;&lt;numbird;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,(findfather(a)==findfather(b))?<span class="string">"Yes"</span>:<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>找到每幅画的根节点，并不断的union，最终会形成一个大的集合。然后利用给出的exist(true)得到集合的数目以及鸟的个数，最后是直接根据给出的节点来比较其根节点是否一致即可。此类问题可使用并查集模板解决。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>并查集</category>
      </categories>
  </entry>
  <entry>
    <title>1119 Pre- and Post-order Traversals</title>
    <url>/2020/06/28/1119-Pre-and-Post-order-Traversals/</url>
    <content><![CDATA[<p>Suppose that all the keys in a binary tree are distinct positive integers. A unique binary tree can be determined by a given pair of postorder and inorder traversal sequences, or preorder and inorder traversal sequences. However, if only the postorder and preorder traversal sequences are given, the corresponding tree may no longer be unique.</p>
<p>Now given a pair of postorder and preorder traversal sequences, you are supposed to output the corresponding inorder traversal sequence of the tree. If the tree is not unique, simply output any one of them.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer N (≤ 30), the total number of nodes in the binary tree. The second line gives the preorder sequence and the third line gives the postorder sequence. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first printf in a line <code>Yes</code> if the tree is unique, or <code>No</code> if not. Then print in the next line the inorder traversal sequence of the corresponding binary tree. If the solution is not unique, any answer would do. It is guaranteed that at least one solution exists. All the numbers in a line must be separated by exactly one space, and there must be no extra space at the end of the line.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">1 2 3 4 6 7 5</span><br><span class="line">2 6 7 4 5 3 1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">2 1 6 4 7 3 5</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3 4</span><br><span class="line">2 4 3 1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No</span><br><span class="line">2 1 3 4</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">50</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    node* lchild;</span><br><span class="line">    node* rchild;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> pre[maxn],post[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> only=<span class="literal">true</span>;</span><br><span class="line"><span class="function">node* <span class="title">create</span><span class="params">(<span class="keyword">int</span> prel,<span class="keyword">int</span> prer,<span class="keyword">int</span> postl,<span class="keyword">int</span> postr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(prel&gt;prer)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    node* root=<span class="keyword">new</span> node;</span><br><span class="line">    root-&gt;data=pre[prel];</span><br><span class="line">    <span class="keyword">int</span> j,numleft=<span class="number">0</span>;<span class="comment">// 在后序中找到先序的第二个结点,其下标为j;numleft为左子树结点个数</span></span><br><span class="line">    <span class="keyword">for</span>(j=postl;j&lt;postr;j++)&#123;</span><br><span class="line">        numleft++;</span><br><span class="line">        <span class="keyword">if</span>(post[j]==pre[prel+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==postr<span class="number">-1</span>)&#123;<span class="comment">// 先序第二个结点等于后序倒数第二个结点,说明不唯一</span></span><br><span class="line">        only=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    root-&gt;lchild=create(prel+<span class="number">1</span>,prel+numleft,postl,j);</span><br><span class="line">    root-&gt;rchild=create(prel+numleft+<span class="number">1</span>,prer,j+<span class="number">1</span>,postr<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; in;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inorder</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!root)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    inorder(root-&gt;lchild);</span><br><span class="line">    in.push_back(root-&gt;data);</span><br><span class="line">    inorder(root-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;pre[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;post[i];</span><br><span class="line">    &#125;</span><br><span class="line">    node* root=create(<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    inorder(root);</span><br><span class="line">    <span class="built_in">printf</span>(only?<span class="string">"Yes\n"</span>:<span class="string">"No\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;in.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;in[i];</span><br><span class="line">        <span class="built_in">printf</span>((i+<span class="number">1</span>&lt;in.<span class="built_in">size</span>())?<span class="string">" "</span>:<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此题需要考虑到只给出前序、后序，造成中序遍历不唯一的情况。已知前序第一个与后序最后一个为根节点，此时通过其相邻的节点来判断是否出现二义的状况。得到的子树默认为左子树。随后递归得到所有的lchild、rchild。最后中序遍历得到结果</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(12)</title>
    <url>/2020/06/21/C-%E5%BF%AB%E5%88%B7-12/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt; //数组，一端开口，不易选择插入、删除</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;array&gt; //连续的空间,类似数组</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_i;</span><br><span class="line">    A(<span class="keyword">int</span> temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"create function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    A(<span class="keyword">const</span> A &amp;temp)</span><br><span class="line">    &#123;</span><br><span class="line">        m_i = temp.m_i;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"copy function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    ~A()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"delete function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">array</span>&lt;<span class="built_in">string</span>, 5&gt; myarray = &#123;<span class="string">"I"</span>, <span class="string">"Love1Love2"</span>, <span class="string">"China"</span>&#125;;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"size()="</span> &lt;&lt; myarray.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    myarray[<span class="number">0</span>] = <span class="string">"it's a very long............"</span>;</span><br><span class="line">    myarray[<span class="number">4</span>] = <span class="string">"it's a very long............"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="built_in">string</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; myarray.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *p = myarray[i].c_str();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"================"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"element="</span> &lt;&lt; p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"index=%p\n"</span>, &amp;myarray[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"string index=%p\n"</span>, p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *p1 = <span class="string">"it's a very long............"</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *p2 = <span class="string">"it's a very long............"</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"p1 index=%p\n"</span>, p1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"p2 index=%p\n"</span>, p2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// func();</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;A&gt; myv;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt; myv.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"caoacity="</span> &lt;&lt; myv.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    myv.reserve(<span class="number">10</span>); <span class="comment">//预留10个空间，预先直到容器会容纳多少元素，可以大量提高程序的运行效率</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt; myv.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"caoacity="</span> &lt;&lt; myv.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"begin"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt; myv.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"caoacity="</span> &lt;&lt; myv.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        myv.push_back(A(i)); <span class="comment">//A(i)构造、push_back拷贝构造</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt; myv.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"caoacity="</span> &lt;&lt; myv.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"end"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"----------------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"index is %d dizi is %p m_i=%d\n"</span>, i, &amp;myv[i], myv[i].m_i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"-------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> iter = myv.<span class="built_in">begin</span>(); iter != myv.<span class="built_in">end</span>(); iter++)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            myv.erase(iter);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"index is %d dizi is %p m_i=%d\n"</span>, i, &amp;myv[i], myv[i].m_i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"-------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> icount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> iter = myv.<span class="built_in">begin</span>(); iter != myv.<span class="built_in">end</span>(); iter++)</span><br><span class="line">    &#123;</span><br><span class="line">        icount++;</span><br><span class="line">        <span class="keyword">if</span> (icount == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            myv.insert(iter, A(<span class="number">20</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"index is %d dizi is %p m_i=%d\n"</span>, i, &amp;myv[i], myv[i].m_i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>STL模板库</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(11)</title>
    <url>/2020/06/21/C-%E5%BF%AB%E5%88%B7-11/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">mutex resourse_mutex;</span><br><span class="line">once_flag g_flag; <span class="comment">//系统定义的标记</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>           //单例类</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Createfunc</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">        this_thread::sleep_for(dura);</span><br><span class="line">        m_instance = <span class="keyword">new</span> A();</span><br><span class="line">        <span class="keyword">static</span> Back back;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    A()&#123;&#125;; <span class="comment">//私有化构造函数</span></span><br><span class="line">    ~A()&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">static</span> A *m_instance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> A *<span class="title">get_instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// if (m_instance == nullptr)//不代表m_instance没被new，可能A正准备new时跳转到B来执行</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     unique_lock&lt;mutex&gt; mymutex(resourse_mutex);</span></span><br><span class="line">        <span class="comment">//     if (m_instance == nullptr)</span></span><br><span class="line">        <span class="comment">//     &#123;</span></span><br><span class="line">        <span class="comment">//         m_instance = new A();</span></span><br><span class="line">        <span class="comment">//         static Back back;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        call_once(g_flag, Createfunc);<span class="comment">//其中一个线程需要等待另一个执行完毕后才可执行,效率可能没上方的高</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"running over"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> m_instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Back</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Back()&#123;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">        ~Back()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (A::m_instance)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">delete</span> A::m_instance;</span><br><span class="line">                A::m_instance = <span class="literal">nullptr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"test"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">A *A::m_instance = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mythread</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"new thread is running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    A *a = A::get_instance();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"my thread is over"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//设计模式，程序灵活、维护方便</span></span><br><span class="line">    <span class="comment">//单例设计模式（使用频率高）,整个项目中有某些特殊的类，属于该类的对象只能创建一个。</span></span><br><span class="line">    <span class="comment">// A *a = A::get_instance();</span></span><br><span class="line">    <span class="comment">// a-&gt;func();</span></span><br><span class="line">    <span class="comment">// A::get_instance()-&gt;func(); //该装载数据装载</span></span><br><span class="line">    <span class="comment">//在自己创建的线程来创建A这个单例类的对象，这种线程可能不止一个。此时get_instanc成员函数需要互斥</span></span><br><span class="line">    <span class="function">thread <span class="title">myobj1</span><span class="params">(mythread)</span></span>; <span class="comment">//两个线程都是一个入口函数，意味着会有两条通路同时执行mythread函数</span></span><br><span class="line">    <span class="function">thread <span class="title">myobj2</span><span class="params">(mythread)</span></span>;</span><br><span class="line">    myobj1.join();</span><br><span class="line">    myobj2.join();</span><br><span class="line">    <span class="comment">//call_once(),第二个参数是函数名，能够保证函数A只被调用一次。需要与once_flag这个标记结合使用</span></span><br><span class="line">    <span class="comment">//来标记对应的函数A是否执行，调用后这个标记被设计成已调用的状态</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; msgRecource; <span class="comment">//用于代表玩家发来的数据</span></span><br><span class="line">    mutex my_mutex;</span><br><span class="line">    condition_variable conv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myResource</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"myResource running"</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function">unique_lock&lt;mutex&gt; <span class="title">guard</span><span class="params">(my_mutex)</span></span>;</span><br><span class="line">                msgRecource.push_back(i);</span><br><span class="line">                <span class="comment">//假如唤醒的线程正在执行一个事物，而不是卡在wait，此时调用唤醒无效</span></span><br><span class="line">                <span class="comment">// conv.notify_one(); //尝试将wait线程唤醒，执行完后</span></span><br><span class="line">                conv.notify_all();<span class="comment">//可以唤醒多个线程</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getResource</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> commend = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">unique_lock&lt;mutex&gt; <span class="title">guard</span><span class="params">(my_mutex)</span></span>;</span><br><span class="line">            <span class="comment">//若第二个参数返回值为true则wait直接返回，若第二个参数lambda表达式返回值是false，那么wait将解锁互斥量并堵塞到本行，直到其他某个线程调用</span></span><br><span class="line">            <span class="comment">//notify_one()成员函数为止。如果没有第二个参数那么就跟第二个返回false效果一样</span></span><br><span class="line">            <span class="comment">//当其他线程用notify_one()将wait()原来堵塞状态唤醒，wait继续执行（1、尝试重新获取互斥锁，若获取不到则会卡住等待获取，否则就上锁</span></span><br><span class="line">            <span class="comment">//2）若wait存在第二个参数便判断这个lambda表达式，表达式为false就对互斥量解锁并堵塞，再次等待notiify_one。若表达式为true，wait返回继续执行，此时互斥锁还是被锁）</span></span><br><span class="line">            <span class="comment">//若没有第二个参数，则wait返回，继续执行</span></span><br><span class="line">            conv.wait(guard, [<span class="keyword">this</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> (!msgRecource.empty())</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            commend = msgRecource.front();</span><br><span class="line">            msgRecource.pop_front();</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"getResource is running,get a element"</span>&lt;&lt;<span class="string">"thread id="</span>&lt;&lt;this_thread::get_id()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            guard.unlock();<span class="comment">//unique_lock的灵活性可以随时解锁，用来执行其他事务</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"end"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    A()&#123;&#125;;</span><br><span class="line">    ~A()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    A msg;</span><br><span class="line">    <span class="function">thread <span class="title">myout</span><span class="params">(&amp;A::getResource, &amp;msg)</span></span>;</span><br><span class="line">    <span class="function">thread <span class="title">myout2</span><span class="params">(&amp;A::getResource, &amp;msg)</span></span>;</span><br><span class="line">    <span class="function">thread <span class="title">myin</span><span class="params">(&amp;A::myResource, &amp;msg)</span></span>;</span><br><span class="line">    myin.join();</span><br><span class="line">    myout.join();</span><br><span class="line">    <span class="comment">//condition_variable，一个类，等待一个条件达成，与互斥量配合，生成这个类的对象</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;future&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atomic&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mythread</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() end"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mythread3</span><span class="params">(<span class="keyword">int</span> mypar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; mypar &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread3() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    <span class="keyword">return</span> mypar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mythread2</span><span class="params">(shared_future&lt;<span class="keyword">int</span>&gt; &amp;mypar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread2() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">auto</span> result = mypar.<span class="built_in">get</span>(); <span class="comment">//第二次get出错，由于get是一个移动语义，get后mypar中为空</span></span><br><span class="line">    <span class="comment">//使用share_future,赋值数据</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread2() end"</span> &lt;&lt; result &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mythread4</span><span class="params">(shared_future&lt;<span class="keyword">int</span>&gt; &amp;mypar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread4() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">auto</span> result = mypar.<span class="built_in">get</span>(); <span class="comment">//第二次get出错，由于get是一个移动语义，get后mypar中为空</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread4() end"</span> &lt;&lt; result &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">atomic&lt;<span class="keyword">int</span>&gt; count_sum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// mutex my_mutex;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mycount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// my_mutex.lock();</span></span><br><span class="line">        count_sum++;</span><br><span class="line">        <span class="comment">// my_mutex.unlock;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">atomic&lt;<span class="keyword">bool</span>&gt; ifend = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ifend</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">1000</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (ifend == <span class="literal">false</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        this_thread::sleep_for(dura);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; "main"</span></span><br><span class="line">    <span class="comment">//      &lt;&lt; "thread_id=" &lt;&lt; this_thread::get_id() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; f_int = async(launch::deferred, mythread);</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "continue...." &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// // cout &lt;&lt; f_int.get() &lt;&lt; endl; //等待线程执行结束并返回结果</span></span><br><span class="line">    <span class="comment">// future_status status = f_int.wait_for(chrono::milliseconds(1000));</span></span><br><span class="line">    <span class="comment">// if (status == future_status::timeout) //超时表示线程还未执行完，就希望返回</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "timeout..........." &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// else if (status == future_status::ready)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "thread success" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; f_int.get() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// else if (status == future_status::deferred)</span></span><br><span class="line">    <span class="comment">// &#123; //延迟执行 async(launch::deferred,mythread); 使用get、wait线程执行。此时在主线程执行，没有创建一个子线程（很少用）</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "deferred" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; f_int.get() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello word" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "---------------" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// // cout &lt;&lt; "mythread() start" &lt;&lt; this_thread::get_id() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// // packaged_task&lt;int(int)&gt; mtyp(mythread3); //将函数mythread3包装</span></span><br><span class="line">    <span class="comment">// // thread t1(ref(mtyp), 10);                //线程直接开始执行</span></span><br><span class="line">    <span class="comment">// // t1.join();</span></span><br><span class="line">    <span class="comment">// // future&lt;int&gt; result = mtyp.get_future();</span></span><br><span class="line">    <span class="comment">// // thread t2(mythread2, ref(result));</span></span><br><span class="line">    <span class="comment">// // t2.join();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "mythread() start" &lt;&lt; this_thread::get_id() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// packaged_task&lt;int(int)&gt; mtyp(mythread3); //将函数mythread3包装</span></span><br><span class="line">    <span class="comment">// thread t1(ref(mtyp), 10);                //线程直接开始执行</span></span><br><span class="line">    <span class="comment">// t1.join();</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result1 = mtyp.get_future();</span></span><br><span class="line">    <span class="comment">// shared_future&lt;int&gt; result(move(result1));</span></span><br><span class="line">    <span class="comment">// // shared_future&lt;int&gt; result(mtyp.get_future());</span></span><br><span class="line">    <span class="comment">// thread t2(mythread2, ref(result));</span></span><br><span class="line">    <span class="comment">// t2.join();</span></span><br><span class="line">    <span class="comment">// thread t3(mythread4, ref(result));</span></span><br><span class="line">    <span class="comment">// t3.join();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//原子性</span></span><br><span class="line">    <span class="function">thread <span class="title">thread1</span><span class="params">(Ifend)</span></span>;</span><br><span class="line">    <span class="function">thread <span class="title">thread2</span><span class="params">(Ifend)</span></span>; <span class="comment">//避免调用同一个函数出错</span></span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    ifend=<span class="literal">true</span>;</span><br><span class="line">    thread1.join();</span><br><span class="line">    thread2.join();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"exit"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//使用原子操作，执行不会被打断,互斥量是对一个代码段，而原子操作针对一个变量。atomic(类模板)</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; count_sum &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;future&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// int mythread(int a)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; "thread id=" &lt;&lt; this_thread::get_id() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     chrono::milliseconds dura(2000);</span></span><br><span class="line"><span class="comment">//     this_thread::sleep_for(dura);</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; a * 3 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     return a * 2;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mythread</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">2000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"main thread id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">future</span>&lt;<span class="keyword">int</span>&gt; result = async(mythread); <span class="comment">//当不使用额外参数时与同时使用二者一样。。。。更正前面课程</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = async(launch::deferred, mythread);</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = async(launch::async|launch::deferred, mythread);</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = async(launch::deferred, mythread); //延迟调用并不创建新线程，延迟到调用get、wait</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; result.<span class="built_in">get</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//launch:deferred:延迟调用   launch::async：强制创建新的线程</span></span><br><span class="line">    <span class="comment">//std::thread()如果系统资源紧张，创建线程可能失败。async称为创建一个异步任务</span></span><br><span class="line">    <span class="comment">//二者最大的不同在于async有时不会创建新线程，eg:调用get时直接调用线程入口函数</span></span><br><span class="line">    <span class="comment">//同时使用launch::async|launch:deferred,|意味着调用async的行为可能是两者之一，此时需要系统自行决定使用</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//std::thread()创建线程过多，会导致创建失败，系统报告异常</span></span><br><span class="line">    <span class="comment">//std::async()创建异步任务，很容易拿到入口函数返回值。并且一般不会崩溃，如果系统资源紧张，这种async不加额外参数的调用</span></span><br><span class="line">    <span class="comment">//不会创建新线程，而是后续谁调用get来请求结果。也可强制创建，但此时也会崩溃。一般线程数量不超过100-200</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">future</span>&lt;<span class="keyword">int</span>&gt; f_int = async(launch::deferred, mythread);</span><br><span class="line">    future_status status = f_int.wait_for(chrono::milliseconds(<span class="number">1000</span>));</span><br><span class="line">    <span class="keyword">if</span> (status == future_status::timeout) <span class="comment">//超时表示线程还未执行完，就希望返回</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"timeout..........."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (status == future_status::<span class="built_in">ready</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread success"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; f_int.<span class="built_in">get</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (status == future_status::deferred)</span><br><span class="line">    &#123; <span class="comment">//延迟执行 async(launch::deferred,mythread); 使用get、wait线程执行。此时在主线程执行，没有创建一个子线程（很少用）</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"deferred"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; f_int.<span class="built_in">get</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"hello word"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>并发与多线程</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(10)</title>
    <url>/2020/06/21/C-%E5%BF%AB%E5%88%B7-10/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myprint</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"coming function "</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g_v = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="string">" g_v="</span> &lt;&lt; g_v[<span class="number">0</span>] &lt;&lt; g_v[<span class="number">1</span>] &lt;&lt; g_v[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; msgRecource; <span class="comment">//用于代表玩家发来的数据</span></span><br><span class="line">    mutex my_mutex;</span><br><span class="line">    mutex my_mutex1;</span><br><span class="line">    mutex my_mutex2;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myResource</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"myResource running"</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 1)lock_guard&lt;mutex&gt; guard(my_mutex);</span></span><br><span class="line">                <span class="comment">// 1)my_mutex.lock();</span></span><br><span class="line">                <span class="comment">// 2）死锁my_mutex1.lock();</span></span><br><span class="line">                <span class="comment">// my_mutex2.lock();</span></span><br><span class="line">                <span class="built_in">std</span>::lock(my_mutex1,my_mutex2);</span><br><span class="line">                <span class="function">lock_guard&lt;mutex&gt; <span class="title">guard1</span><span class="params">(my_mutex1,adopt_lock)</span></span>;</span><br><span class="line">                <span class="function">lock_guard&lt;mutex&gt; <span class="title">guard2</span><span class="params">(my_mutex2,adopt_lock)</span></span>;</span><br><span class="line">                msgRecource.push_back(i); <span class="comment">//数字i即是收到命令，加到消息队列中</span></span><br><span class="line">                <span class="comment">// my_mutex2.unlock();</span></span><br><span class="line">                <span class="comment">// my_mutex1.unlock();</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 1)my_mutex.unlock();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">getmsg</span><span class="params">(<span class="keyword">int</span> &amp;commend)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 1)lock_guard&lt;mutex&gt; guard(my_mutex); //lock_guard构造函数中执行lock(),析构函数中执行unlock()</span></span><br><span class="line">        <span class="comment">// 1)my_mutex.lock();</span></span><br><span class="line">        <span class="comment">// my_mutex2.lock();</span></span><br><span class="line">        <span class="comment">// my_mutex1.lock();</span></span><br><span class="line">        <span class="built_in">std</span>::lock(my_mutex1,my_mutex2);</span><br><span class="line">        <span class="function">lock_guard&lt;mutex&gt; <span class="title">guard1</span><span class="params">(my_mutex1,adopt_lock)</span></span>;<span class="comment">//adopt_lock标记已经lock，不需要在lock_guard再lock</span></span><br><span class="line">        <span class="function">lock_guard&lt;mutex&gt; <span class="title">guard2</span><span class="params">(my_mutex2,adopt_lock)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (!msgRecource.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> commend = msgRecource.front();</span><br><span class="line">            msgRecource.pop_front();</span><br><span class="line">            <span class="comment">// 1)my_mutex.unlock();</span></span><br><span class="line">            <span class="comment">// my_mutex1.unlock();</span></span><br><span class="line">            <span class="comment">// my_mutex2.unlock();</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// my_mutex1.unlock();</span></span><br><span class="line">        <span class="comment">// my_mutex2.unlock();</span></span><br><span class="line">        <span class="comment">// 1)my_mutex.unlock();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getResource</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> commend = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> result = getmsg(commend);</span><br><span class="line">            <span class="keyword">if</span> (result == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"getResource is running"</span> &lt;&lt; commend &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"nullptr"</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"end"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    A()&#123;&#125;;</span><br><span class="line">    ~A()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//多个线程执行顺序混乱，与操作系统内部运行调度机制有关（了解）</span></span><br><span class="line">    <span class="comment">//主线程等待所有子线程结束后执行</span></span><br><span class="line">    <span class="comment">// vector&lt;thread&gt; mythreads;</span></span><br><span class="line">    <span class="comment">// for (int i = 0; i &lt; 10; i++)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     // mythreads.push_back(thread(myprint, i));</span></span><br><span class="line">    <span class="comment">//     mythreads.push_back(thread(print, i)); //只读数据共享可直接读</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// for (auto iter = mythreads.begin(); iter != mythreads.end(); iter++)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     iter-&gt;join();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "everything is end" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//1）数据共享，有读有写，最简单每次仅有一个读或者写</span></span><br><span class="line">    <span class="comment">//游戏服务器</span></span><br><span class="line">    A msg;</span><br><span class="line">    <span class="function">thread <span class="title">myin</span><span class="params">(&amp;A::myResource, &amp;msg)</span></span>; <span class="comment">//第二个&amp;保证线程中对象一致</span></span><br><span class="line">    <span class="function">thread <span class="title">myout</span><span class="params">(&amp;A::getResource, &amp;msg)</span></span>;</span><br><span class="line">    myin.join();</span><br><span class="line">    myout.join();</span><br><span class="line">    <span class="comment">//共享数据操作时加锁，其他操作操作必须等待共享数据的线程解锁</span></span><br><span class="line">    <span class="comment">//互斥量（mutex）,类对象（锁），多个线程使用lock()加锁，只有一个线程可以成功，使用数量需要适宜</span></span><br><span class="line">    <span class="comment">//死锁，当两个互斥量顺序一致不会产生死锁</span></span><br><span class="line">    <span class="comment">//std::lock()函数模板，一次可以锁住两个及以上的互斥量，不会产生死锁，如果有一个互斥量未被锁住</span></span><br><span class="line">    <span class="comment">// 会一直等待所有都被锁住才向下进行，要么两个都锁住要么都不锁。若只锁住一个另一个未被锁立刻释放。</span></span><br><span class="line">    <span class="comment">//std::lock(my_mutex1,my_mutex2);</span></span><br><span class="line">    <span class="comment">//lock_guard&lt;mutex&gt; guard(my_mutex,adopt_lock);使用这样的写法，可以同时lock多个互斥量并且可省略unlock</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//但是同时一下lock不是很常用，建议每个互斥量lock,unlock</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; msgRecource; <span class="comment">//用于代表玩家发来的数据</span></span><br><span class="line">    mutex my_mutex;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">unique_lock&lt;mutex&gt; <span class="title">rtn_unique</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">unique_lock&lt;mutex&gt; <span class="title">temp</span><span class="params">(my_mutex)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> temp;<span class="comment">//从函数返回一个局部unique对象，调用unique_lock移动构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myResource</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"myResource running"</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// my_mutex.lock();</span></span><br><span class="line">                <span class="comment">// unique_lock&lt;mutex&gt; guard(my_mutex,adopt_lock);</span></span><br><span class="line">                <span class="function">unique_lock&lt;mutex&gt; <span class="title">guard</span><span class="params">(my_mutex, try_to_lock)</span></span>; <span class="comment">//尝试拿锁</span></span><br><span class="line">                <span class="comment">// if(guard.try_lock==true)</span></span><br><span class="line">                <span class="keyword">if</span> (guard.owns_lock()) <span class="comment">//判断是否拿到锁</span></span><br><span class="line">                &#123;</span><br><span class="line">                    msgRecource.push_back(i); <span class="comment">//数字i即是收到命令，加到消息队列中</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"can't catch lock"</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">getmsg</span><span class="params">(<span class="keyword">int</span> &amp;commend)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// unique_lock&lt;mutex&gt; guard(my_mutex); //lock_guard构造函数中执行lock(),析构函数中执行unlock()</span></span><br><span class="line">        unique_lock&lt;mutex&gt; guard=rtn_unique();</span><br><span class="line">        <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">10000</span>)</span></span>;</span><br><span class="line">        this_thread::sleep_for(dura); <span class="comment">//程序休息10秒</span></span><br><span class="line">        <span class="keyword">if</span> (!msgRecource.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> commend = msgRecource.front();</span><br><span class="line">            msgRecource.pop_front();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getResource</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> commend = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> result = getmsg(commend);</span><br><span class="line">            <span class="keyword">if</span> (result == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"getResource is running"</span> &lt;&lt; commend &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"nullptr"</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"end"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    A()&#123;&#125;;</span><br><span class="line">    ~A()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    A msg;</span><br><span class="line">    <span class="function">thread <span class="title">myin</span><span class="params">(&amp;A::myResource, &amp;msg)</span></span>;</span><br><span class="line">    <span class="function">thread <span class="title">myout</span><span class="params">(&amp;A::getResource, &amp;msg)</span></span>;</span><br><span class="line">    myin.join();</span><br><span class="line">    myout.join();</span><br><span class="line">    <span class="comment">//unique_lock是一个类模板，一般使用lock_guard(取代mutex的lock、unlock)</span></span><br><span class="line">    <span class="comment">//与lock_guard相比效率低、内存大，但是灵活(使用unique_lock后可以使用过程中unlock处理一些非共享后再加锁)</span></span><br><span class="line">    <span class="comment">//try_to_lock尝试用metex的lock去锁定这个mutex,但若没有锁定成功也会立即返回，不会阻塞。使用前提，不能够先lock</span></span><br><span class="line">    <span class="comment">//defer_lock不能够先lock，没有给mutex加锁，初始化一个没有加锁的mutex</span></span><br><span class="line">    <span class="comment">//unique_lock</span></span><br><span class="line">    <span class="comment">//成员函数1)try_lock()（与defer_lock配合使用）类似try_to_lock()</span></span><br><span class="line">    <span class="comment">//2)release()，返回所管理的mutex对象指针，并释放所有权. mutex *a=guard.release()需要自己a-&gt;unlock()</span></span><br><span class="line">    <span class="comment">//unique_lock&lt;mutex&gt; a(a1); unique_lock&lt;mutex&gt; a2(move(a));可以使用move移动所有权</span></span><br><span class="line">    <span class="comment">//另外unique_lock可以返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;future&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mythread</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() end"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mythread3</span><span class="params">(<span class="keyword">int</span> mypar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; mypar &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() end"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">mythread2</span><span class="params">(<span class="keyword">int</span> mypar)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; mypar &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">        this_thread::sleep_for(dura);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() end"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    A()&#123;&#125;;</span><br><span class="line">    ~A()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;packaged_task&lt;<span class="keyword">int</span>(<span class="keyword">int</span>)&gt; &gt; myvector;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mythread4</span><span class="params">(promise&lt;<span class="keyword">int</span>&gt; &amp;temp,<span class="keyword">int</span> sale)</span></span>&#123;</span><br><span class="line">    sale++;</span><br><span class="line">    sale*=<span class="number">10</span>;</span><br><span class="line">    <span class="function">chrono::milliseconds <span class="title">dura</span><span class="params">(<span class="number">5000</span>)</span></span>;</span><br><span class="line">    this_thread::sleep_for(dura);</span><br><span class="line">    <span class="keyword">int</span> result=sale;</span><br><span class="line">    temp.set_value(result);<span class="comment">//结果值保存到temp</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mythread5</span><span class="params">(<span class="built_in">future</span>&lt;<span class="keyword">int</span>&gt; &amp;temp)</span></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> result=temp.<span class="built_in">get</span>();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"mythread2 result"</span>&lt;&lt;result&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//async是一个函数模板，用来启动一步任务，启动后返回一个future对象(类模板)</span></span><br><span class="line">    <span class="comment">//future对象中含有线程入口函数返回的结果，通过调用future的成员函数get获取结果。</span></span><br><span class="line">    <span class="comment">//提供一种访问异步操作结果的机制，即结果可能无法立即得到，但在线程执行完毕就能够得到结果（future对象中保存一个值，在将来得到）</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"main"</span>&lt;&lt; <span class="string">"thread_id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">// future&lt;int&gt; f_int = async(mythread);</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "continue...." &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// int def = 0;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f_int.get() &lt;&lt; endl; //等待线程执行结束并返回结果</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello word" &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// A a;</span></span><br><span class="line">    <span class="comment">// int temppar = 20;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "main"&lt;&lt; "thread_id=" &lt;&lt; this_thread::get_id() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; f_int2 = async(launch::async,&amp;A::mythread2, &amp;a, temppar); //第二个参数为对象引用，保证线程中使用同一个对象</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "continue...." &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// int def = 0;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f_int2.get() &lt;&lt; endl; //等待线程执行结束并返回结果</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello word" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// return 0;</span></span><br><span class="line">    <span class="comment">//可以额外向async()传递一个参数。该参数类型是launch(枚举类型)，来表达一些特殊目的</span></span><br><span class="line">    <span class="comment">//eg:1）launch:deferred:表示线程入口函数调用被延迟到future的wait()或get()函数调用时才执行。本例中表示若没调用get则线程直接未被创建</span></span><br><span class="line">    <span class="comment">//并且没有创建新线程，只是在主线程中调用的线程入口函数。2）launch::async,不需要get线程就自动启动执行，而且是新的子线程。async默认使用此标记</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//package_task:打包任务，类模板，模板参数为可调用对象，将各种可调用对象包装便于作为线程入口函数调用。</span></span><br><span class="line">    <span class="comment">// packaged_task&lt;int(int)&gt; mtyp(mythread3); //将函数mythread3包装</span></span><br><span class="line">    <span class="comment">// thread t1(ref(mtyp), 10); //线程直接开始执行</span></span><br><span class="line">    <span class="comment">// t1.join();</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = mtyp.get_future(); //future对象含有入口函数的返回结果,这里保存mythread3返回结果</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; result.get() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello word" &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="function">packaged_task&lt;<span class="title">int</span><span class="params">(<span class="keyword">int</span>)</span>&gt; <span class="title">mtyp</span><span class="params">([](<span class="keyword">int</span> mypar) &#123;</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="built_in">cout</span> &lt;&lt; mypar &lt;&lt; <span class="built_in">endl</span>;</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() start"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span></span></span><br><span class="line"><span class="function"><span class="params">        chrono::milliseconds dura(<span class="number">5000</span>);</span></span></span><br><span class="line"><span class="function"><span class="params">        this_thread::sleep_for(dura);</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"mythread() end"</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">return</span> <span class="number">5</span>;</span></span></span><br><span class="line"><span class="function"><span class="params">    &#125;)</span></span>;</span><br><span class="line">    <span class="comment">// thread t1(ref(mtyp), 10); //线程直接开始执行</span></span><br><span class="line">    <span class="comment">// t1.join();</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = mtyp.get_future(); //future对象含有入口函数的返回结果,这里保存mythread3返回结果</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; result.get() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello word" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//packaged_task包装起来的可调用对象可以直接调用</span></span><br><span class="line">    <span class="comment">// mtyp(100);</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = mtyp.get_future();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; result.get() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hello word" &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// myvector.push_back(move(mtyp));</span></span><br><span class="line">    <span class="comment">// packaged_task&lt;int(int)&gt; mtyp2;</span></span><br><span class="line">    <span class="comment">// auto iter=myvector.begin();</span></span><br><span class="line">    <span class="comment">// mtyp2=move(*iter);</span></span><br><span class="line">    <span class="comment">// myvector.erase(iter);</span></span><br><span class="line">    <span class="comment">// mtyp2(200);</span></span><br><span class="line">    <span class="comment">// future&lt;int&gt; result = mtyp2.get_future();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; result.get() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//promise,可以在一个线程中赋值，在另一个线程中去除结果</span></span><br><span class="line">    promise&lt;<span class="keyword">int</span>&gt; myprom;<span class="comment">//声明一个promise对象，保存值类型为int</span></span><br><span class="line">    <span class="function">thread <span class="title">t2</span><span class="params">(mythread4,ref(myprom),<span class="number">44</span>)</span></span>;</span><br><span class="line">    t2.join();</span><br><span class="line">    <span class="comment">//获取结果</span></span><br><span class="line">    <span class="built_in">future</span>&lt;<span class="keyword">int</span>&gt; ful=myprom.get_future();</span><br><span class="line">    <span class="function">thread <span class="title">t3</span><span class="params">(mythread5,ref(ful))</span></span>;</span><br><span class="line">    t3.join();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"hello word"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>并发与多线程</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(9)</title>
    <url>/2020/06/21/C-%E5%BF%AB%E5%88%B7-9/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myprint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//自己创建的线程也需要从一个函数开始执行</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running1"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running2"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running3"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running4"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running5"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_i;</span><br><span class="line">    TA(<span class="keyword">int</span> i) : m_i(i) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"create function running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    TA(<span class="keyword">const</span> TA &amp;ta):m_i(ta.m_i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"copy function running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running1"</span> &lt;&lt; m_i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running2"</span> &lt;&lt; m_i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running3"</span> &lt;&lt; m_i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread is running4"</span> &lt;&lt; m_i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ~TA()&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"delete function running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 并发：两个或更多的任务同时发生，一个程序同时执行多个独立的任务。单核cpu某一时刻只能执行一个任务，</span></span><br><span class="line">    <span class="comment">// 由操作系统调度，每秒钟进行任务切换（上下文切换，需要时间开销（操作系统需要保存切换状态、执行进度）），并不是真的并发。</span></span><br><span class="line">    <span class="comment">// 多核cpu，可以实现真正的并发。使用原因：可以同时进行多个任务，提高性能</span></span><br><span class="line">    <span class="comment">// 进程：可执行程序运行便是进程</span></span><br><span class="line">    <span class="comment">// 线程：每个进程都有一个主线程（至少有一个线程），主线程唯一。可以理解成一条代码的执行通路，除主线程外，可以创建其他线程</span></span><br><span class="line">    <span class="comment">// （走别的路，可以去别的地方）每创建一个线程可干一个事。但每个线程都需要一个独立堆栈空间，耗费空间。</span></span><br><span class="line">    <span class="comment">// 多进程通信（同一电脑：管道、文件、消息队列、共享内存）、（不同电脑：socket）</span></span><br><span class="line">    <span class="comment">// 多线程并发：单个进程创建多个线程，一个进程中多个线程共享内存地址。全局变量、指针、引用都可以在线程之间传递</span></span><br><span class="line">    <span class="comment">// 多线程开销远小于多进程。共享内存会带来新问题：数据一致性。</span></span><br><span class="line">    <span class="comment">// 优先使用多线程。线程启动速度快、轻量级、系统资源开销少，但需要注意数据一致性问题</span></span><br><span class="line">    <span class="comment">// C++11新标准线程库.</span></span><br><span class="line">    <span class="comment">// 之前使用pthread_create();在linux创建线程、windows使用CreateThread();不能跨平台</span></span><br><span class="line">    <span class="comment">// 现在可以具备可移植性，</span></span><br><span class="line">    <span class="comment">//实际上是主线程执行，从main函数返回，则进程执行完毕</span></span><br><span class="line">    <span class="comment">//进程执行完毕的标志是主线程是否执行完毕，一般情况其他未完成的子线程也会被终止</span></span><br><span class="line">    <span class="comment">//一般情况想保持子线程运行则要求主线程保持运行</span></span><br><span class="line">    <span class="comment">// thread mytob(myprint); //创建线程、线程执行起点</span></span><br><span class="line">    <span class="comment">// //mytob.join();//thread：标准库中的类 1)join():阻塞主线程，主线程等待子线程执行完毕，然后两者汇合</span></span><br><span class="line">    <span class="comment">// mytob.detach();</span></span><br><span class="line">    <span class="comment">// //2)detach();分离，传统需要主线程等待子线程，然后在自己退出。此函数主线程可以与子线程分开执行不必等待。</span></span><br><span class="line">    <span class="comment">// //一旦执行此函数，与主线程关联的thread对象会失去主线程，子线程驻留在后台，被系统接管，负责清理监控</span></span><br><span class="line">    <span class="comment">// //3)joinable();判断是否可以成功使用join()或者detach()的，返回true或者false</span></span><br><span class="line">    <span class="comment">// if (mytob.joinable())</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "true" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//     mytob.join();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// else</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "false" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">int</span> myi = <span class="number">10</span>;</span><br><span class="line">    <span class="function">TA <span class="title">ta</span><span class="params">(myi)</span></span>;</span><br><span class="line">    <span class="function">thread <span class="title">mytab3</span><span class="params">(ta)</span></span>;<span class="comment">//调用拷贝构造函数</span></span><br><span class="line">    mytab3.<span class="built_in">detach</span>();<span class="comment">//调用detach后ta这个对象不在，是被复制到线程中，执行完主线程后被销毁，但被复制的对象存在</span></span><br><span class="line">    <span class="comment">//只要类中没有引用、指针就不会出问题。</span></span><br><span class="line">    <span class="comment">// mytab3.join();</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"I love china"</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//此时有两个线程在跑，即是有一条路被堵住另一条也可运行</span></span><br><span class="line">    <span class="comment">//使用lamdba创建</span></span><br><span class="line">    <span class="keyword">auto</span> almbdad = [] &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"my thread is running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function">thread <span class="title">mytab4</span><span class="params">(almbdad)</span></span>;</span><br><span class="line">    mytab4.join();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_i;</span><br><span class="line">    A(<span class="keyword">int</span> a) : m_i(a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"create function running"</span></span><br><span class="line">             &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span> &lt;&lt; <span class="string">"id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    A(<span class="keyword">const</span> A &amp;a) : m_i(a.m_i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"copy function running"</span></span><br><span class="line">             &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span> &lt;&lt; <span class="string">"id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ~A()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"delete function running"</span></span><br><span class="line">             &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span> &lt;&lt; <span class="string">"id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">thread_work</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"thread_work function running"</span>&lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span> &lt;&lt; <span class="string">"id="</span> &lt;&lt; this_thread::get_id() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// void myprint1(const int i, const A &amp;p)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; &amp;p &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     return;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// void myprint(const int &amp;i, char *p)</span></span><br><span class="line"><span class="comment">// void myprint(const int i, const string &amp;p)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; i &lt;&lt; endl;         //i并不是&amp;，实际是值传递，那么即使主线程detach子线程，也可认为子线程安全</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; p.c_str() &lt;&lt; endl; //不安全，detach子线程存在问题</span></span><br><span class="line"><span class="comment">//     return;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// void myprint2(const A &amp;p)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; &amp;p &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     return;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// void myprint3(A &amp;p)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     p.m_i=100;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; &amp;p &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     return;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// void myprint4(unique_ptr&lt;int&gt; p)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; *p &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     return;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1)</span></span><br><span class="line">    <span class="comment">// int temp = 10;</span></span><br><span class="line">    <span class="comment">// char tempc[] = "hello word";</span></span><br><span class="line">    <span class="comment">// // thread myth(myprint, temp, tempc);//tempc转换成string的时刻,事实上存在main执行完后系统才用tempc转string</span></span><br><span class="line">    <span class="comment">// //即tempc被回收之后还在使用</span></span><br><span class="line">    <span class="comment">// thread myth(myprint, temp, string(tempc)); //此时可以避免，直接将tempc转换成string</span></span><br><span class="line">    <span class="comment">// myth.detach();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "end" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//2)</span></span><br><span class="line">    <span class="comment">// int tem = 10;</span></span><br><span class="line">    <span class="comment">// int mysecond = 14;</span></span><br><span class="line">    <span class="comment">// thread mypr(myprint1, tem, A(mysecond)); //由于存在含一个参数构造函数，可以用于类型转换为A类型</span></span><br><span class="line">    <span class="comment">// mypr.detach();                           //直接执行end，此时可解释上方的tempc在main执行后转换,若此时强制转换为A类型(临时对象)可解决</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "end" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//总结：使用detach时，当涉及int这种简单类型使用值传递，不要用引用等。若是传递类对象避免隐式类型转换,总之最好不使用detach</span></span><br><span class="line">    <span class="comment">//线程id，子线程、主线程id不同 this_thread::get_id()获取</span></span><br><span class="line">    <span class="comment">//3)</span></span><br><span class="line">    <span class="comment">// int t=20;</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;"main thread id="&lt;&lt;this_thread::get_id()&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// thread mythread(myprint2,A(t));//使用临时对象，所有A类对象都在main函数中构建完毕，否则是在子线程构造</span></span><br><span class="line">    <span class="comment">// mythread.join();</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;"show"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">//4)std::ref函数</span></span><br><span class="line">    <span class="comment">// A a(20);</span></span><br><span class="line">    <span class="comment">// thread a_to(myprint3,ref(a));//真正使用a来作为参数,可以修改引用中的值,也可省略const</span></span><br><span class="line">    <span class="comment">// a_to.join();</span></span><br><span class="line">    <span class="comment">//5)智能指针</span></span><br><span class="line">    <span class="comment">// unique_ptr&lt;int&gt; myp(new int(20));</span></span><br><span class="line">    <span class="comment">// thread d(myprint4, move(myp));</span></span><br><span class="line">    <span class="comment">// d.join();</span></span><br><span class="line">    <span class="function">A <span class="title">mya</span><span class="params">(<span class="number">22</span>)</span></span>;</span><br><span class="line">    <span class="function">thread <span class="title">myg</span><span class="params">(&amp;A::thread_work,&amp;mya,<span class="number">18</span>)</span></span>;</span><br><span class="line">    myg.join();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>并发与多线程</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(8)</title>
    <url>/2020/06/19/C-%E5%BF%AB%E5%88%B7-8/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//shared_ptr使用场景，性能分析</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//1)</span></span><br><span class="line"><span class="comment">// shared_ptr&lt;int&gt; create(int value)&#123;</span></span><br><span class="line"><span class="comment">//     return make_shared&lt;int&gt;(value);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// shared_ptr&lt;int&gt;  myfunc(int value)&#123;</span></span><br><span class="line"><span class="comment">//     shared_ptr&lt;int&gt; ptemp=create(value);</span></span><br><span class="line"><span class="comment">//     return ptemp;//void 离开作用域ptemp会被自动释放，指向的内存也会释放</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//2)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">proc</span><span class="params">(<span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CT</span>:</span> <span class="keyword">public</span> enable_shared_from_this&lt;CT&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;CT&gt; <span class="title">getmyself</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shared_from_this();<span class="comment">//通过这种方法返回智能指针</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1）</span></span><br><span class="line">    <span class="comment">// myfunc(33);//不用变量来接还是会被销毁</span></span><br><span class="line">    <span class="comment">// auto pt=myfunc(44);//使用变量接，返回的shared_ptr不会被销毁</span></span><br><span class="line">    <span class="comment">//2)</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; t3(new int); //使用这种</span></span><br><span class="line">    <span class="comment">// int *t = new int(20);</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; t2(t);</span></span><br><span class="line">    <span class="comment">// proc(t2);</span></span><br><span class="line">    <span class="comment">// // proc(shared_ptr&lt;int&gt;(t));//参数是一个临时的shared_ptr,用一个裸指针显示构造</span></span><br><span class="line">    <span class="comment">// *t2 = 90; //将普通裸指针绑定到智能指针后，内存需要shared_ptr来管理，裸指针不应再出现</span></span><br><span class="line">    <span class="comment">// //3)get,get返回的指针不能delete,否则会报错，也不能将get返回指针绑定到其他智能指针上</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; t4(new int(100));</span></span><br><span class="line">    <span class="comment">// int *e = t4.get();</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     shared_ptr&lt;int&gt; t5(e); //出错</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//4)不要把类对象指针（this）作为shared_ptr返回，改用enable_shared_from_this（实际上调用了lock方法，让shared_ptr指针计数加一，同时返回）</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;CT&gt; pct1(new CT);</span></span><br><span class="line">    <span class="comment">// // shared_ptr&lt;CT&gt; pct2=pct1;</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;CT&gt; pct3=pct1-&gt;getmyself();//此时返回的智能指针都是安全的</span></span><br><span class="line">    <span class="comment">//5）移动语义</span></span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">p1</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">20</span>))</span></span>;</span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">p2</span><span class="params">(<span class="built_in">move</span>(p1))</span></span>;<span class="comment">//移动构造新的智能指针，p1不再指向该对象（置空），引用计数依旧为1</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; p3;</span><br><span class="line">    p3=<span class="built_in">move</span>(p2);<span class="comment">//p2指向空，p3指向该对象，引用计数依旧为1.移动构造函数比赋值（拷贝）构造函数快，移动赋值运算符也快</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>//优先使用make_shared</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//unique_ptr常用操作</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    A()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    ~A()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">myfunc</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt;(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"hello"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//unique_ptr,独占式智能指针，同一时刻只能有一个unique_ptr指向这个对象</span></span><br><span class="line">    <span class="comment">//当unique_ptr被销毁其所指向的对象也被销毁</span></span><br><span class="line">    <span class="comment">// unique_ptr&lt;int&gt; p;</span></span><br><span class="line">    <span class="comment">// if (p == nullptr)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "unique_ptr is nullptr" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">p2</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">20</span>))</span></span>;</span><br><span class="line">    <span class="comment">//make_unique();函数</span></span><br><span class="line">    <span class="comment">// unique_ptr&lt;int&gt; p4 = make_unique&lt;int&gt;(200);</span></span><br><span class="line">    <span class="comment">// auto p3 = make_unique&lt;int&gt;(100);</span></span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">ps1</span><span class="params">(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"I love china"</span>))</span></span>;</span><br><span class="line">    <span class="comment">// unique_ptr&lt;string&gt; ps2(ps1);//该智能指针不支持拷贝，不支持赋值</span></span><br><span class="line">    <span class="comment">//1）移动语义</span></span><br><span class="line">    <span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; ps3 = <span class="built_in">move</span>(ps1);</span><br><span class="line">    <span class="comment">//2）release();放弃对指针的控制权（切断智能指针和其指向对象之间的联系，返回裸指针</span></span><br><span class="line">    <span class="comment">//同时将智能指针置空，可以delete这个裸指针，也可以初始化另一个智能指针）</span></span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">ps4</span><span class="params">(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"you love china"</span>))</span></span>;</span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">ps5</span><span class="params">(ps4.<span class="built_in">release</span>())</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (ps4 == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"ps4 is nullptr"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> *pd = ps5.<span class="built_in">release</span>(); <span class="comment">//此时需要delete，避免内存泄漏，成为裸指针</span></span><br><span class="line">    <span class="keyword">delete</span> pd;</span><br><span class="line">    <span class="comment">//3）reset();不带参数：释放指针所指对象并将指针置空</span></span><br><span class="line">    <span class="comment">// ps3.reset();//不会有内存泄漏</span></span><br><span class="line">    <span class="comment">//带参数：释放指针所指对象并指向新对象</span></span><br><span class="line">    ps3.reset(ps1.<span class="built_in">release</span>());</span><br><span class="line">    <span class="comment">//4）=nullptr;释放智能指针所指向的对象并置空指针</span></span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">ps6</span><span class="params">(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"MINE"</span>))</span></span>;</span><br><span class="line">    ps6 = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="comment">//5）指向一个数组</span></span><br><span class="line">    <span class="comment">// unique_ptr&lt;int[]&gt; ps7(new int[10]);//不常用数组</span></span><br><span class="line">    <span class="comment">// ps7[0] = 90;</span></span><br><span class="line">    unique_ptr&lt;A[]&gt; ps8(new A[10]);</span><br><span class="line">    <span class="comment">//6）get();返回智能指针中的裸指针</span></span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">ps9</span><span class="params">(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"I love china"</span>))</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> *a=ps9.<span class="built_in">get</span>();<span class="comment">//得到裸指针，同前面一直不能delete,也不能初始化智能指针</span></span><br><span class="line">    *a=<span class="string">"This is china"</span>;</span><br><span class="line">    <span class="comment">//7）*解引用 如上方，对于数组无解引用</span></span><br><span class="line">    <span class="comment">//8）swap(); 同前面的shared_ptr只需改变为unique_ptr</span></span><br><span class="line">    <span class="comment">//9）智能指针名作为判断条件，也同前</span></span><br><span class="line">    <span class="comment">//10）转换成shared_ptr,如果unique_ptr为右值，可以将其赋值给shared_ptr</span></span><br><span class="line">    <span class="comment">//shared_ptr包含一个显示构造函数，可将用于右值unique_ptr转换为shared_ptr,接管原来unique_ptr对象</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="built_in">string</span>&gt; pss1=myfunc();</span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">uni</span><span class="params">(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"hello"</span>))</span></span>;</span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="built_in">string</span>&gt; pss2=<span class="built_in">move</span>(uni);<span class="comment">//此时uni为左值，使用move转换</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">tunip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt;(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"ME"</span>)); <span class="comment">//局部对象，系统生成临时unique_ptr，并调用移动构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mydelete</span><span class="params">(<span class="built_in">string</span> *pdel)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">delete</span> pdel;</span><br><span class="line">    pdel = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//尽管unique_ptr不能拷贝，但在即将销毁时可以从函数返回</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; ps;</span><br><span class="line">    ps = tunip(); <span class="comment">//临时对象直接构造在ps中，不接收则临时对象内存释放</span></span><br><span class="line">    <span class="comment">//unique_ptr指定删除器</span></span><br><span class="line">    <span class="comment">//1)</span></span><br><span class="line">    <span class="comment">// typedef void (*fp)(string *); //定义一个函数指针类型，名为fp</span></span><br><span class="line">    <span class="comment">// unique_ptr&lt;string,fp&gt; ps1(new string("You"),mydelete);</span></span><br><span class="line">    <span class="comment">//2)</span></span><br><span class="line">    <span class="keyword">using</span> fp2 = <span class="keyword">void</span> (*)(<span class="built_in">string</span> *); <span class="comment">//using定义一个函数指针类型</span></span><br><span class="line">    unique_ptr&lt;string, fp2&gt; ps2(new string("You"), mydelete);</span><br><span class="line">    <span class="comment">//3）lambda表达式,可理解成带有operator()类类型对象</span></span><br><span class="line">    <span class="keyword">auto</span> mydella = [](<span class="built_in">string</span> *pel) &#123;<span class="comment">//lambda表达式理解成class</span></span><br><span class="line">        <span class="keyword">delete</span> pel;</span><br><span class="line">        pel = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    unique_ptr&lt;string, decltype(mydella)&gt; p3(new string("You"), mydella);</span><br><span class="line">    <span class="comment">//注意与shared_ptr不同，unique_ptr删除器会影响unique_ptr类型，灵活性差，删除器不同，类型也不同</span></span><br><span class="line">    <span class="comment">//尺寸问题，unique_ptr尺寸与裸指针一致</span></span><br><span class="line">    <span class="built_in">string</span> *p;</span><br><span class="line">    <span class="keyword">int</span> lint=<span class="keyword">sizeof</span>(p);<span class="comment">//8字节</span></span><br><span class="line">    <span class="function"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; <span class="title">up</span><span class="params">(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">"Hello"</span>))</span></span>;</span><br><span class="line">    <span class="keyword">int</span> lun=<span class="keyword">sizeof</span>(up);<span class="comment">//8字节</span></span><br><span class="line">    <span class="keyword">int</span> ldu=<span class="keyword">sizeof</span>(p3);<span class="comment">//8字节,增加自定义删除器，尺寸可能增加，可能不增加。增加字节会影响效率（慎用）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//智能总结</span></span><br><span class="line">    <span class="comment">//智能指针的目的，为了帮助释放内存，防止造成内存泄漏</span></span><br><span class="line">    <span class="comment">//不要使用auto_ptr</span></span><br><span class="line">    <span class="comment">//选择unique_ptr（首选）速度快一般是一个指针指向一个对象、shared_ptr、weak_ptr是辅助shared_ptr</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>指针</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(7)</title>
    <url>/2020/06/19/C-%E5%BF%AB%E5%88%B7-7/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; sptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// shared_ptr&lt;int&gt; func1(shared_ptr&lt;int&gt; &amp;sptr)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     return sptr;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//共享式，引用计数，每个shared_ptr的拷贝都指向相同的内存（对象），只有最后一个指向该对象的shared_ptr指针不需要指向该对象的时候，</span></span><br><span class="line"><span class="comment">//这个shared_ptr才会去析构所指向的对象，每个shared_ptr都会记录有多少个指向相同的对象</span></span><br><span class="line"><span class="comment">//删除器</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> *d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">delete</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写函数模板来封装shared_ptr数组</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="built_in">shared_ptr</span>&lt;T&gt; <span class="title">make_shared_ptr</span><span class="params">(<span class="keyword">size_t</span> <span class="built_in">size</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">shared_ptr</span>&lt;T&gt;(<span class="keyword">new</span> T[<span class="built_in">size</span>], default_delete&lt;T[]&gt;());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// auto p1 = make_shared&lt;int&gt;(100); //此时计数为1</span></span><br><span class="line">    <span class="comment">// auto p2(p1);                     //此时为2</span></span><br><span class="line">    <span class="comment">// // func(p2);                        //若使用变量为3，使用引用则为2.智能指针作为实参传递</span></span><br><span class="line">    <span class="comment">// auto p3 = func1(p2);//使用p3接收，此时增加计数为3</span></span><br><span class="line">    <span class="comment">// func1(p2);//没有变量接收临时智能指针，最终会变为2</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; *p1 &lt;&lt; " " &lt;&lt; *p2 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//引用计数减少</span></span><br><span class="line">    <span class="comment">//a)改变指针指向</span></span><br><span class="line">    <span class="comment">// p3 = make_shared&lt;int&gt;(200); //改变p3指向计数为1,p1、p2使计数变为2</span></span><br><span class="line">    <span class="comment">// p2 = make_shared&lt;int&gt;(300); //p2改变指向计数为1,p1指向的对象计数变为1</span></span><br><span class="line">    <span class="comment">// p1 = make_shared&lt;int&gt;(400); //p1原内存释放,计数为1</span></span><br><span class="line">    <span class="comment">//b)shared_ptr离开作用域.如上面func1(p2);</span></span><br><span class="line">    <span class="comment">//c)当一个shared_ptr引用计数从1变为0，会自动释放，如上面的p1改变后释放内存</span></span><br><span class="line">    <span class="comment">// auto p4 = make_shared&lt;int&gt;(500);</span></span><br><span class="line">    <span class="comment">// auto p5 = make_shared&lt;int&gt;(500);</span></span><br><span class="line">    <span class="comment">// p4=p5;//此时p4改变指向p5，对象引用计数变为2，原来p4变为0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//shared_ptr常用操作</span></span><br><span class="line">    <span class="comment">//1）use_count();返回多少个指针指向某个对象，主要用于调试</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; myp(new int(600));</span></span><br><span class="line">    <span class="comment">// int count=myp.use_count();</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; myp2(myp);</span></span><br><span class="line">    <span class="comment">// count=myp2.use_count();</span></span><br><span class="line">    <span class="comment">// //2)unique();是否该智能指针独占指向对象，只有一个指向一个对象返回true</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; my(new int(600));</span></span><br><span class="line">    <span class="comment">// if (my.unique())</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"Yes"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="comment">//3)reset();重置</span></span><br><span class="line">    <span class="comment">//a)不带参数,若p是唯一指向该对象的指针，释放p指向的对象并置空p</span></span><br><span class="line">    <span class="comment">//若不是，不释放p指向的对象，但指向该对象的引用计数减一，同时置空p</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; p(new int(700));</span></span><br><span class="line">    <span class="comment">// p.reset();</span></span><br><span class="line">    <span class="comment">// if (p==nullptr)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"p is nullptr"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// auto p2=p;</span></span><br><span class="line">    <span class="comment">// p.reset();</span></span><br><span class="line">    <span class="comment">//b)带参数,（一般是new出来的参数）若p是唯一指向该对象的指针，释放p指向的对象并指向新对象</span></span><br><span class="line">    <span class="comment">//若不是，不释放p指向的对象，但指向该对象的引用计数减一，同时指向新对象</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; p0(new int(700));</span></span><br><span class="line">    <span class="comment">// // p0.reset(new int(800));//释放原内存，指向新内存</span></span><br><span class="line">    <span class="comment">// auto p3=p0;</span></span><br><span class="line">    <span class="comment">// p0.reset(new int(800));</span></span><br><span class="line">    <span class="comment">// if (p0.unique())</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"p0 is unique"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if (p3.unique())</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"p3 is unique"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// //空指针也可使用reset初始化</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; i;</span></span><br><span class="line">    <span class="comment">// i.reset(new int(10));//释放i指向对象，让i指向新对象</span></span><br><span class="line">    <span class="comment">//总之，带不带参数使用reset若是唯一指向指针则释放对象，不是则不释放引用计数减1。区别是带参数会将p指向新对象</span></span><br><span class="line">    <span class="comment">//4) * 解引用，获得p指向的对象</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; p10(new int(888));</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;*p10&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">//5)get,考虑到有些函数（第三方）的参数需要用到一个内置裸指针</span></span><br><span class="line">    <span class="comment">//用来返回p中保存的指针(裸指针)。若只能指针释放了所指向的对象，那么返回的裸指针无效</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; myp10(new int(120));</span></span><br><span class="line">    <span class="comment">// int *p=myp10.get();</span></span><br><span class="line">    <span class="comment">// *p=20;</span></span><br><span class="line">    <span class="comment">//6）swap();,交换两个智能指针所指向的对象（很少使用）</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;string&gt; ps1(new string("You"));</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;string&gt; ps2(new string("Me"));</span></span><br><span class="line">    <span class="comment">// ps1.swap(ps2);</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;*ps1&lt;&lt;" "&lt;&lt;*ps2&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">//7)=nullptr a)将所指向的对象引用计数减一，若计数为0则释放指向的对象b)将智能指针置空</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;string&gt; ps(new string("You"));</span></span><br><span class="line">    <span class="comment">// ps=nullptr;</span></span><br><span class="line">    <span class="comment">//8)智能指针名作为判断条件</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;string&gt; ps(new string("You"));</span></span><br><span class="line">    <span class="comment">// if (ps)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"dirction a thing"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//9)指定删除器以及数组问题(可忽略)</span></span><br><span class="line">    <span class="comment">//a)指定删除器 一定时机删除所指向对象。delete：将delete运算符作为默认析构方式</span></span><br><span class="line">    <span class="comment">//可以指定自己的删除器取代系统的</span></span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">pd</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">980</span>), Delete)</span></span>;</span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">pd2</span><span class="params">(pd)</span></span>;</span><br><span class="line">    pd2.reset(); <span class="comment">//减一引用计数，pd2为nullptr</span></span><br><span class="line">    pd.reset();  <span class="comment">//调用删除器</span></span><br><span class="line">    <span class="comment">//删除器可以是lambda表达式</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int&gt; pd1(new int(980), [](int *p) &#123;</span></span><br><span class="line">    <span class="comment">//     delete[] p;</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//有些情况，默认删除器无法处理，需要自定义（管理动态数组）</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;A&gt; pd1(new A[10],[](A *p)&#123;(数组很少用在动态指针中)</span></span><br><span class="line">    <span class="comment">//     delete []p;</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//可使用delete_default来做删除器</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;A&gt; pd1(new A[10],std::delete_default&lt;A&gt;());</span></span><br><span class="line">    <span class="comment">//可以将其封装成函数</span></span><br><span class="line">    <span class="comment">// template &lt;typename T&gt;</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;T&gt; make_shared_ptr(size_t size)&#123;</span></span><br><span class="line">    <span class="comment">//     return shared_ptr&lt;T&gt;(new T[size],default_delete&lt;T[]&gt;());</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; pdm = make_shared_ptr&lt;<span class="keyword">int</span>&gt;(<span class="number">10</span>); <span class="comment">//即可调用函数</span></span><br><span class="line">    <span class="comment">//在shared_ptr中加上[]即可调用默认删除器</span></span><br><span class="line">    <span class="comment">// shared_ptr&lt;int[]&gt; pa(new int[10]);</span></span><br><span class="line">    <span class="comment">// pa[0]=10;//可以通过下标赋值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//补充：就算两个shared_ptr指定不同的删除器，只要其指向的对象类型相同，那么两个shared_ptr也属于同一类型</span></span><br><span class="line">    <span class="keyword">auto</span> lambda1 = [](<span class="keyword">int</span> *p) &#123;</span><br><span class="line">        <span class="keyword">delete</span> p;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> lambda2 = [](<span class="keyword">int</span> *p) &#123;</span><br><span class="line">        <span class="keyword">delete</span> p;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">s1</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">100</span>), lambda1)</span></span>;</span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">s2</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">200</span>), lambda2)</span></span>;</span><br><span class="line">    s2=s1;<span class="comment">//p2会先调用lambda2，释放自己指向的对象，然后指向p1所指对象，p1指向对象引用计数为2</span></span><br><span class="line">    <span class="comment">//最后还会调用lambda1释放s1、s2共同指向对象</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>weak_ptr</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//weak_ptr（弱引用）,类模板，智能指针，指向一个有shared_ptr管理的对象，但weak_ptr不控制所指向对象的生存期</span></span><br><span class="line">    <span class="comment">//即weak_ptr绑定到shared_ptr不会改变shared_ptr引用计算，weak_ptr不会增加或减少指向对象的引用计数</span></span><br><span class="line">    <span class="comment">//共享其他的shared_ptr所指向的对象，可以理解成监视shared_ptr（强引用）生命周期用的，是对其的扩充</span></span><br><span class="line">    <span class="comment">//不是一个独立的智能指针，不能用来操作所指向的资源。能够监视所指向对象是否存在</span></span><br><span class="line">    <span class="comment">// auto pi = make_shared&lt;int&gt;(100);</span></span><br><span class="line">    <span class="comment">// *pi=88;</span></span><br><span class="line">        <span class="comment">// weak_ptr&lt;int&gt; piw(pi);//piw弱共享pi,pi引用强计数不改变，但是弱引用计数会改变（但是不会影响对象生命周期）</span></span><br><span class="line">    <span class="comment">// weak_ptr&lt;int&gt; piw;</span></span><br><span class="line">    <span class="comment">// piw = pi; //赋值给一个weak_ptr,两者指向同一个内存对象</span></span><br><span class="line">    <span class="comment">// weak_ptr&lt;int&gt; piw2;</span></span><br><span class="line">    <span class="comment">// piw2 = piw;//pi是强引用，piw、piw2是弱引用</span></span><br><span class="line">       <span class="comment">//lock(),功能就是检查weak_ptr所指向的对象是否存在，</span></span><br><span class="line">       <span class="comment">//若存在，这个lock就可以返回一个指向该对象的shared_ptr（指向对象的强引用计数就会加一）</span></span><br><span class="line">       <span class="comment">//不存在，则lock返回一个空的shared_ptr</span></span><br><span class="line">    <span class="comment">// pi.reset();//释放pi所指向的对象并将pi置空</span></span><br><span class="line">    <span class="comment">// auto pi2=piw.lock();</span></span><br><span class="line">    <span class="comment">// if (pi2!=nullptr)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     *pi2=33;</span></span><br><span class="line">    <span class="comment">// &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"fail"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//常用操作</span></span><br><span class="line">    <span class="comment">//1)use_count();获取与该弱指针共享对象的其他shared_ptr的数量（强引用数量）</span></span><br><span class="line">    <span class="comment">// auto s=make_shared&lt;int&gt;(1000);</span></span><br><span class="line">    <span class="comment">// auto s2(s);</span></span><br><span class="line">    <span class="comment">// weak_ptr&lt;int&gt; s3(s);</span></span><br><span class="line">    <span class="comment">// int sum=s3.use_count();</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;sum&lt;&lt;endl;//2</span></span><br><span class="line">    <span class="comment">//2)expired();用来判断所观测资源是否已经被释放</span></span><br><span class="line">    <span class="comment">// s.reset();</span></span><br><span class="line">    <span class="comment">// s2.reset();</span></span><br><span class="line">    <span class="comment">// if (s3.expired())</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout&lt;&lt;"old"&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//3)reset();将该弱引用指针置空，不影响该对象的强引用，弱引用减一</span></span><br><span class="line">    <span class="comment">// s3.reset();</span></span><br><span class="line">    <span class="comment">//4)lock();</span></span><br><span class="line">    <span class="comment">// auto e=make_shared&lt;int&gt;(34);</span></span><br><span class="line">    <span class="comment">// weak_ptr&lt;int&gt; ew;</span></span><br><span class="line">    <span class="comment">// ew=e;//可用shared_ptr给weak_ptr赋值</span></span><br><span class="line">    <span class="comment">// if (!ew.expired())</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     auto e2=ew.lock();//临时强引用，执行后强引用计数恢复</span></span><br><span class="line">    <span class="comment">//     if (e2!=nullptr)</span></span><br><span class="line">    <span class="comment">//     &#123;</span></span><br><span class="line">    <span class="comment">//         int test;</span></span><br><span class="line">    <span class="comment">//         test=1;</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//     int test;</span></span><br><span class="line">    <span class="comment">//     test=10;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//尺寸问题，weak_ptr、shared_ptr尺寸一样大，是裸指针的2倍</span></span><br><span class="line">    weak_ptr&lt;<span class="keyword">int</span>&gt; y;</span><br><span class="line">    <span class="keyword">int</span> *o;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="keyword">sizeof</span>(o);<span class="comment">//裸指针</span></span><br><span class="line">    <span class="keyword">int</span> len1=<span class="keyword">sizeof</span>(y);<span class="comment">//两个裸指针,第一个指向的是这个智能指针指向的对象,第二个指向一个最大的数据结构（控制块）</span></span><br><span class="line">    <span class="comment">//控制块有1）所指对象的强引用计数2）所指对象的弱引用计数3）其他数据。自定义删除器等</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>指针</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(6)</title>
    <url>/2020/06/17/C-%E5%BF%AB%E5%88%B7-6/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// class A</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// private:</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     int c_str;</span></span><br><span class="line"><span class="comment">//     A()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "create function" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;;</span></span><br><span class="line"><span class="comment">//     ~A()&#123;</span></span><br><span class="line"><span class="comment">//         cout&lt;&lt;"xigou function"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//     &#125;;</span></span><br><span class="line"><span class="comment">//     void myfunc(int str)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; str &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">make</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt;(<span class="keyword">new</span> <span class="keyword">int</span>(value)); <span class="comment">//显式创建一个shared_ptr&lt;int&gt;，可直接返回智能指针</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1)内存管理</span></span><br><span class="line">    <span class="comment">// int *point = new int(110);</span></span><br><span class="line">    <span class="comment">// string *mystr1 = new string(5, 'a');</span></span><br><span class="line">    <span class="comment">// auto mystr2 = new auto(mystr1);//string** 慎用</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;mystr1-&gt;c_str()&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;(*mystr2)-&gt;c_str()&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// delete mystr1;//此时不能再delete mystr2(重复)</span></span><br><span class="line">    <span class="comment">// mystr1=nullptr;//建议在delete后置空</span></span><br><span class="line">    <span class="comment">// //const对象动态分配</span></span><br><span class="line">    <span class="comment">// const int *cp=new const int(100);</span></span><br><span class="line">    <span class="comment">// delete cp;</span></span><br><span class="line">    <span class="comment">// //智能指针，C++11，MFC应用程序一定程度（程序退出时）</span></span><br><span class="line">    <span class="comment">// vector&lt;int&gt; *pr = new vector&lt;int&gt;&#123;1, 2, 3, 4, 5&#125;;</span></span><br><span class="line">    <span class="comment">// delete pr;</span></span><br><span class="line">    <span class="comment">//2)</span></span><br><span class="line">    <span class="comment">// A *a = new A();//new（关键字/运算符）会调用构造函数，delete调用析构函数</span></span><br><span class="line">    <span class="comment">// delete a;</span></span><br><span class="line">    <span class="comment">//operator new()、operator delete()</span></span><br><span class="line">    <span class="comment">//new分配内存（通过operator new()）、调用构造函数初始化内存</span></span><br><span class="line">    <span class="comment">//delete释放内存（通过operator delete()）、调用析构函数</span></span><br><span class="line">    <span class="comment">// int *p=new int(100);</span></span><br><span class="line">    <span class="comment">// delete p;</span></span><br><span class="line">    <span class="comment">// int *c=new int[2];//泄漏8字节，此时不需要额外的4字节记录</span></span><br><span class="line">    <span class="comment">// A a1;</span></span><br><span class="line">    <span class="comment">// int i_len=sizeof(a1);//有对象就有地址，至少占一个字符</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;i_len&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// A *pa=new A[2]();//泄漏6字节，2字节类对象数组，还有4字节用来记录new数组元素的个数</span></span><br><span class="line">    <span class="comment">// delete[] pa;//此时构造、析构函数都执行两次，对应记录</span></span><br><span class="line">    <span class="comment">//3)智能指针，可以帮助delete</span></span><br><span class="line">    <span class="comment">//unique_ptr同一时间只有一个指针能够指向该对象，但所有权可以移交</span></span><br><span class="line">    <span class="comment">//shared_ptr（多个指针指向同一个对象，最后一个指针销毁时，对象被释放）、weak_ptr（辅助shared_ptr）</span></span><br><span class="line">    <span class="comment">//share_ptr释放对象时间。1）其被析构2）指向其他对象时</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; pi1;              <span class="comment">//指向int的空指针，pi1，但此时指向为空</span></span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">pi</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">100</span>))</span></span>; <span class="comment">//pi指向一个值为100的int型数据</span></span><br><span class="line">    <span class="comment">//shared_ptr&lt;int&gt; pi2=new int(100);//不行，=为隐式类型转换，智能指针为explicit</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; pi3 = make(<span class="number">100</span>);</span><br><span class="line">    <span class="comment">// (int *a=new int;shared_ptr&lt;int&gt; p(a);使用裸指针初始化，不建议)</span></span><br><span class="line">    <span class="function"><span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="keyword">new</span> <span class="keyword">int</span>)</span></span>; <span class="comment">//可转换成这样</span></span><br><span class="line">    <span class="comment">//make_shared函数，模板，可高效安全分配和使用shared_ptr</span></span><br><span class="line">    <span class="comment">//在动态内存中分配、初始化一个对象，然后返回一个指向此对象的shared_ptr</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; p2 = make_shared&lt;<span class="keyword">int</span>&gt;(<span class="number">100</span>);          <span class="comment">//shared_ptr指向一个值为100的整形内存</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="built_in">string</span>&gt; p3 = make_shared&lt;<span class="built_in">string</span>&gt;(<span class="number">5</span>, <span class="string">'a'</span>); <span class="comment">//5个字符a生成字符串</span></span><br><span class="line">    <span class="built_in">shared_ptr</span>&lt;<span class="keyword">int</span>&gt; p4 = make_shared&lt;<span class="keyword">int</span>&gt;();<span class="comment">//指向一个保存值为0的int</span></span><br><span class="line">    p4=make_shared&lt;<span class="keyword">int</span>&gt;(<span class="number">10</span>);<span class="comment">//p4指向一个新int，int保存10，首先释放刚才指向值0，然后在指向此处</span></span><br><span class="line">    <span class="keyword">auto</span> p5=make_shared&lt;<span class="built_in">string</span>&gt;(<span class="number">5</span>,<span class="string">'a'</span>);<span class="comment">//同上</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;*p3&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>指针</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>C++快刷(5)</title>
    <url>/2020/06/16/C-%E5%BF%AB%E5%88%B7-5/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//1)定义一个类型，前面的类型固定，后面可给定类型</span></span><br><span class="line"><span class="comment">// template &lt;typename st&gt; //C++98</span></span><br><span class="line"><span class="comment">// struct map_1</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     typedef std::map&lt;std::string, st&gt; type;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">str_map_t</span> = <span class="built_in">map</span>&lt;<span class="built_in">string</span>, T&gt;; <span class="comment">//C++11,using用来给类型模板起名</span></span><br><span class="line"><span class="comment">//定义一个含有两个参数的返回整形指针</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> A&gt;</span><br><span class="line"><span class="keyword">using</span> Func = <span class="keyword">int</span> (*)(A, A);</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Realfunc</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i + j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2)</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1, <span class="keyword">typename</span> T2, <span class="keyword">typename</span> T3&gt;</span><br><span class="line"><span class="function">T1 <span class="title">sum</span><span class="params">(T2 i, T3 j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T1 result = i + j;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> un_int;</span><br><span class="line">    <span class="comment">// map&lt;string,int&gt; map;</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">int</span>&gt; <span class="built_in">map</span>;</span><br><span class="line">    <span class="built_in">map</span> m;</span><br><span class="line">    m.insert(&#123;<span class="string">"first"</span>, <span class="number">1</span>&#125;);</span><br><span class="line">    m.insert(&#123;<span class="string">"second"</span>, <span class="number">2</span>&#125;);</span><br><span class="line">    <span class="keyword">typedef</span> <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt; map_s;</span><br><span class="line">    map_s m2;</span><br><span class="line">    m2.insert(&#123;<span class="string">"first"</span>, <span class="string">"second"</span>&#125;);</span><br><span class="line">    <span class="comment">//1)C++98</span></span><br><span class="line">    <span class="comment">// map_1&lt;int&gt;::type map1; //等价于map&lt;std::string, int&gt; map1;</span></span><br><span class="line">    <span class="comment">// map1.insert(&#123;"first", 1&#125;);</span></span><br><span class="line">    <span class="comment">//C++11</span></span><br><span class="line">    <span class="keyword">str_map_t</span>&lt;<span class="keyword">int</span>&gt; map2;</span><br><span class="line">    map2.insert(&#123;<span class="string">"second"</span>, <span class="number">2</span>&#125;);</span><br><span class="line">    <span class="comment">//定义一个含有两个参数的返回整形指针</span></span><br><span class="line">    Func&lt;<span class="keyword">int</span>&gt; pointfunc;  <span class="comment">//pointfunc函数指针变量、Func&lt;int&gt;函数指针类型</span></span><br><span class="line">    pointfunc = Realfunc; <span class="comment">//函数地址给函数指针</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; pointfunc(<span class="number">3</span>, <span class="number">4</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//2)显示指定模板参数</span></span><br><span class="line">    <span class="keyword">auto</span> result = sum&lt;<span class="keyword">double</span>,<span class="keyword">double</span>,<span class="keyword">double</span>&gt;(<span class="number">2000000000</span>, <span class="number">1000000001</span>);<span class="comment">//手工指定类型优先，不给double编译器指定</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;result&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>特化、泛化</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//1)全特化</span></span><br><span class="line"><span class="comment">// template &lt;typename T, typename U&gt;</span></span><br><span class="line"><span class="comment">// //当T和U这两个类型模板参数均为int时，可做一个特化版本,有特化必须有泛化</span></span><br><span class="line"><span class="comment">// struct TC</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     TC()&#123;</span></span><br><span class="line"><span class="comment">//         cout&lt;&lt;"fanhua create function"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     void func()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "fanhua version" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">//全特化：所有类型模板参数都用具体的类型代表，此时template后面的&lt;&gt;为空</span></span><br><span class="line"><span class="comment">// template &lt; &gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;int, int&gt;</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void func()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "int_int special version" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// template &lt; &gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;double, int&gt;</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void func()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "double_int special version" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// //特化版本对编译器优先选择，当传参符合</span></span><br><span class="line"><span class="comment">// //特化成员函数</span></span><br><span class="line"><span class="comment">// template &lt; &gt;</span></span><br><span class="line"><span class="comment">// void TC&lt;double, double&gt;::func()&#123;</span></span><br><span class="line"><span class="comment">//     cout&lt;&lt;"double double version"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//2)局部特化</span></span><br><span class="line"><span class="comment">//模板参数数量上</span></span><br><span class="line"><span class="comment">// template &lt;typename T, typename U, typename W&gt;</span></span><br><span class="line"><span class="comment">// struct TC</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     TC()&#123;</span></span><br><span class="line"><span class="comment">//         cout&lt;&lt;"fanhua create function"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     void func()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "fanhua version" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// template &lt;typename U&gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;int,U,double&gt;</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void func()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "pian spacial version" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">//模板参数范围上</span></span><br><span class="line"><span class="comment">// template &lt;typename T&gt;</span></span><br><span class="line"><span class="comment">// struct TC</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void functest()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "fanhua" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// template &lt;typename T&gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;const T&gt;</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void functest() //const</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "const special" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// template &lt;typename T&gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;T *&gt; //指针</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void functest()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "* special" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// template &lt;typename T&gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;T &amp;&gt; //指针</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void functest()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "&amp; special" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// template &lt;typename T&gt;</span></span><br><span class="line"><span class="comment">// struct TC&lt;T &amp;&amp;&gt; //指针</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     void functest()</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         cout &lt;&lt; "&amp;&amp; special" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">//函数模板 普通函数》特化》泛化</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt; <span class="comment">//泛化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(T &amp;tempt, U &amp;tempu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"function fanhua "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; tempt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; tempu &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &amp;tempt, <span class="keyword">double</span> &amp;tempu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"function tehua "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; tempt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; tempu &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &amp;tempt, <span class="keyword">double</span> &amp;tempu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"chongzai function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1)</span></span><br><span class="line">    <span class="comment">// TC&lt;char,int&gt; techar;</span></span><br><span class="line">    <span class="comment">// TC&lt;int,int&gt; techar1;</span></span><br><span class="line">    <span class="comment">// techar.func();</span></span><br><span class="line">    <span class="comment">// TC&lt;double,double&gt; te;//特化成员函数</span></span><br><span class="line">    <span class="comment">// te.func();</span></span><br><span class="line">    <span class="comment">//2)1、模板参数数量上</span></span><br><span class="line">    <span class="comment">// TC&lt;int,int,double&gt; te;</span></span><br><span class="line">    <span class="comment">// te.func();</span></span><br><span class="line">    <span class="comment">//2、模板参数范围上</span></span><br><span class="line">    <span class="comment">// TC&lt;double&gt; td;</span></span><br><span class="line">    <span class="comment">// td.functest();</span></span><br><span class="line">    <span class="comment">// TC&lt;double *&gt; tp; //*</span></span><br><span class="line">    <span class="comment">// tp.functest();</span></span><br><span class="line">    <span class="comment">// TC&lt;const double *&gt; ctp; //*</span></span><br><span class="line">    <span class="comment">// ctp.functest();</span></span><br><span class="line">    <span class="comment">// TC&lt;const double&gt; cd; //const</span></span><br><span class="line">    <span class="comment">// cd.functest();</span></span><br><span class="line">    <span class="comment">// TC&lt;int &amp;&gt; tcz;</span></span><br><span class="line">    <span class="comment">// tcz.functest();</span></span><br><span class="line">    <span class="comment">//函数模板全特化</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *p = <span class="string">"I love china"</span>;</span><br><span class="line">    <span class="keyword">int</span> q = <span class="number">10</span>;</span><br><span class="line">    func(p, q);</span><br><span class="line">    <span class="keyword">double</span> d = <span class="number">2.3f</span>;</span><br><span class="line">    func(q, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可变参模板、模板模板参数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//一堆参数展开</span></span><br><span class="line"><span class="comment">//1)可变参函数模板,为一堆类型T（类型可以不同） arg称为一堆参数（类型可以不同）</span></span><br><span class="line"><span class="keyword">namespace</span> _nmp</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... T&gt;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myfunc</span><span class="params">(T... arg)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>...(arg) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>...(T) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//可变参数量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//递归终止函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myfunc2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"digui stop"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... U&gt;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myfunc2</span><span class="params">(<span class="keyword">const</span> T &amp;firstorg, <span class="keyword">const</span> U &amp;... otherorg)</span> <span class="comment">//最适合参数展开，一个参数+一堆参数</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// cout &lt;&lt; sizeof...(otherorg) &lt;&lt; endl;</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"coming data"</span> &lt;&lt; firstorg &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        myfunc2(otherorg...);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        myfunc();</span><br><span class="line">        myfunc(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">        myfunc(<span class="number">13</span>, <span class="number">15.4</span>);</span><br><span class="line">        myfunc2(<span class="number">10</span>);</span><br><span class="line">        myfunc2(<span class="number">10</span>, <span class="string">"abc"</span>, <span class="number">29</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// namespace _nmp</span></span><br><span class="line"><span class="comment">//2)可变参类模板-------可忽略</span></span><br><span class="line"><span class="keyword">namespace</span> _nmp2</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Arg&gt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">myclass</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">    &#125;; <span class="comment">//主模板</span></span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> First, <span class="keyword">typename</span>... others&gt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">myclass</span>&lt;First, others...&gt; :</span> <span class="keyword">private</span> myclass&lt;others...&gt; <span class="comment">//不断继承，偏特化</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        First m_i;</span><br><span class="line">        myclass() : m_i(<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"running,this"</span> &lt;&lt; <span class="keyword">this</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        myclass(First parf, others... paro) : m_i(parf), myclass&lt;others...&gt;(paro...)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"running"</span> &lt;&lt; <span class="keyword">this</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"m_i="</span> &lt;&lt; m_i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        myclass&lt;<span class="keyword">int</span>, <span class="keyword">float</span>, <span class="keyword">double</span>&gt; myeye;</span><br><span class="line">        myclass&lt;int, float, double&gt; myeye1(23, 12.6f, 44);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// namespace _nmp2</span></span><br><span class="line"><span class="comment">//3)模板模板参数</span></span><br><span class="line"><span class="keyword">namespace</span> _nmp3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T,</span><br><span class="line">              <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt; <span class="keyword">typename</span> Container&gt; <span class="comment">//这是一个模板参数</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">myclass</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        T m_i;</span><br><span class="line">        Container&lt;T&gt; mye; <span class="comment">//container作为一个类模板，必须先有模板模板参数</span></span><br><span class="line">        myclass()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                mye.push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Q&gt; <span class="keyword">using</span> MT=<span class="built_in">vector</span>&lt;Q,allocator&lt;Q&gt;&gt;;<span class="comment">//类型别名</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        myclass&lt;<span class="keyword">int</span>,MT&gt;mycode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// namespace _nmp3</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// _nmp::func();</span></span><br><span class="line">    _nmp2::func2();</span><br><span class="line">    _nmp3::func();<span class="comment">//有错误，未解决</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>模板</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>C++快刷(4)</title>
    <url>/2020/06/16/C-%E5%BF%AB%E5%88%B7-4/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//显示实例化可忽略</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __ca__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __ca__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myft</span><span class="params">(T temp)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; temp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    A(<span class="comment">/* args */</span>)&#123;&#125;;</span><br><span class="line">    ~A()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> M&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1&gt;</span><br><span class="line">    B(T1 v1, T1 v2);</span><br><span class="line">    <span class="comment">//函数模板、普通函数模板可以推断</span></span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T2&gt;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myft</span><span class="params">(T2 temp)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; temp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myftp</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    M m_tp;</span><br><span class="line">    B()&#123;&#125;;</span><br><span class="line">    ~B()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> M&gt;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1&gt;</span><br><span class="line">B&lt;M&gt;::B(T1 v1, T1 v2)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1 &lt;&lt; <span class="string">" "</span> &lt;&lt; v2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func123</span><span class="params">(T v1, T v2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1 + v2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project5.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">template</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span>&lt;float&gt;;</span> <span class="comment">//显示实例化，声明//不会在本文件中生成一个实例化代码</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">template</span> <span class="keyword">void</span> <span class="title">func123</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1）普通类的成员函数模板</span></span><br><span class="line">    <span class="comment">//成员函数模板不可以是一个虚函数</span></span><br><span class="line">    A a;</span><br><span class="line">    a.myft(<span class="number">5</span>);</span><br><span class="line">    <span class="comment">//2）类模板的成员函数</span></span><br><span class="line">    <span class="comment">//只有使用时，模板才进行实例化</span></span><br><span class="line">    <span class="function">B&lt;<span class="keyword">float</span>&gt; <span class="title">b</span><span class="params">(<span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="function">B&lt;<span class="keyword">float</span>&gt; <span class="title">c</span><span class="params">(<span class="number">2.2</span>, <span class="number">3.3</span>)</span></span>;</span><br><span class="line">    <span class="function">B&lt;<span class="keyword">int</span>&gt; <span class="title">tempobj</span><span class="params">(<span class="number">2</span>,<span class="number">8</span>)</span></span>;<span class="comment">//模板的实例化定义只有一个，实例化声明可以有多个</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project5.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span>&lt;float&gt;;</span> <span class="comment">//显示实例化，定义</span></span><br><span class="line"><span class="function"><span class="keyword">template</span> <span class="keyword">void</span> <span class="title">func123</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span></span>;<span class="comment">//函数实例化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">B&lt;<span class="keyword">float</span>&gt; <span class="title">a1</span><span class="params">(<span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>模板</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>C++快刷(0)</title>
    <url>/2020/06/16/C-%E5%BF%AB%E5%88%B7-0/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt; //提供模板参数，能够表示的函数调用形式</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">biggernow</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    biggernow()</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    biggernow(<span class="keyword">int</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"create function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> value)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ~biggernow()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">echo</span><span class="params">(<span class="keyword">int</span> value)</span> <span class="comment">//调用参数与返回值与biggernow类中operator相同</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; value &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    biggernow big;</span><br><span class="line">    <span class="keyword">int</span> result = big(<span class="number">10</span>);<span class="comment">//此时调用（），等同于big.operator()(i)</span></span><br><span class="line">    <span class="comment">// biggernow bigger(10); //存在构造函数，调用构造函数</span></span><br><span class="line">    <span class="comment">// int a = bigger(-101); //调用（）</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; a &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// //只要重载()，那么()函数即可调用,但要考虑到构造函数</span></span><br><span class="line">    <span class="comment">// //2)echo与biggernow的重载()，调用参数与返回值相同，即调用形式相同</span></span><br><span class="line">    <span class="comment">//一个调用形式，对应一个函数类型:int(int)。表示接受一个int参数，返回一个int值</span></span><br><span class="line">    <span class="comment">// echo(10);</span></span><br><span class="line">    biggernow obj;</span><br><span class="line">    <span class="comment">// map&lt;string, int (*)(int)&gt; m; //函数指针名省略</span></span><br><span class="line">    <span class="comment">// m.insert(&#123;"mm", echo&#125;);      //函数名做地址</span></span><br><span class="line">    <span class="comment">// auto it = m.begin();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; (*it).first &lt;&lt; (*it).second &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//2）代表一个可调用对象，表示这个对象是：接受一个int参数，返回int类型</span></span><br><span class="line">    <span class="comment">// function&lt;int(int)&gt; f1 = echo;        //函数指针.此时echo有重载会出错</span></span><br><span class="line">    function&lt;<span class="keyword">int</span>(<span class="keyword">int</span>)&gt; f2 = obj;         <span class="comment">//类对象，其类中有()重载</span></span><br><span class="line">    <span class="comment">// function&lt;int(int)&gt; f3 = biggernow(); //用类名生成一个对象，也是（）重载</span></span><br><span class="line">    <span class="comment">// f1(10);</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f2(<span class="number">3</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; f3(-10) &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//3)</span></span><br><span class="line">    <span class="comment">// map&lt;string, function&lt;int(int)&gt;&gt; ma;</span></span><br><span class="line">    <span class="comment">// map&lt;string, function&lt;int(int)&gt;&gt; ma = &#123;</span></span><br><span class="line">    <span class="comment">//     &#123;"ev",echo&#125;,</span></span><br><span class="line">    <span class="comment">//     &#123;"bt",obj&#125;,</span></span><br><span class="line">    <span class="comment">//     &#123;"ar",biggernow()&#125;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="comment">// ma["ev"](12); //调用echo函数</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;ma["bt"](10)&lt;&lt;endl;//调用obj对象的()操作符</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;ma["ar"](-10)&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">int</span>(*fp)(<span class="keyword">int</span>)=echo;<span class="comment">//定义函数指针不会有二义性</span></span><br><span class="line">    fp(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_i = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// auto mylambda = [this, &amp;x, &amp;y] &#123; //无论使用this、&amp;、=都可以访问类成员</span></span><br><span class="line">        <span class="keyword">auto</span> mylambda = [=, &amp;x, &amp;y] &#123;</span><br><span class="line">            x += <span class="number">20</span>;</span><br><span class="line">            y += <span class="number">12</span>;</span><br><span class="line">            <span class="keyword">return</span> m_i;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"x="</span> &lt;&lt; x &lt;&lt; <span class="string">"y="</span> &lt;&lt; y &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; mylambda() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    CT()&#123;&#125;;</span><br><span class="line">    ~CT()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myfunc</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//lambda表达式是一个匿名函数,并可以捕获一定范围内的变量</span></span><br><span class="line">    <span class="comment">//含有一个返回类型、一个参数列表、一个函数体，与函数不同的是，其可以在函数内部定义。</span></span><br><span class="line">    <span class="comment">//返回类型大多数可以省略，编译器可以自动推导。lambda参数可以有默认值</span></span><br><span class="line">    <span class="comment">// auto f=[](int a)-&gt;int&#123;</span></span><br><span class="line">    <span class="comment">//     return a+1;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="keyword">auto</span> f = [](<span class="keyword">int</span> a) &#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> f1 = [](<span class="keyword">int</span> a = <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//没有参数时，参数列表及（）都可省略,但是捕获列表([])及函数体不能省略。通过捕获列表捕获一定范围内的变量</span></span><br><span class="line">    <span class="comment">//即1)[],不捕获任何变量,但不包括静态局部变量。也就是不在参数列表中定义的参数不能返回，但静态变量可以使用</span></span><br><span class="line">    <span class="comment">//2)[&amp;]，捕获外部作用域中所有变量，并作为引用在函数体内使用</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">auto</span> f5 = [&amp;] &#123;</span><br><span class="line">        i = <span class="number">3</span>; <span class="comment">//确保i在作用域内</span></span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//3)[=],捕获外部作用域中所有变量，作为副本在函数中使用，只能使用值，但不能赋值</span></span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">auto</span> f6 = [=] &#123;</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//4)[this],一般用于类中，捕获当前类中this指针，让lambda表达式有和当前成员函数同样的访问权限</span></span><br><span class="line">    <span class="comment">//如果[]中已经使用了&amp;或者=，那么默认已经使用了this。捕获this目的是在lambda中使用当前类</span></span><br><span class="line">    CT ct;</span><br><span class="line">    ct.func(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="comment">//5)[变量名]，如果是多个变量名，用,分隔即可，[变量名]表示按值捕获变量名代表的变量，同时不捕获其他变量,也可以在变量名前加&amp;</span></span><br><span class="line">    <span class="comment">//6)[=,&amp;变量名]按值获取所有外部变量，但按引用捕获&amp;中所指的变量，</span></span><br><span class="line">    <span class="comment">//lambda表达式中的mutable（易变的）</span></span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">auto</span> f8 = [=]() <span class="keyword">mutable</span> &#123;</span><br><span class="line">        m = <span class="number">17</span>;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//lambda表达式的类型被称为闭包（函数内的函数，本质是运行时创建的对象）</span></span><br><span class="line">    <span class="keyword">auto</span> f2 = []() &#123; <span class="keyword">return</span> <span class="number">1</span>; &#125;;</span><br><span class="line">    <span class="keyword">auto</span> f3 = [] &#123; <span class="keyword">return</span> <span class="number">2</span>; &#125;;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; f1() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f(10) &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f2() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f3() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f5() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; f6() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//使用function、bind保存调用lambda表达式</span></span><br><span class="line">    function&lt;<span class="keyword">int</span>(<span class="keyword">int</span>)&gt; fcl = [](<span class="keyword">int</span> tv) &#123; <span class="keyword">return</span> tv; &#125;;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; fcl(<span class="number">20</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    function&lt;<span class="keyword">int</span>(<span class="keyword">int</span>)&gt; fc2 = bind( <span class="comment">//第一个参数是函数指针，第二个参数是真正的函数参数</span></span><br><span class="line">        [](<span class="keyword">int</span> tv) &#123;</span><br><span class="line">            <span class="keyword">return</span> tv;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">20</span>);</span><br><span class="line">    fc2(<span class="number">18</span>);</span><br><span class="line">    <span class="comment">//不捕获任何变量的lambda表达式，即捕获列表为空，可以转换成一个普通的函数指针</span></span><br><span class="line">    <span class="keyword">using</span> functy = <span class="keyword">int</span> (*)(<span class="keyword">int</span>);</span><br><span class="line">    functy fp = [](<span class="keyword">int</span> tv) &#123; <span class="keyword">return</span> tv; &#125;;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; fp(<span class="number">14</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//语法糖</span></span><br><span class="line">    <span class="comment">//int a[5];a[0]=1;*(a+1)=3;//a[1]=3;</span></span><br><span class="line">    <span class="comment">//for_each,函数模板</span></span><br><span class="line">    <span class="comment">// vector&lt;int&gt; myv=&#123;20,30,40,50&#125;;</span></span><br><span class="line">    <span class="comment">// for_each(myv.begin(),myv.end(),myfunc);</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; myv = &#123;<span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    for_each(</span><br><span class="line">        myv.<span class="built_in">begin</span>(), myv.<span class="built_in">end</span>(), [&amp;sum](<span class="keyword">int</span> val) &#123;</span><br><span class="line">            sum += val;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; val &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//140</span></span><br><span class="line">    <span class="comment">//find_if,函数模板,用来查找</span></span><br><span class="line">    <span class="keyword">auto</span> result = find_if(myv.<span class="built_in">begin</span>(), myv.<span class="built_in">end</span>(), [](<span class="keyword">int</span> val) &#123; <span class="comment">//返回一个迭代器，指向第一个满足条件的元素，若不存在，则指向myv</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; val &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span> (val &gt; <span class="number">35</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//只要返回false,那么find_if就不停遍历myv,直到返回true或遍历完为止</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (result == myv.<span class="built_in">end</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"can't find"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"find it"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//lambda表达式优点，是代码简洁、灵活、开发效率更高、维护性更好</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;function&lt;<span class="keyword">bool</span>(<span class="keyword">int</span>)&gt;&gt; gv;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="comment">// int tempvalue = rand() % 8;//静态变量</span></span><br><span class="line">    <span class="comment">// static int tempvalue = rand() % 8;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> tempvalue = <span class="number">4</span>;</span><br><span class="line">    gv.push_back(</span><br><span class="line">        [](<span class="keyword">int</span> tv) &#123; <span class="comment">//静态变量</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; tempvalue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="comment">// [=](int tv) &#123;</span></span><br><span class="line">            <span class="comment">// [&amp;](int tv) &#123;</span></span><br><span class="line">            <span class="keyword">if</span> (tv % tempvalue == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    tempvalue++;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; gv[0](20) &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_tempvalue = <span class="number">7</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// gv.push_back(</span></span><br><span class="line">        <span class="comment">//     [=](int tv) &#123;</span></span><br><span class="line">        <span class="comment">//         // [&amp;](int tv) &#123;</span></span><br><span class="line">        <span class="comment">//         if (tv % m_tempvalue == 0)//this.m_tempvalue</span></span><br><span class="line">        <span class="comment">//         &#123;</span></span><br><span class="line">        <span class="comment">//             return true;</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">        <span class="comment">//         return false;</span></span><br><span class="line">        <span class="comment">//     &#125;);</span></span><br><span class="line">        <span class="comment">//此时可不依赖类</span></span><br><span class="line">        <span class="comment">// auto tempvaluecopy = m_tempvalue;</span></span><br><span class="line">        <span class="comment">// gv.push_back(</span></span><br><span class="line">        <span class="comment">//     [tempvaluecopy](int tv) &#123;</span></span><br><span class="line">        <span class="comment">//         // [&amp;](int tv) &#123;</span></span><br><span class="line">        <span class="comment">//         if (tv % tempvaluecopy == 0) //this.m_tempvalue</span></span><br><span class="line">        <span class="comment">//         &#123;</span></span><br><span class="line">        <span class="comment">//             return true;</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">        <span class="comment">//         return false;</span></span><br><span class="line">        <span class="comment">//     &#125;);</span></span><br><span class="line">        <span class="comment">//广义lambda捕获也可解决</span></span><br><span class="line">        gv.push_back(</span><br><span class="line">            [ab = m_tempvalue](<span class="keyword">int</span> tv) &#123;</span><br><span class="line">                <span class="comment">// [&amp;](int tv) &#123;</span></span><br><span class="line">                <span class="keyword">if</span> (tv % ab == <span class="number">0</span>) <span class="comment">//this.m_tempvalue</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    CT()&#123;&#125;;</span><br><span class="line">    ~CT()&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// func();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; gv[0](20) &lt;&lt; endl; //&amp;捕获，此时调用是一个局部量执行完函数后会失效，使用=捕获即可</span></span><br><span class="line">    <span class="comment">//形参列表可以使用auto</span></span><br><span class="line">    <span class="comment">// CT *ct = new CT();</span></span><br><span class="line">    <span class="comment">// ct-&gt;add();</span></span><br><span class="line">    <span class="comment">// delete ct;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; gv[0](23) &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//捕获，只针对在创建lambda表达式的作用域内可见的、非静态、局部变量</span></span><br><span class="line">    <span class="comment">//此时m_tempvalue是类的成员变量，不能捕获。使用=也就是使用了this,捕获指针值</span></span><br><span class="line">    <span class="comment">//静态局部变量不能被捕获，类似按照引用捕获</span></span><br><span class="line">    func();</span><br><span class="line">    gv[<span class="number">0</span>](<span class="number">20</span>);<span class="comment">//5</span></span><br><span class="line">    func();</span><br><span class="line">    gv[<span class="number">0</span>](<span class="number">20</span>);<span class="comment">//6</span></span><br><span class="line">    gv[<span class="number">1</span>](<span class="number">20</span>);<span class="comment">//6 每次调用增一</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>综合（1）</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>云计算课设</title>
    <url>/2020/06/15/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%BE%E8%AE%BE/</url>
    <content><![CDATA[<p>爬虫：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    print(<span class="string">'正在加载'</span>+url)</span><br><span class="line">    headers=&#123;<span class="string">'User-Agent'</span>:<span class="string">'User-Agent:Mozilla/5.0'</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.content</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,  <span class="string">"html.parser"</span>)</span><br><span class="line">    info = soup.find(<span class="string">'div'</span>,  class_=<span class="string">'wdetail'</span>)</span><br><span class="line">    rows=[]</span><br><span class="line">    tr_list = info.find_all(<span class="string">'tr'</span>)[<span class="number">1</span>:]       <span class="comment"># 使用从第二个tr开始取</span></span><br><span class="line">    <span class="keyword">for</span> index,  tr <span class="keyword">in</span> enumerate(tr_list):     <span class="comment"># enumerate可以返回元素的位置及内容</span></span><br><span class="line">        td_list = tr.find_all(<span class="string">'td'</span>)</span><br><span class="line">        date = td_list[<span class="number">0</span>].text.strip().replace(<span class="string">"\n"</span>, <span class="string">""</span>)  <span class="comment"># 取每个标签的text信息，并使用replace()函数将换行符删除</span></span><br><span class="line">        dayweather = td_list[<span class="number">1</span>].text.strip().replace(<span class="string">"\n"</span>, <span class="string">""</span>).split(<span class="string">"/"</span>)[<span class="number">0</span>].strip()</span><br><span class="line">        nightweather = td_list[<span class="number">1</span>].text.strip().replace(<span class="string">"\n"</span>, <span class="string">""</span>).split(<span class="string">"/"</span>)[<span class="number">1</span>].strip()</span><br><span class="line">        temperature_high = td_list[<span class="number">2</span>].text.strip().replace(<span class="string">"\n"</span>,  <span class="string">""</span>).split(<span class="string">"/"</span>)[<span class="number">0</span>].strip()</span><br><span class="line">        temperature_low = td_list[<span class="number">2</span>].text.strip().replace(<span class="string">"\n"</span>,  <span class="string">""</span>).split(<span class="string">"/"</span>)[<span class="number">1</span>].strip()</span><br><span class="line">        windpower=td_list[<span class="number">3</span>].text.strip().replace(<span class="string">"\n"</span>,  <span class="string">""</span>).split(<span class="string">" "</span>)[<span class="number">0</span>].strip();</span><br><span class="line">        winddir = td_list[<span class="number">3</span>].text.strip().replace(<span class="string">"\n"</span>, <span class="string">""</span>).split(<span class="string">" "</span>)[<span class="number">1</span>].strip();</span><br><span class="line">        rows.append((date,dayweather,nightweather,temperature_high,temperature_low,windpower,winddir))</span><br><span class="line">    <span class="keyword">return</span> rows</span><br><span class="line">cities = [<span class="string">'lvyang'</span>,<span class="string">'nanyang'</span>,<span class="string">'pingdingshan'</span>,<span class="string">'puyang'</span>,<span class="string">'sanmenxia'</span>,<span class="string">'shangqiu'</span>,<span class="string">'xinxiang'</span>,<span class="string">'xinyang'</span>,</span><br><span class="line">          <span class="string">'xuchang'</span>,<span class="string">'zhengzhou'</span>,<span class="string">'zhoukou'</span>,<span class="string">'zhumadian'</span>]</span><br><span class="line">years = [<span class="string">'2011'</span>,<span class="string">'2012'</span>,<span class="string">'2013'</span>,<span class="string">'2014'</span>,<span class="string">'2015'</span>,<span class="string">'2016'</span>,<span class="string">'2017'</span>,<span class="string">'2018'</span>,<span class="string">'2019'</span>]</span><br><span class="line">months = [<span class="string">'01'</span>,<span class="string">'02'</span>,<span class="string">'03'</span>,<span class="string">'04'</span>,<span class="string">'05'</span>,<span class="string">'06'</span>, <span class="string">'07'</span>, <span class="string">'08'</span>,<span class="string">'09'</span>,<span class="string">'10'</span>,<span class="string">'11'</span>,<span class="string">'12'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> city <span class="keyword">in</span> cities:</span><br><span class="line">        <span class="keyword">with</span> open(city + <span class="string">'_weather.csv'</span>, <span class="string">'a'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> f:</span><br><span class="line">            writer = csv.writer(f)</span><br><span class="line">            writer.writerow([<span class="string">'date'</span>,<span class="string">'dayweather'</span>,<span class="string">'nightweather'</span>,<span class="string">'temperature_high'</span>,<span class="string">'temperature_low'</span>,<span class="string">'windpower'</span>,<span class="string">'winddir'</span>])</span><br><span class="line">            <span class="keyword">for</span> year <span class="keyword">in</span> years:</span><br><span class="line">                <span class="keyword">for</span> month <span class="keyword">in</span> months:</span><br><span class="line">                    url = <span class="string">'http://www.tianqihoubao.com/lishi/'</span>+city+<span class="string">'/month/'</span>+year+month+<span class="string">'.html'</span></span><br><span class="line">                    html = get_one_page(url)</span><br><span class="line">                    content=parse_one_page(html)</span><br><span class="line">                    writer.writerows(content)</span><br><span class="line">                    print(city+year+month+<span class="string">' is OK!'</span>)</span><br><span class="line">                    time.sleep(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>云计算</category>
      </categories>
  </entry>
  <entry>
    <title>C++快刷(3)</title>
    <url>/2020/06/14/C-%E5%BF%AB%E5%88%B7-3/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __Template__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __Template__</span></span><br><span class="line"><span class="comment">// template &lt;typename T&gt; //至少有一个参数，可以使用class代替typename,有多个参数用","分隔</span></span><br><span class="line"><span class="comment">// //有时需要指定模板实参,模板实参是系统推断出来，若不能推断则需要指定类型</span></span><br><span class="line"><span class="comment">// T add(T a1, T a2)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     T sum = a1 + a2;</span></span><br><span class="line"><span class="comment">//     return sum;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//非类型模板参数</span></span><br><span class="line"><span class="comment">// template &lt;int a, int b&gt;</span></span><br><span class="line"><span class="comment">// int Add()</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     int add = a + b;</span></span><br><span class="line"><span class="comment">//     return add;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//混合模板</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> a, <span class="keyword">int</span> b&gt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(T c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> add = (<span class="keyword">int</span>)c + a + b;</span><br><span class="line">    <span class="keyword">return</span> add;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不常用</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">unsigned</span> l1, <span class="keyword">unsigned</span> l2&gt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">charcmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> (&amp;p1)[l1], <span class="keyword">const</span> <span class="keyword">char</span> (&amp;p2)[l2])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(p1, p2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// int add(int a1,int a2)&#123;</span></span><br><span class="line"><span class="comment">//     int sum=a1+a2;</span></span><br><span class="line"><span class="comment">//     return sum;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//类模板</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> M&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myvector</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">typedef</span> M *myinteator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    myvector();</span><br><span class="line">    myvector &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> myvector &amp;); <span class="comment">//在模板内部使用模板名不需要提供模板参数</span></span><br><span class="line">    <span class="comment">//myvector&lt;M&gt; &amp;operator=(const myvector&lt;M&gt; &amp;)</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">myinteator <span class="title">mybegin</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">myinteator <span class="title">myend</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myfunc</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> M&gt;</span><br><span class="line"><span class="keyword">void</span> myvector&lt;M&gt;::myfunc()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> M&gt;</span><br><span class="line">myvector&lt;M&gt;::myvector()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> M&gt;</span><br><span class="line">myvector&lt;M&gt; &amp;myvector&lt;M&gt;::<span class="keyword">operator</span>=(<span class="keyword">const</span> myvector&lt;M&gt; &amp;)<span class="comment">//返回一个实例化的myvector</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __Template1__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __Template1__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> <span class="built_in">size</span> = <span class="number">10</span>&gt;</span><br><span class="line">class myarray</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T arr[<span class="built_in">size</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    myarray()&#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> <span class="built_in">size</span>&gt;</span><br><span class="line"><span class="keyword">void</span> myarray&lt;T, <span class="built_in">size</span>&gt;::func1()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">size</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project4.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"myarray.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//可调用对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tc</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* data */</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    tc()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"create function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    tc(<span class="keyword">const</span> tc &amp;t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"copy function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ~tc()&#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> v1, <span class="keyword">int</span> v2)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> v1 + v2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2）将函数指针作为函数的参数传递</span></span><br><span class="line"><span class="comment">// typedef int (*Type)(int, int); //定义函数指针类型，类型名为Type</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mf</span><span class="params">(<span class="keyword">int</span> tmp1, <span class="keyword">int</span> tmp2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> tmp1 + tmp2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// void Tfunc(int i, int j, Type funcpoint)</span></span><br><span class="line"><span class="comment">// &#123; //funcpoint为函数指针</span></span><br><span class="line"><span class="comment">//     int result = funcpoint(i, j);</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; result &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//3)</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> A, <span class="keyword">typename</span> B&gt;</span><br><span class="line"><span class="comment">//template &lt;typename A,typename B=tc&gt;</span></span><br><span class="line"><span class="comment">//void testfunc(const A &amp;i, const A &amp;j, B point=tc())</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testfunc</span><span class="params">(<span class="keyword">const</span> A &amp;i, <span class="keyword">const</span> A &amp;j, B <span class="built_in">point</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">point</span>(i, j) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// int a = 10;</span></span><br><span class="line">    <span class="comment">// int b = 20;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; add(a, b) &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// int result = Add&lt;12, 13&gt;(); //显式指定模板参数，不能给变量，在编译时值就需要确定</span></span><br><span class="line">    <span class="keyword">int</span> result = Add&lt;<span class="keyword">int</span>, <span class="number">10</span>, <span class="number">20</span>&gt;(<span class="number">30</span>); <span class="comment">//混合类型模板</span></span><br><span class="line">    <span class="keyword">int</span> result1 = charcmp(<span class="string">"test1"</span>, <span class="string">"test2"</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; result1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//1)</span></span><br><span class="line">    myvector&lt;<span class="keyword">int</span>&gt; tempvec;     <span class="comment">//实例化类（类型），一旦被实例化，就会有自己的成员函数</span></span><br><span class="line">    myvector&lt;<span class="keyword">double</span>&gt; tempvec1; <span class="comment">//类模板的成员函数与这个类模板相同的实例参数</span></span><br><span class="line">    myvector&lt;<span class="built_in">string</span>&gt; tempvec2; <span class="comment">//需要将类模板成员函数的定义写在类模板定义的外边</span></span><br><span class="line">    <span class="comment">//定义在类模板之外的成员函数必须以关键字template开始，后接模板参数列表</span></span><br><span class="line">    <span class="comment">//同时在类名后面使用&lt;&gt;将模板参数列表里面所有参数列出来，若有多个模板参数，用，分隔</span></span><br><span class="line">    <span class="comment">//实例化的模板只有在使用的时候才会被实例化</span></span><br><span class="line">    <span class="comment">//------非类型模板,double、float、类类型不能做模板参数</span></span><br><span class="line">    myarray&lt;<span class="keyword">int</span>, <span class="number">100</span>&gt; myarray1;</span><br><span class="line">    myarray1.func1();</span><br><span class="line">    myarray&lt;<span class="keyword">int</span>&gt; myarray;</span><br><span class="line">    myarray.func1();</span><br><span class="line">    <span class="comment">//2）将函数指针作为函数的参数传递</span></span><br><span class="line">    <span class="comment">// Tfunc(2, 3, mf); //此处传递mf给函数指针然后调用</span></span><br><span class="line">    <span class="comment">//3)模板函数趣味使用</span></span><br><span class="line">    testfunc(<span class="number">3</span>, <span class="number">4</span>, mf);</span><br><span class="line">    <span class="comment">//4）类对象构造后，通过拷贝构造传入函数使用</span></span><br><span class="line">    tc tcobj;</span><br><span class="line">    testfunc(<span class="number">4</span>, <span class="number">5</span>, tcobj); <span class="comment">//此时会调用()来求和</span></span><br><span class="line">    <span class="comment">//testfunc(4,5,tc());//此时形成临时对象来直接构造函数执行函数</span></span><br><span class="line">    tcobj(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//4）默认模板参数</span></span><br><span class="line">    <span class="comment">// myarray&lt;int&gt; abc;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>模板</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>C++快刷(2)</title>
    <url>/2020/06/13/C-%E5%BF%AB%E5%88%B7-2/</url>
    <content><![CDATA[<p>31、友元函数：在一个类中声明为友元函数，那么在函数中可以访问该类的所有成员.友元函数不属于类成员。友元类，将一个类定义为友元类，可以访问该类的所有成员。在A中定义B为友元类，则B可以访问A中所有成员。但友元不能继承，不具有传递性、单向。<br>32、友元成员函数：只有public才能成为其他类的友元成员函数。friend 类型 类名::函数名，该类中需要引入类的.h，而函数的定义类只需要加类声明（class A;）。特定函数调用类成员。<br>33、RTTI：运行时的类型识别。使用基类指针或引用检查指针或引用对象的实际派生类型。例如使用基类类型new一个子类指针，可以搞清楚指针的指向。使用：1）（ 不能将基类转成派生类，反之可以）使用dynamic_cast能够将基类的指针或引用安全转换为派生类指针或引用。eg:Human <em>ph = new Man;Man *p = dynamic_cast&lt;Man *&gt;(ph);2）typeid返回指针或引用所指对象的实际类型。eg:typeid(</em>ph).name()，可以用来比较两个指针是否指向同一类型对象eg：typeid(<em>ph)==typeid(</em>ph2)指向对象相同。注意基类中至少有一个虚函数方能使用，这三个都需要。只有虚函数的存在运算符才会使用指针或引用的动态类型。type_info：一个类，方法：name<br>const type_info &amp;tp=typeid(*ph);cout&lt;&lt;tp.name()&lt;&lt;endl;输出class Man。<br>34、“如果一个类中存在虚函数便会生成一个虚函数表，表中存在很多项，每一项都是一个指针，每个指针指向这个类每个虚函数的入口地址，但第一个项指向的时类关联的type_info对象“<br>35、通过子类的初始化列表给父类构造函数传递参数，只需要在初始化列表中加入，使用：类名(此处依据父类构造函数的参数数目)。eg:A(int i) : value(i){};  C(int i, int j, int k) : A(i), m_value(k){};<br>36、final，在类名之后添加可令此类不作基类。静态类型：变量声明时的类型，编译时已知。动态类型：指针或引用所代表的对象的类型，运行时可知。只有基类指针和引用才会出现静态、动态类型不同。就是基类new子类对象。<br>37、可以使用子类对象初始化父类对象。Man man;Human Human(man);当派生类为一个基类对象初始化、赋值时，只有该派生类的基类部分会被拷贝、赋值，即基类只会处理自身成员。<br>38、左值引用：必须初始化、必须绑定左值，不能绑定右值，但const可以绑定.eg:const int &amp;c=1。右值引用：必须绑定右值，主要用来绑定一些即将销毁的或临时对象，eg:int &amp;&amp;b=1;–i是返回左值、i–返回右值。临时对象都是右值，右值表达式的左侧是左值。函数的形参也是左值。<br>39、右值引用目的：1）为了提高程序效率，将拷贝对象变成移动对象（分配的内存不回收直接给到下一个对象使用）2）移动对象发生：应付移动构造函数、移动赋值运算符（实现移动）<br>40、move函数：将一个左值强制转换成一个右值。eg:int z = 10;int &amp;&amp;y = move(z);y = 15;这个右值引用表达式=两侧没有关系，值的改变不相互影响。<br>41、产生临时对象的情况和解决：1）使用引用给函数传递参数，可以少调用一次拷贝构造函数、析构函数，避免使用临时变量来修改值。2）定义对象与给对象初值放在一起。eg:A a(10,10);3）隐式类型转换保证函数调用成功，C++只会为const引用产生临时变量。有时可以使用一个构造函数将所需要的值赋予后返回，返回值使用定义的类型变量接管。eg：Temp Test(Temp &amp;A){return Temp(A.成员变量);}构造函数。此时返回的还是成员变量才可使用这种方法。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __MAN__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __MAN__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> :</span> <span class="keyword">public</span> Human</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Man()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//funcprot();</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running Man()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">funMan</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running funMan()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">samenamefunc</span><span class="params">(<span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Human::samenamefunc();</span><br><span class="line">        Human::samenamefunc(<span class="number">10</span>);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running Man samenamefunc(int)"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">using</span> Human::samenamefunc;</span><br><span class="line">    <span class="comment">// void eat() override</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "Man eating varieties meat" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eat2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Man.eat2()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    ~Man()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running ~Man()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">man</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"test"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">functionman</span><span class="params">(<span class="keyword">const</span> Man &amp;tempman)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __WOMEN__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __WOMEN__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Women</span> :</span> <span class="keyword">public</span> Human</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Women()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//funcprot();</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running Women()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">funWomen</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running funWomen()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// void eat()</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "Women eating varieties vegetables" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eat2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Women.eat2()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    ~Women()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"running ~Women()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __TEST__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __TEST__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project1.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">functionman</span><span class="params">(<span class="keyword">const</span> Man &amp;tempman)</span></span>&#123;</span><br><span class="line">    tempman.man();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project1.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project2.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project3.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// void func(const Man &amp;tempman)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     tempman.functionman();</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    A(<span class="keyword">int</span> i) : value(i)&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">callCAF</span><span class="params">(<span class="keyword">int</span> x, A &amp;a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a.data = x;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a.data &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> :</span> <span class="keyword">public</span> A</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_value;</span><br><span class="line">    C(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k) : A(i), m_value(k)&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Man man;</span></span><br><span class="line">    <span class="comment">// Man *pman=new Man();</span></span><br><span class="line">    <span class="comment">// delete pman;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Human *mv=new Man();</span></span><br><span class="line">    <span class="comment">// mv-&gt;eat2();</span></span><br><span class="line">    <span class="comment">// Human *wv=new Women();</span></span><br><span class="line">    <span class="comment">// wv-&gt;eat2();</span></span><br><span class="line">    <span class="comment">// delete mv;</span></span><br><span class="line">    <span class="comment">// Human *h = new Human();</span></span><br><span class="line">    <span class="comment">// Man *m = new Man();</span></span><br><span class="line">    <span class="comment">// // 父类指针new一个子类对象</span></span><br><span class="line">    <span class="comment">// Human *hm = new Man();</span></span><br><span class="line">    <span class="comment">// hm-&gt;eat();</span></span><br><span class="line">    <span class="comment">// delete hm;</span></span><br><span class="line">    <span class="comment">// Human *hw = new Women();</span></span><br><span class="line">    <span class="comment">// hw-&gt;eat();</span></span><br><span class="line">    <span class="comment">// hm-&gt;funHuman();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Man man;</span></span><br><span class="line">    <span class="comment">// man.funcpub();</span></span><br><span class="line">    <span class="comment">// man.samenamefunc(10);</span></span><br><span class="line">    <span class="comment">//=========================</span></span><br><span class="line">    <span class="comment">// Man man;</span></span><br><span class="line">    <span class="comment">// functionman(man);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// B b;</span></span><br><span class="line">    <span class="comment">// A a;</span></span><br><span class="line">    <span class="comment">// b.callCAF(2,a);</span></span><br><span class="line">    <span class="comment">// return 0;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Man *p=(Man *)(ph);</span></span><br><span class="line">    <span class="comment">// Human *ph = new Man;</span></span><br><span class="line">    <span class="comment">// Human &amp;q = *ph;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; typeid(*ph).name() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; typeid(q).name() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// Man *p = dynamic_cast&lt;Man *&gt;(ph);</span></span><br><span class="line">    <span class="comment">// if (p != nullptr)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     p-&gt;funMan();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Human *p1 = new Man;</span></span><br><span class="line">    <span class="comment">// const type_info &amp;tp = typeid(*p1);</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; tp.name() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// C c(10,20,30);</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> &amp;&amp;y=i++;</span><br><span class="line">    i=<span class="number">60</span>;</span><br><span class="line">    y=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;y&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">// int z = 10;</span></span><br><span class="line">    <span class="comment">// int &amp;a = z;</span></span><br><span class="line">    <span class="comment">// a=7;</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;a&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// int &amp;&amp;y = 8;</span></span><br><span class="line">    <span class="comment">// y = 15;</span></span><br><span class="line">    <span class="comment">// y = z;</span></span><br><span class="line">    <span class="comment">// a = 20;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; y &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>42、移动构造函数：右值是为该函数服务的，将内存的所有者变更以提高程序效率。eg:Time(const Time &amp;&amp;temp);1）数据移动后断绝原对象与内存的关系2）移动后原对象可被销毁尽量不去使用。示例：//移动构造函数 noexcept通知标准库构造函数不抛出异常 将原对象指向的内存m_pb,直接让临时对象指向这段内存A(A &amp;&amp;temp) noexcept : m_pb(temp.m_pb){temp.m_pb = nullptr;//断绝关系cout &lt;&lt; “A create-move function running” &lt;&lt; endl;}其中m_pb为B类型对象，如果调用则首先在类A中定义static A getA(){A a;return a;}然后A c = getA();A a(move(c));使用move来转换左值。</p>
<p>43、尽量给类添加移动构造函数和移动赋值运算符（需要大量内存的类）、将原对象指向的内存置空，以便可以随时销毁、若没有移动函数会调用拷贝函数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"project.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_bm;</span><br><span class="line">    B() : m_bm(<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"B create function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    B(<span class="keyword">const</span> B &amp;temp) : m_bm(temp.m_bm)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"B copy function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~B()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"B delete function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    B *m_pb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    A() : m_pb(<span class="keyword">new</span> B())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A create function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用类B构造函数来初始化A</span></span><br><span class="line">    A(<span class="keyword">const</span> A &amp;temp) : m_pb(<span class="keyword">new</span> B(*(temp.m_pb)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A copy function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//移动构造函数  noexcept通知标准库构造函数不抛出异常</span></span><br><span class="line">    A(A &amp;&amp;temp) <span class="keyword">noexcept</span> : m_pb(temp.m_pb) <span class="comment">//将原对象指向的内存m_pb,直接让临时对象指向这段内存</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp.m_pb = <span class="literal">nullptr</span>; <span class="comment">//断绝关系</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A create-move function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//拷贝赋值运算符</span></span><br><span class="line">    A &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> A &amp;src)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == &amp;src)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">delete</span> m_pb;               <span class="comment">//删除自己的内存,初始化会分配内存</span></span><br><span class="line">        m_pb = <span class="keyword">new</span> B(*(src.m_pb)); <span class="comment">//重新分配内存</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A copy = function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//移动赋值运算符</span></span><br><span class="line">    A &amp;<span class="keyword">operator</span>=(A &amp;&amp;src) <span class="keyword">noexcept</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == &amp;src)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">delete</span> m_pb;</span><br><span class="line">        m_pb = src.m_pb;    <span class="comment">//对方内存直接拿过来</span></span><br><span class="line">        src.m_pb = <span class="literal">nullptr</span>; <span class="comment">//切断关联</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A copy-move = function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~A()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> m_pb;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A delete function running"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">static</span> A <span class="title">getA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    A a;</span><br><span class="line">    <span class="keyword">return</span> a;<span class="comment">//临时对象据说会调用拷贝构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// B *pb = new B();</span></span><br><span class="line">    <span class="comment">// pb-&gt;m_bm = 100;</span></span><br><span class="line">    <span class="comment">// B *pb2 = new B(*pb);</span></span><br><span class="line">    <span class="comment">// delete pb;</span></span><br><span class="line">    <span class="comment">// delete pb2;</span></span><br><span class="line">    <span class="comment">//____________</span></span><br><span class="line">    <span class="comment">// A c = getA();</span></span><br><span class="line">    <span class="comment">// A a(c);</span></span><br><span class="line">    <span class="comment">// A a(move(c));</span></span><br><span class="line">    A f=getA();</span><br><span class="line">    A a2;</span><br><span class="line">    a2=f;</span><br><span class="line">    a2=<span class="built_in">move</span>(f);<span class="comment">//移动赋值后f不要再使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>44、使用using A::A可以继承类A的构造函数，若A构造函数有默认值则可以调少一个参数的构造函数，基类有多个构造函数也可全部继承但若派生类存在于基类相同的构造函数的参数列表则覆盖继承的，其与B(int i, int j, int k) : A(i, j, k) {}类似。一个类只继承基类的构造函数，默认、拷贝、移动构造函数不能继承。若子类只有using则编译器会生成默认构造函数。</p>
<p>45、静态成员变量：若不使用可以不用定义，否则需要。eg:static int m_static;int Grand::m_static = 5;可以给初值，不给则默认0，可以在main中使用类名::m_static=值，来修改。</p>
<p>46、1）派生类对象将构造并初始化所有基类子对象、派生类的构造函数初始化列表值初始化他的直接基类，依次初始化、构造函数调用顺序与public 类 这样的顺序有关，在前先调用，调用有父类先调用父类。2）若父类存在默认构造函数，可在初始化列表中省略调用该类初始化，会自动调用默认函数，即会隐式初始化基类。3）如果一个类从他的基类中继承了相同的构造函数，这个类必须为该函数定义自己的函数。eg:using A::A;using B::B;C(int v):A(v),B(v){};</p>
<p>47、虚继承：可以通过子类（C）的直接基类（B、B1），两次继承爷爷类(A)，因为父类都继承爷爷类。此时会导致空间占用、A中成员调用冲突。此时可使用（virtual在public前后都可 父类）让B、B1虚继承A，此时A为虚基类。1）虚继承需要孙类初始化爷爷类，若C存在子类则Grand需要靠其子类初始化即需要最底层类初始化虚基类。2）初始化顺序，虚基类最先初始化，然后按照初始化列表顺序初始化。3）多个虚基类通过初始化列表寻找类的虚基类出现顺序。总结：虚继承不建议使用，在简单、不易出现二义性，能用单继承就不用多继承。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Grand</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_valuegrand;</span><br><span class="line">    Grand()&#123;&#125;;</span><br><span class="line">    Grand(<span class="keyword">int</span> i) : m_valuegrand(i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Grand create function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">virtual</span> ~Grand()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Grand delete function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myinfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m_valuegrand &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> m_static;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Grand::m_static = <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> Grand</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_valuea;</span><br><span class="line">    A(<span class="keyword">int</span> i) : Grand(i), m_valuea(i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A create function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~A()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A delete function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myinfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m_valuea &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//出现A2类后A、A2都继承Grand，而且C是他俩的子类，此时用到虚继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A2</span> :</span> <span class="keyword">public</span> <span class="keyword">virtual</span> Grand</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_valuea2;</span><br><span class="line">    A2(<span class="keyword">int</span> i) : Grand(i), m_valuea2(i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A2 create function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~A2()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"A2 delete function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myinfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m_valuea2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_valueb;</span><br><span class="line">    B()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"MO function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    B(<span class="keyword">int</span> i) : m_valueb(i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"B cretae function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~B()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"B delete function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myinfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m_valueb &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> :</span> <span class="keyword">public</span> A, <span class="keyword">public</span> A2, <span class="keyword">public</span> B</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// C(int i, int j, int k) : A(i), B(j), m_valuec(k)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; "C create function" &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    C(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k) : A(i), A2(i), Grand(j), m_valuec(k)<span class="comment">//虚继承需要孙类初始化爷爷类，若C存在子类则Grand需要靠其子类初始化</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"C create function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~C()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"C delete function"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m_valuec;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myinfoC</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// cout &lt;&lt; m_valuec &lt;&lt; endl;</span></span><br><span class="line">        A::myinfo();</span><br><span class="line">        A2::myinfo();</span><br><span class="line">        B::myinfo();</span><br><span class="line">        myinfo();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">myinfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m_valuec &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// using A::A;</span></span><br><span class="line">    <span class="comment">// using B::B;</span></span><br><span class="line">    <span class="comment">// C(int v):A(v),B(v)&#123;&#125;;//从多个父类继承同名构造函数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">C <span class="title">ctest</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">    ctest.m_valuegrand = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    ctest.myinfoC();</span><br><span class="line">    ctest.A::myinfo();    <span class="comment">//调用父类同名函数</span></span><br><span class="line">    Grand::m_static = <span class="number">10</span>; <span class="comment">//静态成员属于类，可使用类名引用</span></span><br><span class="line">    A::m_static = <span class="number">20</span>;     <span class="comment">//其父类的静态成员可以使用子类修改</span></span><br><span class="line">    C::m_static = <span class="number">30</span>;</span><br><span class="line">    ctest.m_static = <span class="number">100</span>; <span class="comment">//可以使用对象名应用，</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; C::m_static &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>48、1）类型转换构造函数：与带一个参数的构造函数一样。eg:TestInt q=12;/TestInt ti(12);（隐式类型转换）.TestInt t1=TestInt(120);（显式）。2）类型转换运算符：与类型转换构造函数作用相反。将一个类类型对象转成其他数据类型。格式：operator type() const。const非必须，一般不应该改变待转换对象内容。type：要转换类型，只要是常规返回类型均可，数组、函数不行，但是数组、函数指针引用可以。形参为空，为隐式执行，需要返回一个type类型的值。并且必须定义为成员函数。以上两者尽量少用，若要使用一个类中最多使用一个。了解即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestInt</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//定义函数指针类型，代表的函数带一个int形参，没有返回类型</span></span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*fpoint)</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="comment">// using typoint=void(*)(int);</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">myinfo</span><span class="params">(<span class="keyword">int</span> v1)</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="comment">//静态成员函数</span></span><br><span class="line">        <span class="keyword">int</span> test;</span><br><span class="line">        test = <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//类型转换运算符，将类类型转换为一个函数指针</span></span><br><span class="line">    <span class="function"><span class="keyword">operator</span> <span class="title">fpoint</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//返回一个函数指针</span></span><br><span class="line">        <span class="keyword">return</span> myinfo;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_i;</span><br><span class="line">    TestInt(<span class="keyword">int</span> x = <span class="number">0</span>) : m_i(x)</span><br><span class="line">    &#123; <span class="comment">//类型转换构造函数，也是带一个参数的构造函数，将一个int转换为TestInt</span></span><br><span class="line">        <span class="keyword">if</span> (m_i &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_i = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (m_i &gt; <span class="number">100</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_i = <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//类型转换运算符</span></span><br><span class="line">    <span class="function"><span class="keyword">operator</span> <span class="title">int</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~TestInt() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m_n;              <span class="comment">//普通成员变量属于对象</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> m_nstatic; <span class="comment">//静态成员变量属于类,需要定义</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ptfunc</span><span class="params">(<span class="keyword">int</span> tempvalue)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"pt func"</span> &lt;&lt; tempvalue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">virtualfunc</span><span class="params">(<span class="keyword">int</span> tempvalue)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"virtual func"</span> &lt;&lt; tempvalue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticfunc</span><span class="params">(<span class="keyword">int</span> tempvalue)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"tatic func"</span> &lt;&lt; tempvalue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> CT::m_nstatic = <span class="number">10</span>; <span class="comment">//静态成员变量定义</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// TestInt q=12;</span></span><br><span class="line">    <span class="comment">// TestInt ti(12);//隐式类型转换</span></span><br><span class="line">    <span class="comment">// TestInt t1=TestInt(120);//调用显式类型转换构造函数</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;t1.m_i&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// TestInt ti2=22;</span></span><br><span class="line">    <span class="comment">//---------------</span></span><br><span class="line">    TestInt f = <span class="number">12</span>;</span><br><span class="line">    TestInt f2;</span><br><span class="line">    f2 = <span class="number">10</span>;                        <span class="comment">//编译器用10生成临时对象，调用类型转换构造函数，又将临时对象内容给f2</span></span><br><span class="line">    <span class="keyword">int</span> k = f2 + <span class="number">5</span>;                 <span class="comment">//将f2转换成int，后与5求和</span></span><br><span class="line">    <span class="keyword">int</span> k2 = f2.<span class="keyword">operator</span> <span class="keyword">int</span>() + <span class="number">5</span>; <span class="comment">//显式调用</span></span><br><span class="line">    <span class="comment">//-----------------</span></span><br><span class="line">    <span class="function">TestInt <span class="title">w</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">    (w.<span class="keyword">operator</span> TestInt::fpoint())(<span class="number">13</span>);</span><br><span class="line">    <span class="comment">//----------------类成员函数指针</span></span><br><span class="line">    <span class="keyword">void</span> (CT::*myfpoint)(<span class="keyword">int</span>) = &amp;CT::ptfunc; <span class="comment">//一个类成员函数指针变量定义,名字为mypoint,然后类成员函数指针变量被赋值</span></span><br><span class="line">    CT abc, *pc;</span><br><span class="line">    pc = &amp;abc;</span><br><span class="line">    (abc.*myfpoint)(<span class="number">100</span>); <span class="comment">//对象abc调用指针变量myfpoint指向的成员函数</span></span><br><span class="line">    (pc-&gt;*myfpoint)(<span class="number">120</span>); <span class="comment">//同上</span></span><br><span class="line">    <span class="comment">//虚函数指针</span></span><br><span class="line">    <span class="keyword">void</span> (CT::*myfpointvirtual)(<span class="keyword">int</span>) = &amp;CT::virtualfunc;</span><br><span class="line">    (abc.*myfpointvirtual)(<span class="number">100</span>);</span><br><span class="line">    (pc-&gt;*myfpointvirtual)(<span class="number">120</span>);</span><br><span class="line">    <span class="comment">//静态成员函数</span></span><br><span class="line">    <span class="keyword">void</span> (*myfpointstatic)(<span class="keyword">int</span>) = &amp;CT::staticfunc;</span><br><span class="line">    myfpointstatic(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//类成员变量指针</span></span><br><span class="line">    <span class="comment">//普通成员变量指针</span></span><br><span class="line">    <span class="keyword">int</span> CT::*s = &amp;CT::m_n;</span><br><span class="line">    CT testtemp;</span><br><span class="line">    testtemp.*s = <span class="number">180</span>; <span class="comment">//使用成员变量指针修改成员变量值，等价于testtemp.m_n=180;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; testtemp.m_n &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//静态成员变量指针</span></span><br><span class="line">    <span class="keyword">int</span> *test1 = &amp;CT::m_nstatic;</span><br><span class="line">    *test1 = <span class="number">888</span>;<span class="comment">//等价于CT::m_nstatic=888;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>类</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>C++快刷(1)</title>
    <url>/2020/06/10/C-%E5%BF%AB%E5%88%B7/</url>
    <content><![CDATA[<p>1、namespace:命名空间，使得可同时调用同名函数。namespace a{void b()}调用只需要a::b()<br>2、std::endl 是一个模板函数名，相当于函数指针<br>作用：1）输出换行符\n<br>2）强制刷新输出缓冲区，缓冲区中所有数据都被系统清除了。<br>输出缓冲区：一般内存cout输出的时候实际是往输出缓冲区输出内容，那么输出缓冲区什么时候把内容输出到屏幕去呢？①缓冲区满了②程序执行到main的return语句③调用了这个std::endl，能够强制刷新输出缓冲区（将缓冲区的内容往屏幕上写）④当系统不太繁忙的时候，系统也会查看缓冲区内容，发现新内容也会正常输出到屏幕<br>3、头文件防卫式声明，防止参数/函数重复定义<br>#ifndef <strong>head</strong>h__<br>#define <strong>head</strong>h__  …..  #endif<br>4、引用 eg:int value=5; int &amp;v=value;<br>5、const、constexpr  常量<br>6、static:类外定义，全局静态变量只能在定义的文件内访问（文件作用域）限制函数的作用域为文件作用域（函数之前）、局部静态变量进入函数会保持上次的值。   静态成员变量：不能使用sizeof计算成员大小、可以通过类名访问静态成员（类名::静态成员变量()）也可使用对象访问，在一个.cpp文件开头定义这个静态成员变量， 定义时可以不给初值，系统自动给0。静态成员函数不能访问非静态成员。静态成员（函数）属于类，实例化之前便有了内存空间。static是跨对象的，即在程序中定义之后不论谁修改那么所有对象访问都是该值。<br>7、内存分配：内存分为5个区域，1）栈，一般函数内的局部变量都会放在此处，由编译器自动分配和释放（速度快、空间小）2）堆，malloc/new分配(new int(‘a’)/new int[10])，free/delete来释放，忘记释放系统自动回收（速度较慢、空间很大，注意malloc,free是函数、后者是关键字）3）全局/静态变量存储区：全局变量和静态变量static4）常量存储区5）程序代码区<br>8、对于指针的初始化能用nullptr取代NULL,NULL可以认为是一个整型0，nullptr是一个真的指针类型。<br>9、C++中结构与类相似（(class)类中成员变量即是对象）,public/private中定义变量即成员变量。结构中的成员变量/函数默认访问级别为public、类中成员变量/函数默认为private，即定义结构和类需要明确成员的级别。C++结构继承默认是public，类中继承默认是private<br>10、前置返回：void function(int a)后置返回：auto function(int a)-&gt;void<br>11、内联函数：在函数定义前添加关键字inline，函数体很小(越小越好)，调用很频繁的函数，将调用该函数的动作替换为函数本体。但是决定权在编译器。函数定义需要放在.h头文件中。以便找到函数的本体源码并尝试将该函数的调用替换为函数体内的语句。循环、分支、递归最好不用。<br>12、1）const char <em>p，p指向的内容不能通过p修改，即eg:char str=”a b c” p=str *p=’N’ 这样是不行的。char const *p与其等价2）char * const p=str必需初始化，p一旦指向一个str后就不能指向其他东西，即p++不可以。但是</em>p可以修改。3）char const * const p=str，p指向、内容均不能改变。<br>const可以放在成员函数后面限制修改，但是不能放在普通函数之后。const成员函数初始化，需要在初始化列表中初始化或直接给值，不可以通过赋值初始化。<br>13、函数形参中使用const,eg:void fs(const student &amp;stu)<br>14、String：1)初始化string s1=”a”、string s2(“w”)、string s3(num,’o’)<br>2)s1.c_str()返回一个指向正规的c字符串的指针（string转换成字符串）类型为const char *p=s1.c_str();<br>15、toupper()、tolower()大小写互转<br>16、迭代器：1）int a[6]={1,2,3,4,5};vector<int> s1;vector<int> s2(a,a+5); s1.insert(s1.begin(),a,a+6);初始化   2）vector<int>::iterator s;for (auto s=s1.begin(); s!=s1.end(); s++) 直接赋值也可以。迭代器使用。3）vector<int>::reverse_iterator rs;<br>反向迭代器3）const_iterator表示所指向的值不能改变但可以改变指向,使用cbegin()常量迭代器<br>17、类型转换：强制类型转换，static_cast(编译时检查，与c中强制转换类似，可以让子类转换成父类、也可用于void *转换成其他类型) ;dynamic_cast（运行时检查，主要用于父指针类型指向子类型对象）;const_cast（去除指针或引用的const性质，在运行时使用）;reinterpret_cast（重新解释，处理无关类型，eg:int与类、一种指针与另一种指针，也即可以乱转，按照转换后的内容重新解释内容，安全性差）。使用形式为static_cast<int>(a)，不建议使用，会抑制编译器报错。<br>18、成员函数可以访问成员变量不论public、private。<br>19、函数默认参数：只能在函数声明中、默认参数必须出现在非默认参数右边。eg:void init(int hour, int minute=10, int second=10)；若存在默认参数，那么在传参时可不填写该变量值。但是此时需注意不能定义剩余的参数为函数，系统会分辨不清。<br>20、explicit，使构造函数只能用于初始化和显示类型转换。对于单参数的构造函数就使用来声明，避免隐式类型转换。<br>21、构造函数初始化列表：Mytime(int hour, int minute, int second):Hour(hour),Minute(minute),Second(second),MillTime(0){}<br>22、mutable，与const相反，放在成员变量之前即可修改const之下的变量。<br>23、this指针，返回自身对象的引用，任何对类成员的直接访问都被看成是通过this的隐式访问。只能在成员函数中使用，全局函数、静态函数中不能使用。在普通成员函数中，指向非const对象的const指针；在const成员函数中，指向<br>const对象的const指针。<br>24、默认构造函数：Time()=default;编译器为这种函数自动生成函数体。带参函数不可以使用。Time()=delete;让程序员显示禁用某个函数。<br>25、拷贝构造函数：一个类的构造函数的第一个参数是所属的类类型的引用(加const)，如果还有其他额外参数，那么这些额外的参数还都有默认值，eg:Time(const Time &amp;temp, int a)。函数默认参数必须放在函数声明中，除非无声明。一般不要加explicit.当一个实参传递给一个非引用类型的形参或者从一个函数中返回一个对象的时候也会调用。<br>26、使用public继承父类（public、private、protected），子类中权限不变，private无访问权限，即对象等不能访问。使用protected继承会使public、protected的权限变成protected，其中protected表示可以在本类或者子类的成员函数中访问。private继承public、protected后只能在本类成员函数使用。使用：当前类名:public 类名。  //子类中存在父类中的同名成员函数，不论父类中同名函数如何都无法访问，只能调用子类函数。若想调用父类函数可以1）在子类的成员函数中用，父类::函数名，强制调用。2）使用using关键字。以重载的方式使用，using 父类名::函数，调用：子类对象名.函数名。由于使用函数名让所有同名函数都在子类可见。主要目的是用来实现在子类对象中调用父类的重载版本。<br>27、虚函数：使用一个new的对象来调用父类、子类的同名（同参）函数。指针的类型为父类类型，需要哪个类的函数便new哪个类名，在父类（子类也可加）中的函数声明（实现）之前加上virtual声明为虚函数。一旦某个函数在父类中声明为虚函数，那么所有子类都为虚函数。Override，避免在子类中写错虚函数在函数声明尾部加上（为说明子类覆盖父类同名函数，只有虚函数可以覆盖）<br>调用虚函数执行的是动态绑定（在程序运行时才知道调用哪个子类的虚函数）<br>若使用对象来调用运行前便可直到哪个子类使用。<br>28、多态性：针对虚函数，体现在具有继承关系的子父类之间，重写父类函数同时将函数声明成虚函数，通过父类的指针在运行时找到绑定在指针上的对象，再通过查表来调用函数。<br>29、纯虚函数：在父类中声明但没有定义，要求子类定义自己的实现方法。父类实现：virtual void eat()=0;1）一旦一个类中有纯虚函数便不能生成这个类对象（抽象类）,主要用来当父类生成子类的，2）子类必须实现函数方法（实现后便可生成子类对象）。<br>30、用基类指针new子类对象，在delete时不会调用派生类析构函数。因此基类的析构函数一般写成虚函数。总结，在public继承中，基类对派生类及其对象的操作，只能影响从基类继承下来的成员，若想对非继承成员操作，只能定义为虚函数。析构函数也如此，此时父类子类析构函数都为虚函数。Eg:Human *mv=new Man(); delete mv;若析构函数不加则只会调用父类析构函数。即若一个类想要做基类，那么析构函数要写成虚函数。否则内存泄漏。</p>
]]></content>
      <categories>
        <category>C++</category>
        <category>基本语言</category>
      </categories>
      <tags>
        <tag>快刷</tag>
      </tags>
  </entry>
  <entry>
    <title>1127 ZigZagging on a Tree</title>
    <url>/2020/05/10/1127-ZigZagging-on-a-Tree/</url>
    <content><![CDATA[<p>Suppose that all the keys in a binary tree are distinct positive integers. A unique binary tree can be determined by a given pair of postorder and inorder traversal sequences. And it is a simple standard routine to print the numbers in level-order. However, if you think the problem is too simple, then you are too naive. This time you are supposed to print the numbers in “zigzagging order” – that is, starting from the root, print the numbers level-by-level, alternating between left to right and right to left. For example, for the following tree you must output: 1 11 5 8 17 12 20 15.</p>
<p><img src="https://images.ptausercontent.com/337cbfb0-a7b2-4500-9664-318e9ffc870e.jpg" alt="zigzag.jpg"></p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer N (≤30), the total number of nodes in the binary tree. The second line gives the inorder sequence and the third line gives the postorder sequence. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print the zigzagging sequence of the tree in a line. All the numbers in a line must be separated by exactly one space, and there must be no extra space at the end of the line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">12 11 20 17 1 15 8 5</span><br><span class="line">12 20 17 11 15 8 5 1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 11 5 8 17 12 20 15</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">vector&lt;int&gt;in,post,result[35];</span><br><span class="line">int n,tree[35][2],root;</span><br><span class="line">struct node&#123;</span><br><span class="line">	int index,depth;</span><br><span class="line">&#125;;</span><br><span class="line">void dfs(int &amp;index,int inl,int inr,int pl,int pr)&#123;</span><br><span class="line">	if(inl&gt;inr)&#123;</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	index&#x3D;pr;</span><br><span class="line">	int i&#x3D;0;</span><br><span class="line">	while (in[i]!&#x3D;post[pr]) &#123;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(tree[index][0], inl, i-1, pl, pl+(i-inl)-1);</span><br><span class="line">	dfs(tree[index][1], i+1, inr, pl+(i-inl), pr-1);</span><br><span class="line">&#125;</span><br><span class="line">void bfs()&#123;</span><br><span class="line">	queue&lt;node&gt;q;</span><br><span class="line">	q.push(node&#123;root,0&#125;);</span><br><span class="line">	while (!q.empty()) &#123;</span><br><span class="line">		node temp&#x3D;q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		result[temp.depth].push_back(post[temp.index]);</span><br><span class="line">		if(tree[temp.index][0]!&#x3D;0)&#123;</span><br><span class="line">			q.push(node&#123;tree[temp.index][0],temp.depth+1&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">		if(tree[temp.index][1]!&#x3D;0)&#123;</span><br><span class="line">			q.push(node&#123;tree[temp.index][1],temp.depth+1&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	in.resize(n+1),post.resize(n+1);</span><br><span class="line">	for (int i&#x3D;1;i&lt;&#x3D;n;i++) &#123;</span><br><span class="line">		cin&gt;&gt;in[i];</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i&#x3D;1;i&lt;&#x3D;n;i++) &#123;</span><br><span class="line">		cin&gt;&gt;post[i];</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(root, 1, n, 1, n);</span><br><span class="line">	bfs();</span><br><span class="line">	printf(&quot;%d&quot;,result[0][0]);</span><br><span class="line">	for (int i&#x3D;1;i&lt;35;i++) &#123;</span><br><span class="line">		if (i%2&#x3D;&#x3D;1) &#123;</span><br><span class="line">			for (int j&#x3D;0;j&lt;result[i].size();j++) &#123;</span><br><span class="line">				printf(&quot; %d&quot;,result[i][j]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			for (int j&#x3D;result[i].size()-1;j&gt;&#x3D;0;j--) &#123;</span><br><span class="line">				printf(&quot; %d&quot;,result[i][j]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此题一刷参考柳神的，题意很简单，根据给出的中序、后序，来按照奇偶层数正反向层次输出，参考代码则是很巧妙使用数组来存储所得到的数节点，使用0、1来代替l、r，其中不明白的一点便是map中depth对应的时post下标的值，后来想应该是post先输出根节点的缘故</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>Hibernate关联关系映射</title>
    <url>/2020/04/25/Hibernate%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<p>hibernate中的多表映射<br>数据库中设计：<br>1、一对一 外键可以生成在任意一方<br>2、一对多 外键在多的一方<br>3、多对多 生成中间关系表，引入两张表主键作为外键，两个主键成为联合外键<br>java类中设计<br>1、一对一<br>class person{<br>private int id;private String name; private Card card;}<br>class Card{<br>Private int id; private String number;private Person person;}双向关联<br>2、一对多<br>class Employee{<br>private int id;private String name;private Dept dept;}<br>class Dept{<br>private int id;private String name;private Set<Employee>e }双向关联使用set<br>3、多对多<br>class Student{<br>private int id;private String name;private Set<Teacher> t;}<br>class Teacher{<br>private int id;private String name;private Set<Student>s; }</p>
<p>hibernate一对多（在多的一方设计外键）Customer（一）Order（多）<br>1）设计类：Order类<br>private Integer id;<br>private String address;<br>private Double price;<br>private Customer customer;<br>Customer类<br>private Integer id;<br>private String name;<br>private Set<Order> orders;<br>2）在Order.hbm.xml文件中配置<br><class name="cn.itcast.onetomany.Order" table="orders"><br><id name="id" column="id" type="int"><br><generator class="native"/><br></id><br><property name="address" length="50"/><br><property name="price"/><br>A代表的是在orders表中生成的外键名称，映射Customer表中的主键<br><many-to-one name="customer" class="cn.itcast.onetomany.Customer" column="A"/><br></class><br>3）在Customer.hbm.xml文件中配置<br><class name="cn.itcast.onetomany.Customer" table="customer"><br><id name="id" column="id" type="int"><br><generator class="native"/><br></id><br><property name="name" length="20"/><br><set name="orders"><br><key column="A"/><br><one-to-many class="cn.itcast.onetomany.Order"/><br></set><br></class><br>操作：<br>//描述关系订单属于某个客户<br>o1.setCustomer(c);<br>o2.setCustomer(c);<br>//客户有多个订单<br>c.getOrders().add(o1);<br>c.getOrders().add(o2);<br>session.save(o1);<br>session.save(o2);<br>session.save(c);<br>操作时，只保存一方会出现异常org.hibernate.TransientObjectException<br>原因：持久化对象关联了瞬时对象<br>解决方案：使用级联操作，使用cascade完成配置<br>1、保存用户并级联保存订单<br><set name="orders" cascade="save-update"><br>2、保存订单并级联保存用户<br><many-to-one   cascade="save-update"></p>
<p>级联删除操作<br>没有设置级联操作时，如果删除客户，订单不变名单订单的cid置空<br>1、删除客户时，删除客户订单<br>在Customer.hbm.xml文件中<set cascade=”delete”><br>2、删除订单时，删除客户<br>在Order.hbm.xml文件中<many-to-one cascade=”delete”><br>①若客户也级联删除订单，删除任何一个订单或用户其所对应的另一方都会完全删除<br>②若客户级不联删除订单，若删除一个订单，会删除客户，但剩余订单只会将cid置空  —以上均为订单级联客户时发生的两种情况<br>删除托管对象无法产生级联删除效果，必须删除持久对象<br>Customer c=new Customer();<br>c.setId(3);<br>session.delete(c);（托管对象）</p>
<p>孤儿删除<br>得到id=5的客户<br>Customer c=(Customer)session.get(Customer.class, 3);<br>Id=5的订单<br>Order o=(Order)session.get(Order.class, 5);<br>c.getOrders().remove(o);将订单与客户解除关系<br>这时会将订单5的cid设置为null，在解除了订单客户关系后，应该将孤儿（没有客户的订单）删除，在Customer.hbm.xml配置<set name=”orders” cascade=”delete-orphan”>可以解决上述问题<br>cascade取值：<br>save-update级联保存更新，持久对象、关联瞬时对象执行save。关联托管对象执行update<br>delete级联删除<br>delete-orphan一对多模型中孤儿删除<br>all 除掉delete-orphan外所有级联关系<br>all-delete-orphan包含all和delete-orphan<br>多对多 会产生一个中间表（Student、Course）<br>在Student中有一个Set<Course>courses<br><class name="cn.itcast.manytomany.Course" table="course"><br><id name="id" column="id" type="int"><br><generator class="native"/><br></id><br><property name="cname" length="20"/><br><set name="students" table="s_c"><br><key column="A"/>描述Student在中间表中外键名称<br><many-to-many class="cn.itcast.manytomany.Course" column="B"/><br></set><br></class><br>在Course中有一个Set<Student>students<br><class name="cn.itcast.manytomany.Student" table="student"><br><id name="id" column="id" type="int"><br><generator class="native"/><br></id><br><property name="sname" length="20"/><br><set name="courses" table="s_c">s_c代表中间表名称<br><key column="B"/><br><many-to-many class="cn.itcast.manytomany.Student" column="A"/><br></set><br></class><br>1)操作<br>//学生关联课程<br>//s1.getCourses().add(c1);（单向关联）<br>//s2.getCourses().add(c1);<br>//s1.getCourses().add(c2);<br>//s2.getCourses().add(c2);<br>//课程关联学会<br>c1.getStudents().add(s1);<br>c2.getStudents().add(s1);<br>c1.getStudents().add(s2);<br>c2.getStudents().add(s2);<br>session.save(c1);<br>session.save(c2);<br>session.save(s1);<br>session.save(s2);<br>此时会出错，建立双向关联，双方都维护外键，都会产生中间表<br>解决：<br>1、单向关联2、使用inverse让某一方放弃维护外键<br><set name="courses" table="sc" inverse="true">使一方放弃维护，此时在Student.hbm.xml文件设置<br>开发中一般由多的一方来维护外键，在一的一方设置inverse=true，代表维护由多的一方</p>
<p>2)测试解除关系，删除中间表数据<br>Student s=(Student)session.get(Student.class,1);得到id=1的学生<br>Course c=(Course)session.get(Course.class,1);得到id=1的科目<br>s.getCourses().remove(c);将中间表中关联的数据删除<br>在一对多中cascade=”delete-orphan”代表删除孤儿，在多对多中，不需要设置，直接将中间表数据删除。<br>3)改变学生选课<br>//得到学生<br>Student s = (Student) session.get(Student.class, 7);<br>//得到科目<br>Course c1 = (Course) session.get(Course.class, 7);<br>Course c2 = (Course) session.get(Course.class, 8);<br>s.getCourses().remove(c2);<br>s.getCourses().add(c1);<br>4)直接删除<br>Student student = (Student) session.get(Student.class, 1);<br>session.delete(student);<br>会将学生删除，并在中间表中将关联数据也删除<br>5)删除学生时，将课程删除（反之可否）<br>1、单方设置级联<br>在Student.hbm.xml文件中<set cascade="delete"><br>学生删除以及其所学习的科目也删除<br>2、双方删除<br>在Student.hbm.xml、Course.hbm.xml文件中<set cascade="delete"><br>所有与此学生或者其所选科目有关的学生都被删除</p>
<p>Hibernate.cfg.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!-- 配制文件的dtd信息 --&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-configuration PUBLIC</span><br><span class="line">	&quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Configuration DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">	&quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-configuration-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-configuration&gt;</span><br><span class="line"> &lt;session-factory&gt;</span><br><span class="line">	&lt;!-- 指定方言 --&gt;</span><br><span class="line">	&lt;property name&#x3D;&quot;hibernate.dialect&quot;&gt;</span><br><span class="line">	    org.hibernate.dialect.SQLServerDialect</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;!--数据库驱动 --&gt;</span><br><span class="line">	&lt;property name&#x3D;&quot;hibernate.connection.driver_class&quot;&gt;</span><br><span class="line">	    com.microsoft.sqlserver.jdbc.SQLServerDriver</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;!--连接数据库的url --&gt;</span><br><span class="line">	&lt;property name&#x3D;&quot;hibernate.connection.url&quot;&gt;</span><br><span class="line">	    jdbc:sqlserver:&#x2F;&#x2F;localhost:1433;DatabaseName&#x3D;h2</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!--数据库的用户名 --&gt;</span><br><span class="line">	&lt;property name&#x3D;&quot;hibernate.connection.username&quot;&gt;</span><br><span class="line">		student</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!--数据库的密码 --&gt;</span><br><span class="line">	&lt;property name&#x3D;&quot;hibernate.connection.password&quot;&gt;</span><br><span class="line">	    student</span><br><span class="line">	&lt;&#x2F;property&gt;	</span><br><span class="line">     &lt;!--其它配置 --&gt;</span><br><span class="line">    &lt;!--输出运行时生成的SQL语句--&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;hibernate.show_sql&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;format_sql&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;hibernate.hbm2ddl.auto&quot;&gt;update&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 用来关联hbm配置文件 --&gt;</span><br><span class="line">	&lt;mapping resource&#x3D;&quot;cn&#x2F;itcast&#x2F;onetomany&#x2F;Customer.hbm.xml&quot;&#x2F;&gt;</span><br><span class="line">	&lt;mapping resource&#x3D;&quot;cn&#x2F;itcast&#x2F;onetomany&#x2F;Order.hbm.xml&quot;&#x2F;&gt;</span><br><span class="line">	&lt;!--多对多&lt;mapping resource&#x3D;&quot;cn&#x2F;itcast&#x2F;manytomany&#x2F;Course.hbm.xml&quot;&#x2F;&gt;--&gt;</span><br><span class="line">	&lt;!--&lt;mapping resource&#x3D;&quot;cn&#x2F;itcast&#x2F;manytomany&#x2F;Student.hbm.xml&quot;&#x2F;&gt;--&gt;</span><br><span class="line"> &lt;&#x2F;session-factory&gt;</span><br><span class="line">&lt;&#x2F;hibernate-configuration&gt;</span><br></pre></td></tr></table></figure>

<p>OneToManyTest.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.onetomany;</span><br><span class="line">import org.hibernate.Session;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import cn.itcast.utils.HibernateUtils;</span><br><span class="line">public class OneToManyTest &#123;</span><br><span class="line">	@Test</span><br><span class="line">	public void test1() &#123;</span><br><span class="line">		Session session&#x3D;HibernateUtils.getSession();</span><br><span class="line">		session.beginTransaction();</span><br><span class="line">		Customer c&#x3D;new Customer();</span><br><span class="line">		&#x2F;&#x2F;创建一个客户</span><br><span class="line">		c.setName(&quot;李四&quot;);</span><br><span class="line">		&#x2F;&#x2F;创建两个订单</span><br><span class="line">		Order o1&#x3D;new Order();</span><br><span class="line">		o1.setAddress(&quot;上海&quot;);</span><br><span class="line">		o1.setPrice(1000d);</span><br><span class="line">		Order o2&#x3D;new Order();</span><br><span class="line">		o2.setAddress(&quot;信阳&quot;);</span><br><span class="line">		o2.setPrice(9999d);</span><br><span class="line">		&#x2F;&#x2F;描述关系订单属于某个客户</span><br><span class="line">		o1.setCustomer(c);</span><br><span class="line">		o2.setCustomer(c);</span><br><span class="line">		&#x2F;&#x2F;客户有多个订单</span><br><span class="line">		c.getOrders().add(o1);</span><br><span class="line">		c.getOrders().add(o2);</span><br><span class="line">		session.save(o1);</span><br><span class="line">		session.save(o2);</span><br><span class="line">		session.save(c);</span><br><span class="line">		&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;级联操作保存一方即可，需在Customer.hbm.xml中添加cascade，保存Order也可</span><br><span class="line">		c.setName(&quot;张三&quot;);</span><br><span class="line">		&#x2F;&#x2F;创建两个订单</span><br><span class="line">		Order o1&#x3D;new Order();</span><br><span class="line">		o1.setAddress(&quot;上海&quot;);</span><br><span class="line">		o1.setPrice(888d);</span><br><span class="line">		Order o2&#x3D;new Order();</span><br><span class="line">		o2.setAddress(&quot;信阳&quot;);</span><br><span class="line">		o2.setPrice(999d);</span><br><span class="line">		&#x2F;&#x2F;客户有多个订单</span><br><span class="line">		c.getOrders().add(o1);</span><br><span class="line">		c.getOrders().add(o2);</span><br><span class="line">		session.save(c);</span><br><span class="line">		&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class="line">		session.getTransaction().commit();</span><br><span class="line">		session.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Customer.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.onetomany;</span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line">public class Customer &#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String name;</span><br><span class="line">	private Set&lt;Order&gt; orders&#x3D;new HashSet&lt;Order&gt;();</span><br><span class="line">	public Integer getId() &#123;</span><br><span class="line">		return id;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setId(Integer id) &#123;</span><br><span class="line">		this.id &#x3D; id;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getName() &#123;</span><br><span class="line">		return name;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setName(String name) &#123;</span><br><span class="line">		this.name &#x3D; name;</span><br><span class="line">	&#125;</span><br><span class="line">	public Set&lt;Order&gt; getOrders() &#123;</span><br><span class="line">		return orders;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setOrders(Set&lt;Order&gt; orders) &#123;</span><br><span class="line">		this.orders &#x3D; orders;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Order.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.onetomany;</span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line">public class Customer &#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String name;</span><br><span class="line">	private Set&lt;Order&gt; orders&#x3D;new HashSet&lt;Order&gt;();</span><br><span class="line">	public Integer getId() &#123;</span><br><span class="line">		return id;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setId(Integer id) &#123;</span><br><span class="line">		this.id &#x3D; id;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getName() &#123;</span><br><span class="line">		return name;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setName(String name) &#123;</span><br><span class="line">		this.name &#x3D; name;</span><br><span class="line">	&#125;</span><br><span class="line">	public Set&lt;Order&gt; getOrders() &#123;</span><br><span class="line">		return orders;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setOrders(Set&lt;Order&gt; orders) &#123;</span><br><span class="line">		this.orders &#x3D; orders;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Customer.hbm.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC </span><br><span class="line">    &quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Mapping DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">    &quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-mapping&gt;</span><br><span class="line">&lt;class name&#x3D;&quot;cn.itcast.onetomany.Customer&quot; table&#x3D;&quot;customer&quot;&gt;</span><br><span class="line">&lt;id name&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot; type&#x3D;&quot;int&quot;&gt;</span><br><span class="line">&lt;generator class&#x3D;&quot;native&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;id&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;name&quot; length&#x3D;&quot;20&quot;&#x2F;&gt;</span><br><span class="line">&lt;set name&#x3D;&quot;orders&quot;&gt;----&gt;&lt;set name&#x3D;&quot;orders&quot; cascade&#x3D;&quot;save-update&quot;&gt;</span><br><span class="line">&lt;key column&#x3D;&quot;A&quot;&#x2F;&gt;</span><br><span class="line">&lt;one-to-many class&#x3D;&quot;cn.itcast.onetomany.Order&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;set&gt;</span><br><span class="line">&lt;&#x2F;class&gt;</span><br><span class="line">&lt;&#x2F;hibernate-mapping&gt;</span><br></pre></td></tr></table></figure>

<p>Order.hbm.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC </span><br><span class="line">    &quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Mapping DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">    &quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-mapping&gt;</span><br><span class="line">&lt;class name&#x3D;&quot;cn.itcast.onetomany.Order&quot; table&#x3D;&quot;orders&quot;&gt;</span><br><span class="line">&lt;id name&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot; type&#x3D;&quot;int&quot;&gt;</span><br><span class="line">&lt;generator class&#x3D;&quot;native&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;id&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;address&quot; length&#x3D;&quot;50&quot;&#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;price&quot;&#x2F;&gt;</span><br><span class="line">&lt;many-to-one name&#x3D;&quot;customer&quot; class&#x3D;&quot;cn.itcast.onetomany.Customer&quot; column&#x3D;&quot;A&quot;&#x2F;&gt;---&gt;添加到此处也可cascade&#x3D;&quot;save-update&quot;</span><br><span class="line">&lt;&#x2F;class&gt;</span><br><span class="line">&lt;&#x2F;hibernate-mapping&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ge650bz0n9j30eq0e9dgf.jpg" alt=""></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ge650dc2h0j307102uq2u.jpg" alt=""></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ge650g3pilj306w03ajrc.jpg" alt=""></p>
<p>ManyToManyTest.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.manytomany;</span><br><span class="line">import org.hibernate.Session;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import cn.itcast.utils.HibernateUtils;</span><br><span class="line">public class ManyToManyTest &#123;</span><br><span class="line">	@Test</span><br><span class="line">	public void test1() &#123;</span><br><span class="line">		Session session &#x3D; HibernateUtils.getSession();</span><br><span class="line">		session.beginTransaction();</span><br><span class="line">		&#x2F;&#x2F; 1.创建两个学生</span><br><span class="line">		Student s1 &#x3D; new Student();</span><br><span class="line">		s1.setSname(&quot;张三&quot;);</span><br><span class="line">		Student s2 &#x3D; new Student();</span><br><span class="line">		s2.setSname(&quot;李四&quot;);</span><br><span class="line">		&#x2F;&#x2F; 2.创建两上科目</span><br><span class="line">		Course c1 &#x3D; new Course();</span><br><span class="line">		c1.setCname(&quot;JAVA&quot;);</span><br><span class="line">		Course c2 &#x3D; new Course();</span><br><span class="line">		c2.setCname(&quot;PHP&quot;);</span><br><span class="line">		&#x2F;&#x2F; 3.建立关联关系</span><br><span class="line">		&#x2F;&#x2F; 学生关联科目</span><br><span class="line">		s1.getCourses().add(c1);</span><br><span class="line">		s2.getCourses().add(c1);</span><br><span class="line">		s1.getCourses().add(c2);</span><br><span class="line">		s2.getCourses().add(c2);</span><br><span class="line">		&#x2F;&#x2F; 科目关联学生</span><br><span class="line">		c1.getStudents().add(s1);</span><br><span class="line">		c2.getStudents().add(s1);</span><br><span class="line">		c1.getStudents().add(s2);</span><br><span class="line">		c2.getStudents().add(s2);</span><br><span class="line">		&#x2F;&#x2F; 4.存储</span><br><span class="line">		session.save(c1);</span><br><span class="line">		session.save(c2);</span><br><span class="line">		session.save(s1);</span><br><span class="line">		session.save(s2);</span><br><span class="line">		&#x2F;&#x2F;仅仅存一方，会出现持久化对象关联瞬时对象</span><br><span class="line">		&#x2F;&#x2F; 提交事务，关闭session</span><br><span class="line">		session.getTransaction().commit();</span><br><span class="line">		session.close();</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F; 多对多级联保存：学生级联课程，需要在学生Student.hbm.xml添加级联保存</span><br><span class="line">	@Test</span><br><span class="line">	public void test2() &#123;</span><br><span class="line">		Session session &#x3D; HibernateUtils.getSession();</span><br><span class="line">		session.beginTransaction();</span><br><span class="line">		&#x2F;&#x2F; 1.创建课程</span><br><span class="line">		Course course &#x3D; new Course();</span><br><span class="line">		course.setCname(&quot;PHP&quot;);</span><br><span class="line">		&#x2F;&#x2F; 2.创建学生</span><br><span class="line">		Student student &#x3D; new Student();</span><br><span class="line">		student.setSname(&quot;王五&quot;);</span><br><span class="line">		&#x2F;&#x2F; 3.关联-- 学生关联课程</span><br><span class="line">		student.getCourses().add(course);</span><br><span class="line">		&#x2F;&#x2F; 4.保存</span><br><span class="line">		session.save(student);</span><br><span class="line">		session.getTransaction().commit();</span><br><span class="line">		session.close();</span><br><span class="line">	&#125;</span><br><span class="line">	   &#x2F;&#x2F;级联删除</span><br><span class="line">	@Test</span><br><span class="line">	public void test3() &#123;</span><br><span class="line">		Session session &#x3D; HibernateUtils.getSession();</span><br><span class="line">		session.beginTransaction();</span><br><span class="line">		Student student &#x3D; (Student) session.get(Student.class, 1);</span><br><span class="line">		session.delete(student);</span><br><span class="line">		session.getTransaction().commit();</span><br><span class="line">		session.close();</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F;改变学生选课关系,A</span><br><span class="line">	@Test</span><br><span class="line">	public void test4() &#123;</span><br><span class="line">		Session session &#x3D; HibernateUtils.getSession();</span><br><span class="line">		session.beginTransaction();</span><br><span class="line">		&#x2F;&#x2F;得到学生</span><br><span class="line">		Student s &#x3D; (Student) session.get(Student.class, 7);</span><br><span class="line">		Course c1 &#x3D; (Course) session.get(Course.class, 7);</span><br><span class="line">		Course c2 &#x3D; (Course) session.get(Course.class, 8);</span><br><span class="line">		s.getCourses().remove(c2);</span><br><span class="line">		s.getCourses().add(c1);</span><br><span class="line">		session.getTransaction().commit();</span><br><span class="line">		session.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Course.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.manytomany;</span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line">public class Course &#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String cname;</span><br><span class="line">	private Set&lt;Student&gt; students&#x3D;new HashSet&lt;Student&gt;();</span><br><span class="line">	public Integer getId() &#123;</span><br><span class="line">		return id;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setId(Integer id) &#123;</span><br><span class="line">		this.id &#x3D; id;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getCname() &#123;</span><br><span class="line">		return cname;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setCname(String cname) &#123;</span><br><span class="line">		this.cname &#x3D; cname;</span><br><span class="line">	&#125;</span><br><span class="line">	public Set&lt;Student&gt; getStudents() &#123;</span><br><span class="line">		return students;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setStudents(Set&lt;Student&gt; students) &#123;</span><br><span class="line">		this.students &#x3D; students;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Student.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.manytomany;</span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line">public class Student &#123;</span><br><span class="line">	private Integer id;</span><br><span class="line">	private String sname;</span><br><span class="line">	private Set&lt;Course&gt; courses&#x3D;new HashSet&lt;Course&gt;();</span><br><span class="line">	public Integer getId() &#123;</span><br><span class="line">		return id;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setId(Integer id) &#123;</span><br><span class="line">		this.id &#x3D; id;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getSname() &#123;</span><br><span class="line">		return sname;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setSname(String sname) &#123;</span><br><span class="line">		this.sname &#x3D; sname;</span><br><span class="line">	&#125;</span><br><span class="line">	public Set&lt;Course&gt; getCourses() &#123;</span><br><span class="line">		return courses;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setCourses(Set&lt;Course&gt; courses) &#123;</span><br><span class="line">		this.courses &#x3D; courses;</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Course.hbm.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC </span><br><span class="line">	    &quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Mapping DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">        &quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-mapping&gt;</span><br><span class="line">	&lt;class name&#x3D;&quot;cn.itcast.manytomany.Course&quot; table&#x3D;&quot;course&quot;&gt;</span><br><span class="line">		&lt;id name&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot;&gt;</span><br><span class="line">			&lt;generator class&#x3D;&quot;native&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;id&gt;</span><br><span class="line">		&lt;property name&#x3D;&quot;cname&quot; length&#x3D;&quot;30&quot; &#x2F;&gt;</span><br><span class="line">		&lt;set name&#x3D;&quot;students&quot; table&#x3D;&quot;sc&quot; inverse&#x3D;&quot;true&quot;&gt;</span><br><span class="line">			&lt;key column&#x3D;&quot;cid&quot; &#x2F;&gt;</span><br><span class="line">			&lt;many-to-many class&#x3D;&quot;cn.itcast.manytomany.Student&quot; column&#x3D;&quot;sid&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;set&gt;</span><br><span class="line">        &lt;!-- 级联删除 --&gt;</span><br><span class="line">&lt;!-- 		&lt;set name&#x3D;&quot;students&quot; table&#x3D;&quot;sc&quot; cascade&#x3D;&quot;delete&quot; inverse&#x3D;&quot;true&quot;&gt; --&gt;</span><br><span class="line">&lt;!-- 			&lt;key column&#x3D;&quot;cid&quot; &#x2F;&gt; --&gt;</span><br><span class="line">&lt;!-- 			&lt;many-to-many class&#x3D;&quot;cn.itcast.manytomany.Student&quot; --&gt;</span><br><span class="line">&lt;!-- 				column&#x3D;&quot;sid&quot; &#x2F;&gt; --&gt;</span><br><span class="line">&lt;!-- 		&lt;&#x2F;set&gt; --&gt;</span><br><span class="line"></span><br><span class="line">	&lt;&#x2F;class&gt;</span><br><span class="line">&lt;&#x2F;hibernate-mapping&gt;</span><br></pre></td></tr></table></figure>

<p>Student.hbm.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC </span><br><span class="line">    &quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Mapping DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">    &quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-mapping&gt;</span><br><span class="line">	&lt;class name&#x3D;&quot;cn.itcast.manytomany.Student&quot; table&#x3D;&quot;student&quot;&gt;</span><br><span class="line">		&lt;id name&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot;&gt;</span><br><span class="line">			&lt;generator class&#x3D;&quot;native&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;id&gt;</span><br><span class="line">		&lt;property name&#x3D;&quot;sname&quot; length&#x3D;&quot;30&quot; &#x2F;&gt;</span><br><span class="line">		&lt;set name&#x3D;&quot;courses&quot; table&#x3D;&quot;sc&quot;&gt;</span><br><span class="line">			&lt;key column&#x3D;&quot;sid&quot; &#x2F;&gt;</span><br><span class="line">			&lt;many-to-many class&#x3D;&quot;cn.itcast.manytomany.Course&quot; column&#x3D;&quot;cid&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;set&gt;</span><br><span class="line">			&lt;!-- 设置级联保存 --&gt;</span><br><span class="line">&lt;!-- 		&lt;set name&#x3D;&quot;courses&quot; table&#x3D;&quot;sc&quot; cascade&#x3D;&quot;save-update&quot;&gt; --&gt;</span><br><span class="line">&lt;!-- 			&lt;key column&#x3D;&quot;sid&quot; &#x2F;&gt; --&gt;</span><br><span class="line">&lt;!-- 			&lt;many-to-many class&#x3D;&quot;cn.itcast.manytomany.Course&quot; column&#x3D;&quot;cid&quot; &#x2F;&gt; --&gt;</span><br><span class="line">&lt;!-- 		&lt;&#x2F;set&gt; --&gt;</span><br><span class="line">			&lt;!-- 设置级联删除 --&gt;</span><br><span class="line">&lt;!-- 			&lt;set name&#x3D;&quot;courses&quot; table&#x3D;&quot;sc&quot; cascade&#x3D;&quot;delete&quot; &gt; --&gt;</span><br><span class="line">&lt;!-- 				&lt;key column&#x3D;&quot;sid&quot;&#x2F;&gt; --&gt;</span><br><span class="line">&lt;!-- 					&lt;many-to-many class&#x3D;&quot;cn.itcast.manytomany.Course&quot; column&#x3D;&quot;cid&quot;&#x2F;&gt; --&gt;</span><br><span class="line">&lt;!-- 			&lt;&#x2F;set&gt; --&gt;</span><br><span class="line">	&lt;&#x2F;class&gt;</span><br><span class="line">&lt;&#x2F;hibernate-mapping&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>1129 Recommendation System</title>
    <url>/2020/04/19/1129-Recommendation-System/</url>
    <content><![CDATA[<p>Recommendation system predicts the preference that a user would give to an item. Now you are asked to program a very simple recommendation system that rates the user’s preference by the number of times that an item has been accessed by this user.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each test case, the first line contains two positive integers: N (≤ 50,000), the total number of queries, and K (≤ 10), the maximum number of recommendations the system must show to the user. Then given in the second line are the indices of items that the user is accessing – for the sake of simplicity, all the items are indexed from 1 to N. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each case, process the queries one by one. Output the recommendations for each query in a line in the format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">query: rec[1] rec[2] ... rec[K]</span><br></pre></td></tr></table></figure>

<p>where <code>query</code> is the item that the user is accessing, and <code>rec[i]</code> (<code>i</code>=1, … K) is the <code>i</code>-th item that the system recommends to the user. The first K items that have been accessed most frequently are supposed to be recommended in non-increasing order of their frequencies. If there is a tie, the items will be ordered by their indices in increasing order.</p>
<p>Note: there is no output for the first item since it is impossible to give any recommendation at the time. It is guaranteed to have the output for at least one query.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12 3</span><br><span class="line">3 5 7 5 5 3 2 1 8 3 8 12</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5: 3</span><br><span class="line">7: 3 5</span><br><span class="line">5: 3 5 7</span><br><span class="line">5: 5 3 7</span><br><span class="line">3: 5 3 7</span><br><span class="line">2: 5 3 7</span><br><span class="line">1: 5 3 2</span><br><span class="line">8: 5 3 1</span><br><span class="line">3: 5 3 1</span><br><span class="line">8: 3 5 1</span><br><span class="line">12: 3 5 8</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int sum[50000];</span><br><span class="line">struct node&#123;</span><br><span class="line">	int value,cnt;</span><br><span class="line">	bool operator&lt;(const node &amp;a)const&#123;</span><br><span class="line">		return (cnt!&#x3D;a.cnt)?cnt&gt;a.cnt:value&lt;a.value;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main( )&#123;</span><br><span class="line">	int n,k,num;</span><br><span class="line">	scanf(&quot;%d%d&quot;,&amp;n,&amp;k);</span><br><span class="line">	set&lt;node&gt;s;</span><br><span class="line">	for (int i&#x3D;0;i&lt;n;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;num);</span><br><span class="line">		if (i!&#x3D;0) &#123;</span><br><span class="line">			printf(&quot;%d:&quot;,num);</span><br><span class="line">			int tempcnt&#x3D;0;</span><br><span class="line">			for (auto it&#x3D;s.begin();tempcnt&lt;k&amp;&amp;it!&#x3D;s.end();it++) &#123;</span><br><span class="line">				printf(&quot; %d&quot;,it-&gt;value);</span><br><span class="line">				tempcnt++;</span><br><span class="line">			&#125;</span><br><span class="line">			printf(&quot;\n&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">		auto it&#x3D;s.find(node&#123;num,sum[num]&#125;);</span><br><span class="line">		if (it!&#x3D;s.end()) &#123;</span><br><span class="line">			s.erase(it);</span><br><span class="line">		&#125;</span><br><span class="line">		sum[num]++;</span><br><span class="line">		s.insert(node&#123;num,sum[num]&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一开始以为使用vector然后写一个compare来排序，然后看大神直接在结构体重载运算符，并使用set直接排序，先来将第一个数略过，将输出放在前面，插入放在后面最后注意要记得把已经存在在set中数据更新删除。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>持久化对象与一级缓存</title>
    <url>/2020/04/17/%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1%E4%B8%8E%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<p>持久化对象的三种状态<br>1、瞬时态（transient）:此对象是由new命令创建、开辟内存空间的对象，不存在持久化标识OID，尚未与Hibernate Session关联，在数据库中也没有记录，失去引用后将被JVM回收。<br>2、持久态（persistent）:此对象存在持久化标识OID ，在Session缓存中，并且相关联的Session没有关闭，在数据库中有唯一对应的记录，注意：持久态对象是在事务还未提交前变成持久态的。<br>3、脱管态（detached）:此对象存在持久化标识OID，并且仍然与数据库中的数据存在关联，只是失去了与当前Session的关联，脱管状态对象发生改变时Hibernate不能检测到。<br>持久化对象三种状态切换<br>瞬时（无OID，不在管理）与持久化状态区别在于是否纳入session管理，是否有OID；<br>持久化与托管（有OID，不在管理）状态区别在于是否纳入session管理<br>瞬时与托管是否有OID<br>持久态-&gt;瞬时态  执行Session的delete()方法<br>持久态-&gt;托管态  执行Session的evict()，清楚一级缓存中某一对象、close()关闭session，，清除一级缓存、clear()方法，清除一级缓存所有对象<br>托管态-&gt;瞬时态  将托管对象持久化标识OID设置为null ,book.setId(null)<br>托管态-&gt;持久态  执行Session的Update()、saveOrUpdate()或Lock()方法<br>瞬时态-&gt;持久态  执行Session的save()或者saveOrUpdate()方法<br>瞬时态-&gt;托管态  为瞬时态对象设置持久化标识OID book.setId(1)<br>一级缓存<br>Hibernate的一级缓存就是指Session缓存，Session缓存就是一块内存空间，用来存放和管理Java对象。二级缓存指SessionFactory缓存<br>Session接口实现类SessionTmp1<br>持久化对象保存在Session一级缓存（引用持久化对象地址）中，只要Session不关闭，一级缓存存在，缓存中对象不会被回收<br>1、证明一级缓存存在<br>Book b1=(Book)session.get(Book.class, 1);第一次存在SQL语句<br>System.out.println(b1);<br>Book b2=(Book)session.get(Book.class, 1);第二次查询的OID一致，不需要从数据库获取<br>System.out.println(b2);<br>2、hibernate快照<br>hibernate向一级缓存中存数据时，同时保存快照数据，当修改一级缓存数据时，在flush操作时，对比缓存和快照，如果不一致，自动更新<br>快照区使用，在session保存一份与数据库相同的数据，在session的flush时，通过对比快照去数据得知是否应该执行update操作<br>3、一级缓存常见操作<br>Book book=(Book)session.get(Book.class, 2);<br>book.setName(“hell eclipse”);<br>session.flush();执行update<br>session.clear();不执行<br>session.evict(book);不执行<br>session.refresh(book);将快照信息统一成数据库中数据一致<br>flush：修改一级缓存数据针对内存操作，需要在session执行flush操作时，将缓存变化同步到数据库。<br>Clear：清楚所有对象一级缓存<br>Evict：清楚一级缓存指定对象<br>Refresh：重新查询数据库，更新快照和一级缓存</p>
<p>hibernate.cfg.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!-- 配制文件的dtd信息 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE hibernate-configuration PUBLIC</span><br><span class="line">&quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Configuration DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">&quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-configuration-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-configuration&gt;</span><br><span class="line"> &lt;session-factory&gt;</span><br><span class="line">&lt;!-- 指定方言 --&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.dialect&quot;&gt;</span><br><span class="line">    org.hibernate.dialect.SQLServerDialect</span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;!--数据库驱动 --&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.driver_class&quot;&gt;</span><br><span class="line">    com.microsoft.sqlserver.jdbc.SQLServerDriver</span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;!--连接数据库的url --&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.url&quot;&gt;</span><br><span class="line">    jdbc:sqlserver:&#x2F;&#x2F;localhost:1433;DatabaseName&#x3D;h2</span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line">&lt;!--数据库的用户名 --&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.username&quot;&gt;</span><br><span class="line">student</span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line">&lt;!--数据库的密码 --&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.password&quot;&gt;</span><br><span class="line">    student</span><br><span class="line">&lt;&#x2F;property&gt; </span><br><span class="line">     &lt;!--其它配置 --&gt;</span><br><span class="line">    &lt;!--输出运行时生成的SQL语句--&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;hibernate.show_sql&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;format_sql&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;hibernate.hbm2ddl.auto&quot;&gt;update&lt;&#x2F;property&gt;</span><br><span class="line">&lt;!-- 用来关联hbm配置文件 --&gt;</span><br><span class="line">&lt;mapping resource&#x3D;&quot;cn&#x2F;itcast&#x2F;firstcache&#x2F;Book.hbm.xml&quot;&#x2F;&gt;</span><br><span class="line"> &lt;&#x2F;session-factory&gt;</span><br><span class="line">&lt;&#x2F;hibernate-configuration&gt; </span><br><span class="line"></span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 配制文件的dtd信息 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE hibernate-configuration PUBLIC</span><br><span class="line"></span><br><span class="line">&quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Configuration DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line"></span><br><span class="line">&quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-configuration-3.0.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;hibernate-configuration&gt;</span><br><span class="line"></span><br><span class="line"> &lt;session-factory&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 指定方言 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.dialect&quot;&gt;</span><br><span class="line"></span><br><span class="line">  org.hibernate.dialect.SQLServerDialect</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--数据库驱动 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.driver_class&quot;&gt;</span><br><span class="line"></span><br><span class="line">  com.microsoft.sqlserver.jdbc.SQLServerDriver</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--连接数据库的url --&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.url&quot;&gt;</span><br><span class="line"></span><br><span class="line">  jdbc:sqlserver:&#x2F;&#x2F;localhost:1433;DatabaseName&#x3D;h2</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--数据库的用户名 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.username&quot;&gt;</span><br><span class="line"></span><br><span class="line">student</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--数据库的密码 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.password&quot;&gt;</span><br><span class="line"></span><br><span class="line">  student</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;property&gt; </span><br><span class="line"></span><br><span class="line">   &lt;!--其它配置 --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--输出运行时生成的SQL语句--&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property name&#x3D;&quot;hibernate.show_sql&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property name&#x3D;&quot;format_sql&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property name&#x3D;&quot;hibernate.hbm2ddl.auto&quot;&gt;update&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 用来关联hbm配置文件 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;mapping resource&#x3D;&quot;cn&#x2F;itcast&#x2F;firstcache&#x2F;Book.hbm.xml&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;&#x2F;session-factory&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;hibernate-configuration&gt;</span><br></pre></td></tr></table></figure>

<p>Book.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.firstcache;</span><br><span class="line">public class Book &#123;</span><br><span class="line">private Integer id;</span><br><span class="line">private String name;</span><br><span class="line">private Double price;</span><br><span class="line">public Integer getId() &#123;</span><br><span class="line">return id;</span><br><span class="line">&#125;</span><br><span class="line">public void setId(Integer id) &#123;</span><br><span class="line">this.id &#x3D; id;</span><br><span class="line">&#125;</span><br><span class="line">public String getName() &#123;</span><br><span class="line">return name;</span><br><span class="line">&#125;</span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name &#x3D; name;</span><br><span class="line">&#125;</span><br><span class="line">public Double getPrice() &#123;</span><br><span class="line">return price;</span><br><span class="line">&#125;</span><br><span class="line">public void setPrice(Double price) &#123;</span><br><span class="line">this.price &#x3D; price;</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public String toString() &#123;</span><br><span class="line">return &quot;Book [id&#x3D;&quot; + id + &quot;, name&#x3D;&quot; + name + &quot;, price&#x3D;&quot; + price + &quot;]&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Book.hbm.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC </span><br><span class="line">    &quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Mapping DTD 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">    &quot;http:&#x2F;&#x2F;www.hibernate.org&#x2F;dtd&#x2F;hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-mapping&gt;</span><br><span class="line">&lt;class name&#x3D;&quot;cn.itcast.firstcache.Book&quot; table&#x3D;&quot;book&quot;&gt;</span><br><span class="line">&lt;id name&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot; type&#x3D;&quot;int&quot;&gt;</span><br><span class="line">&lt;generator class&#x3D;&quot;native&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;id&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;name&quot; length&#x3D;&quot;50&quot;&#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;price&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;class&gt;</span><br><span class="line">&lt;&#x2F;hibernate-mapping&gt;</span><br></pre></td></tr></table></figure>

<p>  BookTest.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.firstcache;</span><br><span class="line">import org.hibernate.classic.Session;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import cn.itcast.utils.HibernateUtils;</span><br><span class="line">public class BookTest &#123;</span><br><span class="line">@Test</span><br><span class="line">public void test1() &#123;</span><br><span class="line">Session session&#x3D;(Session) HibernateUtils.getSession();</span><br><span class="line">session.beginTransaction();</span><br><span class="line">Book b1&#x3D;(Book)session.get(Book.class, 1);</span><br><span class="line">System.out.println(b1);</span><br><span class="line">Book b2&#x3D;(Book)session.get(Book.class, 1);</span><br><span class="line">System.out.println(b2);</span><br><span class="line">session.getTransaction().commit();</span><br><span class="line">session.close();</span><br><span class="line">&#125;</span><br><span class="line">@Test</span><br><span class="line">public void test2() &#123;</span><br><span class="line">Session session&#x3D;(Session) HibernateUtils.getSession();</span><br><span class="line">session.beginTransaction();</span><br><span class="line">Book book&#x3D;new Book();</span><br><span class="line">book.setName(&quot;java&quot;);</span><br><span class="line">book.setPrice(10.9);</span><br><span class="line">session.save(book);</span><br><span class="line">session.getTransaction().commit();</span><br><span class="line">session.close();</span><br><span class="line">System.out.println(book);</span><br><span class="line">&#125;</span><br><span class="line">@Test</span><br><span class="line">public void test3() &#123;</span><br><span class="line">Session session&#x3D;(Session) HibernateUtils.getSession();</span><br><span class="line">session.beginTransaction();</span><br><span class="line">Book book&#x3D;new Book();</span><br><span class="line">book.setName(&quot;eclipse&quot;);</span><br><span class="line">book.setPrice(75d);</span><br><span class="line">session.save(book);</span><br><span class="line">&#x2F;&#x2F;Book book1&#x3D;(Book)session.get(Book.class, 2);</span><br><span class="line">&#x2F;&#x2F;System.out.println(book1);</span><br><span class="line">book.setName(&quot;good eclipse&quot;);</span><br><span class="line">session.getTransaction().commit();</span><br><span class="line">session.close();</span><br><span class="line">&#125;</span><br><span class="line">@Test</span><br><span class="line">public void test4() &#123;</span><br><span class="line">Session session&#x3D;(Session) HibernateUtils.getSession();</span><br><span class="line">session.beginTransaction();</span><br><span class="line">Book book&#x3D;(Book)session.get(Book.class, 2);</span><br><span class="line">book.setName(&quot;hell eclipse&quot;);</span><br><span class="line">&#x2F;&#x2F;session.flush();</span><br><span class="line">&#x2F;&#x2F;session.clear();</span><br><span class="line">session.evict(book);</span><br><span class="line">&#x2F;&#x2F;session.refresh(book);</span><br><span class="line">session.getTransaction().commit();</span><br><span class="line">session.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>HibernateUtils.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.utils;</span><br><span class="line"></span><br><span class="line">import org.hibernate.Session;</span><br><span class="line">import org.hibernate.SessionFactory;</span><br><span class="line">import org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line">public class HibernateUtils &#123;</span><br><span class="line">	private static final Configuration config;</span><br><span class="line">	private static final SessionFactory factory;</span><br><span class="line">	static &#123;</span><br><span class="line">		config&#x3D;new Configuration().configure();</span><br><span class="line">		factory&#x3D;config.buildSessionFactory();</span><br><span class="line">	&#125;</span><br><span class="line">	public static Session getSession() &#123;</span><br><span class="line">		return factory.openSession();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>Hibernate入门</title>
    <url>/2020/04/17/Hibernate%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>hibernate介绍<br>开源框架、对JDBC封装、直接操作java对象就可以操作数据库对象中的表、ORM（对象关系映射）映射框架<br>类似hibernate这样jdbc封装框架：mybatis开发中持久化层框架中主流<br>导入jar包<br>hibernate核心jar包  hibernate3.jar<br>hibernate必须jar包  hibernate/lib/required目录下<br>hibernate的jpa实现  hibernate/lib/jpa目录<br>日志 log4j<br>log4j使用<br>手动<br>配置<br>在程序中使用log4j记录日志<br>步骤一：定义记录器<br>private static final Logger log=Logger.getLogger(Log4jtest.class);<br>步骤二：使用log4j提供每个级别方法，记录日志<br>log.fatal(“致命错误”);<br>log.error(“普通错误”);<br>log.warn(“警告信息”);<br>log.info(“普通信息”);<br>log.debug(“调式信息”);<br>log.trace(“堆栈信息”);<br>常用：error、warn、info、debug<br>1）创建一个类与表的映射文件<br>1、名称<br>类名.hbm.xml——–customer.bhm.xml<br>2、位置<br>与实体在同一个包下<br>3、约束<br>Hibernate3.jar org/hibernate/hibernate-mapping-3.0.dtd文件中定义<br><!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"><br>4、元素</p>
<!-- name代表实体类名，table代表表名 -->
<pre><code>&lt;hibernate-mapping&gt;
&lt;!-- 主键生成策略--&gt;
&lt;class name=&quot;cn.itcast.domain.Customer&quot; table=&quot;customer&quot;&gt;
&lt;!-- name=id代表customer类中属性 column=id代表的是table表中的字段 --&gt;
&lt;id name=&quot;id&quot; column=&quot;id&quot;&gt;
   &lt;generator class=&quot;native&quot;/&gt;
&lt;/id&gt;
 &lt;!-- 其他属性使用properties标签映射--&gt;
 &lt;!--基于java写法--&gt;
&lt;property name=&quot;age&quot; column=&quot;age&quot; type=&quot;int&quot;/&gt;
&lt;!-- 基于hibernate写法--&gt;
&lt;property name=&quot;name&quot; column=&quot;name&quot; type=&quot;string&quot;/&gt;
&lt;!-- 基于sql写法--&gt;
&lt;property name=&quot;city&quot;&gt;
&lt;column name=&quot;city&quot; sql-type=&quot;varchar(20)&quot;&gt;&lt;/column&gt;
&lt;/property&gt;
&lt;/class&gt;
&lt;/hibernate-mapping&gt;</code></pre><p>2）创建一个hibernate配置文件<br>hibernate.cfg.xml放置在src下<br>位置：src下<br>名称：hibernate.cfg.xml<br>约束：<br><!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd"><br>元素：<br>关于元素配置时<property name=””>name值可以参考hbernate/project/etc/hibernate.properties文件中配置<br>3）编写代码，执行crud代码,hibernate框架<br>得到配置对象<br>Configuration config=new Configuration();<br>得到一个SessionFactory<br>SessionFactory factory=config.buildSessionFactory();<br>得到一个Session<br>Session session=factory.openSession();<br>开启事务<br>Transaction t=session.beginTransaction();<br>执行操作，具体的crud操作<br>提交事务<br>t.commit();<br>释放资源<br>session.close();<br>factory.close();<br>操作1：添加<br>//5.1 创建一个对象<br>        Customer c=new  Customer();<br>        c.setName(“李华”);<br>        c.setAge(20);<br>        c.setCity(“北京”);（修改加上c.setId(“1”);）<br>        //5.2数据存储到表中<br>        session.save(c);(save-&gt;update)<br>操作2：查找<br>封装类中添加相应函数<br>//Customer c=(Customer) session.get(Customer.class,1);<br>Customer c=(Customer) session.load(Customer.class,1);<br>操作3：删除<br>先查询然后将session.save(c)-&gt;delete(c);<br>操作4：查询所有信息<br>1、HQL<br>Query query=session.createQuery(“from Customer”);Customer类名<br>query.list();<br>2、Sql<br>SQLQuery query=session.createSqlQuery(“select id,name,age,city”);sql语句<br>query.list();<br>3、面向对象 QBC<br>Criteria cc=session.createCriteria(Customer.class);<br>List list=cc.list();</p>
<p>hibernate的核心配置hibernate.hbm.xml文件<br>1、对于hibernate的核心配置文件存在以下两种：<br>1）hibernate.cfg.xml<br>2）hibernate.properties不能配置<mapping>映射，编码实现：<br>Configuration cfg=new Configuration( ).addResource(XXX.hbm.xml )<br>2、hibernate.cfg.xml常用属性<br> <!--输出运行时生成的SQL语句--><br>    <property name="hibernate.show_sql">true</property>显示sql语句<br><property name="format_sql">true</property>格式化sql语句<br><property name=”hibernate.hbm2ddl.auto”>create</property><br>create:启动前先drop再create、create-drop关闭系统前执行drop、update更新表结构、validate验证现有表与配置的hibernate是否一致抛出异常<br><property name=”hibernate.connection.autocommit”>true</property>设置事务自动提交，存在问题使用seesion.flush()即可</p>
<p>关于hibernate核心API<br>1、Configuration<br>用于加载hibernate配置<br>1）自动加载Configuration config=new Configuration().config();读取hibernate.cfg.xml文件<br>2）手动加载<br>Configuration config=new Configuration().config(File file);加载指定文件<br>Configuration config=new Configuration().config(String path);<br>Configuration config=new Configuration().config(Document xml);<br>也可以<br>Configuration config=new Configuration()；<br>config.addResource(“cn/itcast/domain/Customer.hbm.xml”)加载配置文件<br>config.addClass(Customer.class);默认查找customer.hbm.xml文件<br>config.setProperty(String name,String value)加载配置项<br>2、SessionFactory<br>获取session对象，SessionFactory是一个重量级组件（内存占据大）<br>可以针对获取session操作，进行抽取工具 。<br>private static final Configuration config;<br>    private static final SessionFactory factory;<br>    static {<br>        config=new Configuration().configure();<br>        factory=config.buildSessionFactory();<br>    }<br>    public static Session getSession() {<br>        return factory.openSession();<br>    }<br>SessionFactory维护hibernate中的二级缓存线程安全<br>hibernate内部维护了一个连接池，从内部的连接池中获取connection对象<br>通过SessionFactory可以获取session对象：1）openSession()随机获取2）getCurrentSession()<br>在hibernate中使用c3p0连接池<br>1）在hibernate.cfg.xml文件中配置<br>hibernate.connection.provider_class org.hibernate.connection.C3P0ConnectionProvider<br>代表当前要使用的连接池是c3p0连接池<br>2）配置c3p0连接池属性</p>
<!--在连接池中可用的数据库连接的最少数目-->
<p><property name="c3p0.min_size">5</property></p>
<!--在连接池中可用的数据库连接的最大数目-->
<p><property name="c3p0.max_size">20</property></p>
<!--连接池中数据库处于空闲时间超过timeout时间/秒，会从连接池清除-->
<p><property name="c3p0.timeout">120</property></p>
<!--每3000秒检查所有连接池中空闲连接-->
<p><property name="c3p0.idle_test_period">3000</property><br>需要导入c3p0的jar包 hibernate/lib\optional\c3p0<br>3、Session<br>代表hibernate操作回话对象，相当于connection，单线程对象，线程不安全<br>Session session=sessionFactory.openSession();<br>常用API<br>save 完成插入<br>update 完成修改<br>delete 完成删除<br>get/load根据主键字段查询 get直接获取对象、load延迟加载<br>createQuery\createSQLQuery创建查询对象Query接受HQL、SQL<br>createCriteria()面向对象条件查询<br>4、Transaction<br>Transaction接口主要用于管理事务，它是Hibernate的数据库事务接口，且对底层的事务接口进行了封装。<br>Transaction t=sessopn.beginTrasaction();<br>rollback()事务回滚<br>commit()事务提交<br>wasCommitted()返回boolean,判断事务是否提交<br>wasRollback() 返回boolean判断事务是否回滚<br>5、Query<br>1）session.createQuery(String hql);<br>①list()返回List<Object>,代表查询出的所有信息<br>②uniqueResult();返回一个Object，查询结果只返回一个值时，可以使用<br>③分页查询<br>setFirstResult(int firstresult);，设置返回结果从第几条开始<br>setMaxResults(int maxresults);，设置本次返回结果记录条数<br>④查询某一部分属性信息<br>例如：得到customer类的id与name属性<br>在Customer类中添加构造方法，构造方法参数id,name<br>HQL语句 select new Customer(id,name) from Customer<br>⑤条件查询<br>1、可以使用占位符”?”<br>from Customer where name=?;<br>通过query.setParameter(0,值);从0开始记位进行赋值<br>2、可以直接给要赋值字段起名字<br>from Customer where name=:a;<br>query.setParameter(“a”,值);<br>2）session.createSQLQuery(String sql);<br>3）session.createCriteria(Object);<br>Criteria criteria=session.createCriteria(Customer.class);<br>①查询全部<br>List<Customer> cs=criteria.list();<br>for(Customer c:cs) {<br>System.out.println(c);<br>}<br>②只返回一个<br>Customer cs=(Customer)criteria.uniqueResult();<br>③条件查询<br>AND:criteria.add(Restrictions.eq(“id”, 50)).add(Restrictions.eq(“name”,”name2”));<br>OR:criteria.add(Restrictions.or(Restrictions.eq(“id”, 50),Restrictions.eq(“name”,”name3”)));<br>④分页<br>setFirstResult();<br>setMaxResults;同Query</p>
<p>hbm映射文件配置<br>1、持久化对象presisdent object(PO)<br>PO=POJO（简单的javabean）+hbm映射配置<br>编写规则：<br>1）必须提供无参数public构造器<br>2）所有private，提供public的getter和setter方法<br>3）必须提供标识属性与数据表中主键对应，例如customer；类id属性<br>4）PO类属性尽量使用基本数据类型包装，例int -&gt;Integer<br>5）不要用final修饰<br>关于get和load的区别<br>session.get方法，查询立即执行，返回customer类对象<br>session.load方法，默认采用延迟加载数据方法，不会立即查询，返回Customer类子类对象（动态申城代理对象）如果PO类使用final修饰，load无法创建代理对象，返回目标对象本身。<br>都是根据id查找：<br>1、如果查询id不存在<br>get方法返回的时null、load方法抛出异常ObjectNotFoundException<br>2、如果查询是，id存在<br>get方法返回的就是PO对象<br>load方法返回的是一个代理对象，如果这时没有使用它，没有向DB发送sql语句</p>
<p>OID<br>OID指与数据表中主键对应PO类中属性，例如customer类id属性<br>hibernate框架使用OID区分不同PO对象<br>例如：内存中两个PO对象，只要具有相同OID，hibernate认为是统一个对象<br>hibernate不允许缓存同样OID的两个不同对象<br>持久化对象的状态是通过OID来区分的。</p>
<p>主键生成策略：<br>1、主键分类：<br>自然主键：具备实际意义<br>代理主键：不具备意义，知识用来标识当前记录（主要使用）<br>省略catalog，表创建到jdbcurl指定的数据库中<br>2、主键生成策略分类<br><generator class="increment"/>生成策略<br>Increment：select max(id) 、insert max(id)+1、主键冲突问题不依赖数据库<br>Identity：自动增长的字段类型。auto_increment、五线程问题、oracle不使用依赖数据库<br>Sequence：生成标识符、依赖数据库<br>Native（使用）：主键交给数据库操作，根据数据库特点自动选择<br>Uuid：前五种都是代理主键<br>Assigned：自然主键（必须在程序中指定，无法自动生成）<br>复合主键：一个表中多个属性共同作为主键<br><composite-id><br><key-property name=""></key-property><br><key-property name=""></key-property><br></composite-id><br>Hibernate是持久层的ORM映射框架，专注于数据的持久化工作。所谓的持久化，就是将内存中的数据永久存储到关系型数据库中</p>
]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>python爬虫初试</title>
    <url>/2020/04/15/python%E7%88%AC%E8%99%AB%E5%88%9D%E8%AF%95/</url>
    <content><![CDATA[<p>通过学习章鱼互联网学院的一个爬虫实战应用的一个例子，来对近期冠状肺炎全国变化趋势进行进行数据获取、可视化操作.</p>
<p>使用</p>
<p>test0</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> font_manager</span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment">#抓取json数据</span></span><br><span class="line">url=<span class="string">'https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=&amp;_=%d'</span>%int(time.time()*<span class="number">1000</span>)</span><br><span class="line">data=json.loads(requests.get(url=url).json()[<span class="string">'data'</span>])</span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>]</span><br><span class="line">print(data)</span><br><span class="line">num=data[<span class="string">'areaTree'</span>][<span class="number">0</span>][<span class="string">'children'</span>]</span><br><span class="line">print(num)</span><br><span class="line">print(len(num))</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> num:</span><br><span class="line">    print(item[<span class="string">'name'</span>],end=<span class="string">" "</span>)<span class="comment">#不换行</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"\n"</span>)<span class="comment">#换行</span></span><br><span class="line">print(data[<span class="string">'areaTree'</span>][<span class="number">0</span>][<span class="string">'name'</span>])<span class="comment">#国家名称</span></span><br><span class="line"><span class="comment">#显示指定children数据</span></span><br><span class="line">HangKong=num[<span class="number">3</span>][<span class="string">'children'</span>]</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> HangKong:</span><br><span class="line">    print(data)</span><br><span class="line"><span class="comment">#解析数据（确诊、疑似、死亡、治愈）</span></span><br><span class="line">total_data=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> num:</span><br><span class="line">    <span class="keyword">if</span> item[<span class="string">'name'</span>] <span class="keyword">not</span> <span class="keyword">in</span> total_data:</span><br><span class="line">        total_data.update(&#123;item[<span class="string">'name'</span>]:<span class="number">0</span>&#125;)</span><br><span class="line">    <span class="keyword">for</span> city_data <span class="keyword">in</span> item[<span class="string">'children'</span>]:</span><br><span class="line">        total_data[item[<span class="string">'name'</span>]]+=int(city_data[<span class="string">'total'</span>][<span class="string">'confirm'</span>])</span><br><span class="line">print(total_data)</span><br><span class="line"></span><br><span class="line">&lt;!--geo = Geo(</span><br><span class="line">    <span class="string">"全国城市疫情确诊人数"</span>,</span><br><span class="line">    <span class="string">"confirm"</span>,</span><br><span class="line">    title_color=<span class="string">"#fff"</span>,</span><br><span class="line">    title_pos=<span class="string">"center"</span>,</span><br><span class="line">    width=<span class="number">1200</span>,</span><br><span class="line">    height=<span class="number">600</span>,</span><br><span class="line">    background_color=<span class="string">"#404a59"</span>,</span><br><span class="line">)</span><br><span class="line">attr, value = geo.cast(data)</span><br><span class="line">geo.add(</span><br><span class="line">    <span class="string">""</span>,</span><br><span class="line">    attr,</span><br><span class="line">    value,</span><br><span class="line">    visual_range=[<span class="number">0</span>, <span class="number">200</span>],</span><br><span class="line">    visual_text_color=<span class="string">"#fff"</span>,</span><br><span class="line">    symbol_size=<span class="number">15</span>,</span><br><span class="line">    is_visualmap=<span class="literal">True</span>,</span><br><span class="line">    is_piecewise=<span class="literal">True</span>,</span><br><span class="line">    visual_split_number=<span class="number">6</span>,</span><br><span class="line">)</span><br><span class="line">geo.render(path='./疫情.html')--&gt;地图显示其确诊分布情况</span><br><span class="line"></span><br><span class="line">names=[]</span><br><span class="line">nums=[]</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> total_data.items():</span><br><span class="line">    names.append(k)</span><br><span class="line">    nums.append(v)</span><br><span class="line">print(names)</span><br><span class="line">print(nums)</span><br><span class="line"><span class="comment">#绘图</span></span><br><span class="line">plt.figure(figsize=[<span class="number">10</span>,<span class="number">6</span>])</span><br><span class="line">plt.bar(names,nums,width=<span class="number">0.3</span>,color=<span class="string">'green'</span>)</span><br><span class="line"><span class="comment">#设置标题</span></span><br><span class="line">plt.xlabel(<span class="string">"地区"</span>,size=<span class="number">12</span>)</span><br><span class="line">plt.ylabel(<span class="string">"人数"</span>,rotation=<span class="number">90</span>,size=<span class="number">16</span>)</span><br><span class="line">plt.title(<span class="string">"全国疫情确诊数对比图"</span>,size=<span class="number">16</span>)</span><br><span class="line">plt.xticks(list(names),rotation=<span class="number">-45</span>,size=<span class="number">10</span>)</span><br><span class="line"><span class="comment">#显示数字</span></span><br><span class="line"><span class="keyword">for</span> a,b <span class="keyword">in</span> zip(names,nums):</span><br><span class="line">    plt.text(a,b,b,ha=<span class="string">'center'</span>,va=<span class="string">'bottom'</span>,size=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>test</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment">#数据抓取</span></span><br><span class="line">url=<span class="string">'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts'</span></span><br><span class="line">html=requests.get(url).text</span><br><span class="line">unicodestr=json.loads(html)<span class="comment">#将string转化为dict</span></span><br><span class="line">new_list=unicodestr.get(<span class="string">'data'</span>)<span class="comment">#获取data中的内容，取出的内容为str</span></span><br><span class="line">a=json.loads(new_list)<span class="comment">#对new_list再次进行load，使其变为dict才可使用</span></span><br><span class="line">header=[<span class="string">'date'</span>,<span class="string">'confirm'</span>,<span class="string">'suspected'</span>,<span class="string">'dead'</span>,<span class="string">'cure'</span>]</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./data.csv'</span>,encoding=<span class="string">'utf-8-sig'</span>,mode=<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv=csv.writer(f)</span><br><span class="line">    f_csv.writerow(header)</span><br><span class="line">f.close()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_data</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'./data.csv'</span>,encoding=<span class="string">'UTF-8'</span>,mode=<span class="string">'a+'</span>,newline=<span class="string">""</span>)<span class="keyword">as</span> f:</span><br><span class="line">        f_csv=csv.writer(f)</span><br><span class="line">        print(data)</span><br><span class="line">        f_csv.writerow(data)</span><br><span class="line">    f.close()</span><br><span class="line">b=len(a)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;b:</span><br><span class="line">    data=(a[i][<span class="string">'date'</span>])</span><br><span class="line">    confirm=(a[i][<span class="string">'confirm'</span>])</span><br><span class="line">    suspect = (a[i][<span class="string">'suspect'</span>])</span><br><span class="line">    dead=(a[i][<span class="string">'dead'</span>])</span><br><span class="line">    heal=(a[i][<span class="string">'heal'</span>])</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    tap=(data,confirm,suspect,dead,heal)</span><br><span class="line">    save_data(tap)</span><br><span class="line">print(<span class="string">"完成爬取----"</span>)</span><br></pre></td></tr></table></figure>

<p>test2</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取数据并可视化</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df=pd.read_csv(<span class="string">'data.csv'</span>)</span><br><span class="line">print(df)</span><br><span class="line">x_data=df[<span class="string">'date'</span>]</span><br><span class="line">y_confirm=df[<span class="string">'confirm'</span>]</span><br><span class="line">y_suspected=df[<span class="string">'suspected'</span>]</span><br><span class="line">y_dead=df[<span class="string">'dead'</span>]</span><br><span class="line">y_cure=df[<span class="string">'cure'</span>]</span><br><span class="line">plt.title(<span class="string">"肺炎疫情趋势变化图"</span>)</span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>]</span><br><span class="line">plt.plot(x_data,y_confirm,color=<span class="string">'red'</span>,linewidth=<span class="number">2.0</span>,linestyle=<span class="string">'-'</span>,label=<span class="string">"确诊人数"</span>)</span><br><span class="line">plt.plot(x_data,y_suspected,color=<span class="string">'yellow'</span>,linewidth=<span class="number">2.0</span>,linestyle=<span class="string">'-'</span>,label=<span class="string">'疑似人数'</span>)</span><br><span class="line">plt.plot(x_data,y_dead,color=<span class="string">'green'</span>,linewidth=<span class="number">2.0</span>,linestyle=<span class="string">'-'</span>,label=<span class="string">'死亡人数'</span>)</span><br><span class="line">plt.plot(x_data,y_cure,color=<span class="string">'grey'</span>,linewidth=<span class="number">2.0</span>,linestyle=<span class="string">'-'</span>,label=<span class="string">'治愈人数'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdvboeyqkxj30hs0dc0to.jpg" alt=""></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdvbp7l3bxj30rs0gojsm.jpg" alt=""></p>
<p>data.csv</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">date,confirm,suspected,dead,cure</span><br><span class="line">01&#x2F;21,440,37,9,25</span><br><span class="line">01&#x2F;13,41,0,1,0</span><br><span class="line">01&#x2F;14,41,0,1,0</span><br><span class="line">01&#x2F;15,41,0,2,5</span><br><span class="line">01&#x2F;16,45,0,2,8</span><br><span class="line">01&#x2F;17,62,0,2,12</span><br><span class="line">01&#x2F;18,198,0,3,17</span><br><span class="line">01&#x2F;19,275,0,4,18</span><br><span class="line">01&#x2F;24,1297,1965,41,38</span><br><span class="line">01&#x2F;23,835,1072,25,34</span><br><span class="line">01&#x2F;22,574,393,17,25</span><br><span class="line">01&#x2F;20,291,54,6,25</span><br><span class="line">01&#x2F;25,1985,2684,56,49</span><br><span class="line">01&#x2F;26,2761,5794,80,51</span><br><span class="line">01&#x2F;27,4535,6973,106,60</span><br><span class="line">01&#x2F;28,5997,9239,132,103</span><br><span class="line">01&#x2F;29,7736,12167,170,124</span><br><span class="line">01&#x2F;30,9720,15238,213,171</span><br><span class="line">01&#x2F;31,11821,17988,259,243</span><br><span class="line">02&#x2F;01,14411,19544,304,328</span><br><span class="line">02&#x2F;02,17238,21558,361,475</span><br><span class="line">02&#x2F;03,20471,23214,425,632</span><br><span class="line">02&#x2F;04,24363,23260,491,892</span><br><span class="line">02&#x2F;05,28060,24702,564,1153</span><br><span class="line">02&#x2F;06,31211,26359,637,1542</span><br><span class="line">02&#x2F;07,34598,27657,723,2052</span><br><span class="line">02&#x2F;08,37251,28942,812,2651</span><br><span class="line">02&#x2F;09,40235,23589,909,3283</span><br><span class="line">02&#x2F;10,42708,21675,1017,3998</span><br><span class="line">02&#x2F;11,44730,16067,1114,4742</span><br><span class="line">02&#x2F;12,59882,13435,1368,5915</span><br><span class="line">02&#x2F;13,63932,10109,1381,6728</span><br><span class="line">02&#x2F;14,66576,8969,1524,8101</span><br><span class="line">02&#x2F;15,68584,8228,1666,9425</span><br><span class="line">02&#x2F;16,70635,7264,1772,10853</span><br><span class="line">02&#x2F;17,72528,6242,1870,12561</span><br><span class="line">02&#x2F;18,74279,5248,2006,14387</span><br><span class="line">02&#x2F;19,75002,4922,2121,16157</span><br><span class="line">02&#x2F;20,75993,5206,2239,18266</span><br><span class="line">02&#x2F;21,76392,5365,2348,20673</span><br><span class="line">02&#x2F;22,77041,4148,2445,22907</span><br><span class="line">02&#x2F;23,77262,3434,2595,24757</span><br><span class="line">02&#x2F;24,77779,2824,2666,27353</span><br><span class="line">02&#x2F;25,78190,2491,2718,29775</span><br><span class="line">02&#x2F;26,78630,2358,2747,32531</span><br><span class="line">02&#x2F;27,78959,2308,2791,36157</span><br><span class="line">02&#x2F;28,79389,1418,2838,39049</span><br><span class="line">02&#x2F;29,79968,851,2873,41675</span><br><span class="line">03&#x2F;01,80174,715,2915,44518</span><br><span class="line">03&#x2F;02,80302,587,2946,47260</span><br><span class="line">03&#x2F;03,80422,520,2984,49914</span><br><span class="line">03&#x2F;04,80565,522,3015,52109</span><br><span class="line">03&#x2F;05,80710,482,3045,53793</span><br><span class="line">03&#x2F;06,80813,502,3073,55477</span><br><span class="line">03&#x2F;07,80859,458,3100,57143</span><br><span class="line">03&#x2F;08,80904,421,3123,58684</span><br><span class="line">03&#x2F;09,80924,349,3140,59982</span><br><span class="line">03&#x2F;10,80955,285,3162,61567</span><br><span class="line">03&#x2F;11,80992,253,3173,62887</span><br><span class="line">03&#x2F;12,81003,147,3180,64216</span><br><span class="line">03&#x2F;13,81021,115,3194,65649</span><br><span class="line">03&#x2F;14,81048,113,3204,67022</span><br><span class="line">03&#x2F;15,81077,134,3218,67863</span><br><span class="line">03&#x2F;16,81116,128,3231,68799</span><br><span class="line">03&#x2F;17,81151,119,3242,69725</span><br><span class="line">03&#x2F;18,81235,105,3250,70547</span><br><span class="line">03&#x2F;19,81300,104,3253,71284</span><br><span class="line">03&#x2F;20,81416,106,3261,71876</span><br><span class="line">03&#x2F;21,81498,118,3267,72382</span><br><span class="line">03&#x2F;22,81600,136,3276,72841</span><br><span class="line">03&#x2F;23,81747,132,3283,73299</span><br><span class="line">03&#x2F;24,81846,134,3287,73791</span><br><span class="line">03&#x2F;25,81960,159,3293,74196</span><br><span class="line">03&#x2F;26,82078,189,3298,74737</span><br><span class="line">03&#x2F;27,82213,184,3301,75122</span><br><span class="line">03&#x2F;28,82341,174,3306,75600</span><br><span class="line">03&#x2F;29,82447,168,3311,75937</span><br><span class="line">03&#x2F;30,82545,183,3314,76225</span><br><span class="line">03&#x2F;31,82631,172,3321,76415</span><br><span class="line">04&#x2F;01,82724,153,3327,76610</span><br><span class="line">04&#x2F;02,82802,135,3331,76785</span><br><span class="line">04&#x2F;03,82861,114,3335,76984</span><br><span class="line">04&#x2F;04,82930,107,3338,77210</span><br><span class="line">04&#x2F;05,83005,88,3340,77348</span><br><span class="line">04&#x2F;06,83071,89,3340,77450</span><br><span class="line">04&#x2F;07,83157,83,3342,77586</span><br><span class="line">04&#x2F;08,83249,73,3344,77711</span><br><span class="line">04&#x2F;09,83305,53,3345,77838</span><br><span class="line">04&#x2F;10,83369,44,3349,77935</span><br><span class="line">04&#x2F;11,83482,82,3349,78020</span><br><span class="line">04&#x2F;12,83602,72,3351,78145</span><br><span class="line">04&#x2F;13,83696,72,3351,78262</span><br><span class="line">04&#x2F;14,83745,73,3352,78389</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>1130 Infix Expression</title>
    <url>/2020/04/12/1130-Infix-Expression/</url>
    <content><![CDATA[<p>Given a syntax tree (binary), you are supposed to output the corresponding infix expression, with parentheses reflecting the precedences of the operators.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer N (≤ 20) which is the total number of nodes in the syntax tree. Then N lines follow, each gives the information of a node (the <em>i</em>-th line corresponds to the <em>i</em>-th node) in the format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data left_child right_child</span><br></pre></td></tr></table></figure>

<p>where <code>data</code> is a string of no more than 10 characters, <code>left_child</code> and <code>right_child</code> are the indices of this node’s left and right children, respectively. The nodes are indexed from 1 to N. The NULL link is represented by −1. The figures 1 and 2 correspond to the samples 1 and 2, respectively.</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://images.ptausercontent.com/4d1c4a98-33cc-45ff-820f-c548845681ba.JPG" alt="infix1.JPG"></th>
<th align="center"><img src="https://images.ptausercontent.com/b5a3c36e-91ad-494a-8853-b46e1e8b60cc.JPG" alt="infix2.JPG"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">Figure 1</td>
<td align="center">Figure 2</td>
</tr>
</tbody></table>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each case, print in a line the infix expression, with parentheses reflecting the precedences of the operators. Note that there must be no extra parentheses for the final expression, as is shown by the samples. There must be no space between any symbols.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">* 8 7</span><br><span class="line">a -1 -1</span><br><span class="line">* 4 1</span><br><span class="line">+ 2 5</span><br><span class="line">b -1 -1</span><br><span class="line">d -1 -1</span><br><span class="line">- -1 6</span><br><span class="line">c -1 -1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(a+b)*(c*(-d))</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">2.35 -1 -1</span><br><span class="line">* 6 1</span><br><span class="line">- -1 4</span><br><span class="line">% 7 8</span><br><span class="line">+ 2 3</span><br><span class="line">a -1 -1</span><br><span class="line">str -1 -1</span><br><span class="line">871 -1 -1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(a*2.35)+(-(str%871))</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node &#123;</span><br><span class="line">	string data;</span><br><span class="line">	int l, r;</span><br><span class="line">&#125;a[100];</span><br><span class="line">string dfs(int root) &#123;</span><br><span class="line">	if(a[root].l &#x3D;&#x3D; -1 &amp;&amp; a[root].r &#x3D;&#x3D; -1)&#123;</span><br><span class="line">		return a[root].data;</span><br><span class="line">	&#125;</span><br><span class="line">	if(a[root].l &#x3D;&#x3D; -1 &amp;&amp; a[root].r !&#x3D; -1)&#123;</span><br><span class="line">		return &quot;(&quot; +  a[root].data + dfs(a[root].r) + &quot;)&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	if(a[root].l !&#x3D; -1 &amp;&amp; a[root].r !&#x3D; -1)&#123;</span><br><span class="line">		return &quot;(&quot; +  dfs(a[root].l) + a[root].data + dfs(a[root].r) + &quot;)&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">	int sum[100] &#x3D; &#123;0&#125;, n, root &#x3D; 1;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	for(int i  &#x3D; 1; i &lt;&#x3D; n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; a[i].data &gt;&gt; a[i].l &gt;&gt; a[i].r;</span><br><span class="line">		if(a[i].l !&#x3D; -1)&#123;</span><br><span class="line">			sum[a[i].l] &#x3D; 1;</span><br><span class="line">		&#125;</span><br><span class="line">		if(a[i].r !&#x3D; -1)&#123;</span><br><span class="line">			sum[a[i].r] &#x3D; 1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	while(sum[root] &#x3D;&#x3D; 1) &#123;</span><br><span class="line">		root++;</span><br><span class="line">	&#125;</span><br><span class="line">	string ans &#x3D; dfs(root);</span><br><span class="line">	if(ans[0] &#x3D;&#x3D; &#39;(&#39;) ans &#x3D; ans.substr(1,ans.size()-2);</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>开始没看懂题意，直到看到示例才大概知道其需要根据给出的节点输出中缀表达式，并且用()来划分运算级别。知道每个节点的子节点下标直接dfs递归，但需要记住左不空右空不存在</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1131 Subway Map</title>
    <url>/2020/04/09/1131-Subway-Map/</url>
    <content><![CDATA[<p>In the big cities, the subway systems always look so complex to the visitors. To give you some sense, the following figure shows the map of Beijing subway. Now you are supposed to help people with your computer skills! Given the starting position of your user, your task is to find the quickest way to his/her destination.</p>
<p><img src="https://images.ptausercontent.com/55799c23-4bdb-4e32-af7f-6d41accfdd2b.jpg" alt="subwaymap.jpg"></p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>N</em> (≤ 100), the number of subway lines. Then <em>N</em> lines follow, with the <em>i</em>-th (<em>i</em>=1,⋯,<em>N</em>) line describes the <em>i</em>-th subway line in the format:</p>
<p><em>M</em> S[1] S[2] … S[<em>M</em>]</p>
<p>where <em>M</em> (≤ 100) is the number of stops, and S[<em>i</em>]’s (<em>i</em>=1,⋯,<em>M</em>) are the indices of the stations (the indices are 4-digit numbers from 0000 to 9999) along the line. It is guaranteed that the stations are given in the correct order – that is, the train travels between S[<em>i</em>] and S[<em>i</em>+1] (<em>i</em>=1,⋯,<em>M</em>−1) without any stop.</p>
<p>Note: It is possible to have loops, but not self-loop (no train starts from S and stops at S without passing through another station). Each station interval belongs to a unique subway line. Although the lines may cross each other at some stations (so called “transfer stations”), no station can be the conjunction of more than 5 lines.</p>
<p>After the description of the subway, another positive integer <em>K</em> (≤ 10) is given. Then <em>K</em> lines follow, each gives a query from your user: the two indices as the starting station and the destination, respectively.</p>
<p>The following figure shows the sample map.</p>
<p><img src="https://images.ptausercontent.com/932c8f1b-7dd5-489d-a774-a91c1fabba7f.jpg" alt="samplemap.jpg"></p>
<p>Note: It is guaranteed that all the stations are reachable, and all the queries consist of legal station numbers.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each query, first print in a line the minimum number of stops. Then you are supposed to show the optimal path in a friendly format as the following:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Take Line#X1 from S1 to S2.</span><br><span class="line">Take Line#X2 from S2 to S3.</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>where <code>X</code><em>i</em>‘s are the line numbers and <code>S</code><em>i</em>‘s are the station indices. Note: Besides the starting and ending stations, only the transfer stations shall be printed.</p>
<p>If the quickest path is not unique, output the one with the minimum number of transfers, which is guaranteed to be unique.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">7 1001 3212 1003 1204 1005 1306 7797</span><br><span class="line">9 9988 2333 1204 2006 2005 2004 2003 2302 2001</span><br><span class="line">13 3011 3812 3013 3001 1306 3003 2333 3066 3212 3008 2302 3010 3011</span><br><span class="line">4 6666 8432 4011 1306</span><br><span class="line">3</span><br><span class="line">3011 3013</span><br><span class="line">6666 2001</span><br><span class="line">2004 3001</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">Take Line#3 from 3011 to 3013.</span><br><span class="line">10</span><br><span class="line">Take Line#4 from 6666 to 1306.</span><br><span class="line">Take Line#3 from 1306 to 2302.</span><br><span class="line">Take Line#2 from 2302 to 2001.</span><br><span class="line">6</span><br><span class="line">Take Line#2 from 2004 to 1204.</span><br><span class="line">Take Line#1 from 1204 to 1306.</span><br><span class="line">Take Line#3 from 1306 to 3001.</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="title">v</span><span class="params">(<span class="number">10000</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> visit[<span class="number">10000</span>],minSum,minTransfer,start,End;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;<span class="built_in">line</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;path,tempPath;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">transfer</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;a)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">-1</span>,preline=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;a.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">line</span>[a[i<span class="number">-1</span>]*<span class="number">10000</span>+a[i]]!=preline) &#123;</span><br><span class="line">			cnt++;</span><br><span class="line">		&#125;</span><br><span class="line">		preline=<span class="built_in">line</span>[a[i<span class="number">-1</span>]*<span class="number">10000</span>+a[i]];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> node,<span class="keyword">int</span> cnt)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (node==End&amp;&amp;(cnt&lt;minSum||(cnt==minSum&amp;&amp;<span class="built_in">transfer</span>(tempPath)&lt;minTransfer))) &#123;</span><br><span class="line">		minSum=cnt;</span><br><span class="line">		minTransfer=<span class="built_in">transfer</span>(tempPath);</span><br><span class="line">		path=tempPath;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (node==End) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[node].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (visit[v[node][i]]==<span class="number">0</span>) &#123;</span><br><span class="line">			visit[v[node][i]]=<span class="number">1</span>;</span><br><span class="line">			tempPath.push_back(v[node][i]);</span><br><span class="line">			dfs(v[node][i], cnt+<span class="number">1</span>);</span><br><span class="line">			visit[v[node][i]]=<span class="number">0</span>;</span><br><span class="line">			tempPath.pop_back();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n,k,pre,temp;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;m,&amp;pre);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;m;j++) &#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;temp);</span><br><span class="line">			v[pre].push_back(temp);</span><br><span class="line">			v[temp].push_back(pre);</span><br><span class="line">			<span class="built_in">line</span>[pre*<span class="number">10000</span>+temp]=<span class="built_in">line</span>[temp*<span class="number">10000</span>+pre]=i+<span class="number">1</span>;</span><br><span class="line">			pre=temp;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;start,&amp;End);</span><br><span class="line">		minSum=<span class="number">10000</span>,minTransfer=<span class="number">10000</span>;</span><br><span class="line">		tempPath.<span class="built_in">clear</span>();</span><br><span class="line">		tempPath.push_back(start);</span><br><span class="line">		visit[start]=<span class="number">1</span>;</span><br><span class="line">		dfs(start, <span class="number">0</span>);</span><br><span class="line">		visit[start]=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,minSum);</span><br><span class="line">		<span class="keyword">int</span> preline=<span class="number">0</span>,preTransfer=start;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;path.<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">line</span>[path[j<span class="number">-1</span>]*<span class="number">10000</span>+path[j]]!=preline) &#123;</span><br><span class="line">				<span class="keyword">if</span> (preline!=<span class="number">0</span>) &#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"Take Line#%d from %04d to %04d.\n"</span>,preline,preTransfer,path[j<span class="number">-1</span>]);</span><br><span class="line">				&#125;</span><br><span class="line">				preline=<span class="built_in">line</span>[path[j<span class="number">-1</span>]*<span class="number">10000</span>+path[j]];</span><br><span class="line">				preTransfer=path[j<span class="number">-1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Take Line#%d from %04d to %04d.\n"</span>,preline,preTransfer,End);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出每条地铁线路的站点号以及测试路线的起始站，要求按照需要乘坐站数最少、换乘次数最少来查询。采用将每条线路编号与站点间map，在DFS遍历后得到的vector中每个数据前后比较即可得到换乘次数，DFS的层数即是乘坐的站数，输出结果时也要用到map来划段。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1134 Vertex Cover</title>
    <url>/2020/04/08/1134-Vertex-Cover/</url>
    <content><![CDATA[<p>A <strong>vertex cover</strong> of a graph is a set of vertices such that each edge of the graph is incident to at least one vertex of the set. Now given a graph with several vertex sets, you are supposed to tell if each of them is a vertex cover or not.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers <em>N</em> and <em>M</em> (both no more than 104), being the total numbers of vertices and the edges, respectively. Then <em>M</em> lines follow, each describes an edge by giving the indices (from 0 to <em>N</em>−1) of the two ends of the edge.</p>
<p>After the graph, a positive integer <em>K</em> (≤ 100) is given, which is the number of queries. Then <em>K</em> lines of queries follow, each in the format:</p>
<p><em>N**v</em> <em>v</em>[1] <em>v</em>[2]⋯<em>v</em>[<em>N*</em>v*]</p>
<p>where <em>N**v</em> is the number of vertices in the set, and <em>v</em>[<em>i</em>]’s are the indices of the vertices.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each query, print in a line <code>Yes</code> if the set is a vertex cover, or <code>No</code> if not.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 11</span><br><span class="line">8 7</span><br><span class="line">6 8</span><br><span class="line">4 5</span><br><span class="line">8 4</span><br><span class="line">8 1</span><br><span class="line">1 2</span><br><span class="line">1 4</span><br><span class="line">9 8</span><br><span class="line">9 1</span><br><span class="line">1 0</span><br><span class="line">2 4</span><br><span class="line">5</span><br><span class="line">4 0 3 8 4</span><br><span class="line">6 6 1 7 5 4 9</span><br><span class="line">3 1 8 4</span><br><span class="line">2 2 8</span><br><span class="line">7 9 8 7 6 5 4 2</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br><span class="line">No</span><br><span class="line">No</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n,k,nv,a,b,num;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[n];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">		v[a].push_back(i);</span><br><span class="line">		v[b].push_back(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;nv);</span><br><span class="line">		<span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vc(m,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;nv;j++) &#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;v[num].<span class="built_in">size</span>();k++) &#123;</span><br><span class="line">				vc[v[num][k]]=<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (vc[j]==<span class="number">0</span>) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">				flag=<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断给出的图中每条边至少存在一点在测试集合中，解题思路将每个点与边的代号绑定，从测试集合出发判断边是否符合条件</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1135 Is It A Red-Black Tree</title>
    <url>/2020/03/28/1135-Is-It-A-Red-Black-Tree/</url>
    <content><![CDATA[<p>There is a kind of balanced binary search tree named <strong>red-black tree</strong> in the data structure. It has the following 5 properties:</p>
<ul>
<li>(1) Every node is either red or black.</li>
<li>(2) The root is black.</li>
<li>(3) Every leaf (NULL) is black.</li>
<li>(4) If a node is red, then both its children are black.</li>
<li>(5) For each node, all simple paths from the node to descendant leaves contain the same number of black nodes.</li>
</ul>
<p>For example, the tree in Figure 1 is a red-black tree, while the ones in Figure 2 and 3 are not.</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://images.ptausercontent.com/eff80bd4-c833-4818-9786-81680d1b304a.jpg" alt="rbf1.jpg"></th>
<th align="center"><img src="https://images.ptausercontent.com/b11184df-eaab-451c-b7d4-7fc1dc82b028.jpg" alt="rbf2.jpg"></th>
<th align="center"><img src="https://images.ptausercontent.com/625c532b-22fc-47b9-80ea-0537cf00d922.jpg" alt="rbf3.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">Figure 1</td>
<td align="center">Figure 2</td>
<td align="center">Figure 3</td>
</tr>
</tbody></table>
<p>For each given binary search tree, you are supposed to tell if it is a legal red-black tree.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains several test cases. The first line gives a positive integer K (≤30) which is the total number of cases. For each case, the first line gives a positive integer N (≤30), the total number of nodes in the binary tree. The second line gives the preorder traversal sequence of the tree. While all the keys in a tree are positive integers, we use negative signs to represent red nodes. All the numbers in a line are separated by a space. The sample input cases correspond to the trees shown in Figure 1, 2 and 3.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in a line “Yes” if the given tree is a red-black tree, or “No” if not.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">9</span><br><span class="line">7 -2 1 5 -4 -11 8 14 -15</span><br><span class="line">9</span><br><span class="line">11 -2 1 -7 5 -4 8 14 -15</span><br><span class="line">8</span><br><span class="line">10 -7 5 -6 8 15 -11 17</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">No</span><br><span class="line">No</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">vector&lt;int&gt;v;</span><br><span class="line">struct node&#123;</span><br><span class="line">	int roots;</span><br><span class="line">	struct node *left,*right;</span><br><span class="line">&#125;;</span><br><span class="line">node* create(node *root,int v)&#123;</span><br><span class="line">	if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">		root&#x3D;new node();</span><br><span class="line">		root-&gt;roots&#x3D;v;</span><br><span class="line">		root-&gt;left&#x3D;root-&gt;right&#x3D;NULL;</span><br><span class="line">	&#125;else if (abs(v)&lt;&#x3D;abs(root-&gt;roots)) &#123;</span><br><span class="line">		root-&gt;left&#x3D;create(root-&gt;left, v);</span><br><span class="line">	&#125;else &#123;</span><br><span class="line">		root-&gt;right&#x3D;create(root-&gt;right, v);</span><br><span class="line">	&#125;</span><br><span class="line">	return root;</span><br><span class="line">&#125;</span><br><span class="line">bool judge1(node *root)&#123;</span><br><span class="line">	if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">		return true;</span><br><span class="line">	&#125;</span><br><span class="line">	if (root-&gt;roots&lt;0) &#123;</span><br><span class="line">		if (root-&gt;left!&#x3D;NULL&amp;&amp;root-&gt;left-&gt;roots&lt;0) &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">		if (root-&gt;right!&#x3D;NULL&amp;&amp;root-&gt;right-&gt;roots&lt;0) &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return judge1(root-&gt;left)&amp;&amp;judge1(root-&gt;right);</span><br><span class="line">&#125;</span><br><span class="line">int getnum(node *root)&#123;</span><br><span class="line">	if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line">	int l&#x3D;getnum(root-&gt;left);</span><br><span class="line">	int r&#x3D;getnum(root-&gt;right);</span><br><span class="line">	return root-&gt;roots&gt;0?max(l,r)+1:max(l,r);</span><br><span class="line">&#125;</span><br><span class="line">bool judge2(node *root)&#123;</span><br><span class="line">	if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">		return true;</span><br><span class="line">	&#125;</span><br><span class="line">	int l&#x3D;getnum(root-&gt;left);</span><br><span class="line">	int r&#x3D;getnum(root-&gt;right);</span><br><span class="line">	if (l!&#x3D;r) &#123;</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line">	return judge2(root-&gt;left)&amp;&amp;judge2(root-&gt;right);</span><br><span class="line">&#125;</span><br><span class="line">int main( )&#123;</span><br><span class="line">	int k,n;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;k);</span><br><span class="line">	for (int i&#x3D;0;i&lt;k;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">		v.resize(n);</span><br><span class="line">		node *root&#x3D;NULL;</span><br><span class="line">		for (int j&#x3D;0;j&lt;n;j++) &#123;</span><br><span class="line">			scanf(&quot;%d&quot;,&amp;v[j]);</span><br><span class="line">			root&#x3D;create(root, v[j]);</span><br><span class="line">		&#125;</span><br><span class="line">		if (v[0]&lt;0||judge1(root)&#x3D;&#x3D;false||judge2(root)&#x3D;&#x3D;false) &#123;</span><br><span class="line">			printf(&quot;No\n&quot;);</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			printf(&quot;Yes\n&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出二叉搜索树的前序遍历，根据给出的条件判断是否为红黑树，主要对红节点子节点是否全为黑，以及任意节点到根节点路径上黑节点个数是否一致</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1137 Final Grading</title>
    <url>/2020/03/28/1137-Final-Grading/</url>
    <content><![CDATA[<p>For a student taking the online course “Data Structures” on China University MOOC (<a href="http://www.icourse163.org/" target="_blank" rel="noopener">http://www.icourse163.org/</a>), to be qualified for a certificate, he/she must first obtain no less than 200 points from the online programming assignments, and then receive a final grade no less than 60 out of 100. The final grade is calculated by <em>G</em>=(<em>G<strong>m</strong>i<strong>d<em>−</em>t</strong>e<strong>r</strong>m<em>×40%+</em>G<strong>f</strong>i<strong>n</strong>a<strong>l*×60%) if *G</strong>m<strong>i</strong>d<em>−</em>t<strong>e</strong>r**m</em>&gt;<em>G<strong>f</strong>i<strong>n</strong>a**l</em>, or <em>G<strong>f</strong>i<strong>n</strong>a**l</em> will be taken as the final grade <em>G</em>. Here <em>G<strong>m</strong>i<strong>d<em>−</em>t</strong>e<strong>r</strong>m</em> and <em>G<strong>f</strong>i<strong>n</strong>a**l</em> are the student’s scores of the mid-term and the final exams, respectively.</p>
<p>The problem is that different exams have different grading sheets. Your job is to write a program to merge all the grading sheets into one.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives three positive integers: P , the number of students having done the online programming assignments; M, the number of students on the mid-term list; and N, the number of students on the final exam list. All the numbers are no more than 10,000.</p>
<p>Then three blocks follow. The first block contains P online programming scores <em>G**p</em>‘s; the second one contains M mid-term scores <em>G<strong>m</strong>i<strong>d<em>−</em>t</strong>e<strong>r</strong>m</em>‘s; and the last one contains N final exam scores <em>G<strong>f</strong>i<strong>n</strong>a**l</em>‘s. Each score occupies a line with the format: <code>StudentID Score</code>, where <code>StudentID</code> is a string of no more than 20 English letters and digits, and <code>Score</code> is a nonnegative integer (the maximum score of the online programming is 900, and that of the mid-term and final exams is 100).</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each case, print the list of students who are qualified for certificates. Each student occupies a line with the format:</p>
<p><code>StudentID</code> <em>G**p</em> <em>G<strong>m</strong>i<strong>d<em>−</em>t</strong>e<strong>r</strong>m</em> <em>G<strong>f</strong>i<strong>n</strong>a**l</em> <em>G</em></p>
<p>If some score does not exist, output “−1” instead. The output must be sorted in descending order of their final grades (<em>G</em> must be rounded up to an integer). If there is a tie, output in ascending order of their <code>StudentID</code>‘s. It is guaranteed that the <code>StudentID</code>‘s are all distinct, and there is at least one qullified student.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 6 7</span><br><span class="line">01234 880</span><br><span class="line">a1903 199</span><br><span class="line">ydjh2 200</span><br><span class="line">wehu8 300</span><br><span class="line">dx86w 220</span><br><span class="line">missing 400</span><br><span class="line">ydhfu77 99</span><br><span class="line">wehu8 55</span><br><span class="line">ydjh2 98</span><br><span class="line">dx86w 88</span><br><span class="line">a1903 86</span><br><span class="line">01234 39</span><br><span class="line">ydhfu77 88</span><br><span class="line">a1903 66</span><br><span class="line">01234 58</span><br><span class="line">wehu8 84</span><br><span class="line">ydjh2 82</span><br><span class="line">missing 99</span><br><span class="line">dx86w 81</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">missing 400 -1 99 99</span><br><span class="line">ydjh2 200 98 82 88</span><br><span class="line">dx86w 220 88 81 84</span><br><span class="line">wehu8 300 55 84 84</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	<span class="keyword">int</span> gp,gm,gf,g;</span><br><span class="line">&#125;node;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Node a,Node b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.g!=b.g?a.g&gt;b.g:a.name&lt;b.name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n,p;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;p,&amp;m,&amp;n);</span><br><span class="line">	<span class="built_in">vector</span>&lt;Node&gt;stu,ans;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;<span class="built_in">map</span>;</span><br><span class="line">	<span class="built_in">string</span> s;</span><br><span class="line">	<span class="keyword">int</span> score,cnt=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;score;</span><br><span class="line">		<span class="keyword">if</span> (score&gt;=<span class="number">200</span>) &#123;</span><br><span class="line">			node.name=s;</span><br><span class="line">			node.gp=score;</span><br><span class="line">			node.gm=node.gf=<span class="number">-1</span>;</span><br><span class="line">			node.g=<span class="number">0</span>;</span><br><span class="line">			stu.push_back(node);</span><br><span class="line">			<span class="built_in">map</span>[s]=cnt++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;score;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">map</span>[s]!=<span class="number">0</span>) &#123;</span><br><span class="line">			stu[<span class="built_in">map</span>[s]<span class="number">-1</span>].gm=score;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;score;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">map</span>[s]!=<span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">int</span> temp=<span class="built_in">map</span>[s]<span class="number">-1</span>;</span><br><span class="line">			stu[temp].gf=score;</span><br><span class="line">			stu[temp].g=score;</span><br><span class="line">			<span class="keyword">if</span> (stu[temp].gm&gt;score) &#123;</span><br><span class="line">				stu[temp].g=stu[temp].gm*<span class="number">0.4</span>+stu[temp].gf*<span class="number">0.6</span>+<span class="number">0.5</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;stu.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (stu[i].g&gt;=<span class="number">60</span>) &#123;</span><br><span class="line">			ans.push_back(stu[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), cmp);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;ans.<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;ans[j].name;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">" %d %d %d %d\n"</span>,ans[j].gp,ans[j].gm,ans[j].gf,ans[j].g);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>简单的对成绩数据处理排序输出，使用vector、map即可</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1138 Postorder Traversal</title>
    <url>/2020/03/28/1138-Postorder-Traversal/</url>
    <content><![CDATA[<p>Suppose that all the keys in a binary tree are distinct positive integers. Given the preorder and inorder traversal sequences, you are supposed to output the first number of the postorder traversal sequence of the corresponding binary tree.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer N (≤ 50,000), the total number of nodes in the binary tree. The second line gives the preorder sequence and the third line gives the inorder sequence. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in one line the first number of the postorder traversal sequence of the corresponding binary tree.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">1 2 3 4 5 6 7</span><br><span class="line">2 3 1 5 4 7 6</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pre,in;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorder</span><span class="params">(<span class="keyword">int</span> prel,<span class="keyword">int</span> inl,<span class="keyword">int</span> inr)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (inl&gt;inr||flag==<span class="literal">true</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> i=inl;</span><br><span class="line">	<span class="keyword">while</span> (in[i]!=pre[prel]) &#123;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	postorder(prel+<span class="number">1</span>, inl, i<span class="number">-1</span>);</span><br><span class="line">	postorder(prel+i-inl+<span class="number">1</span>, i+<span class="number">1</span>, inr);</span><br><span class="line">	<span class="keyword">if</span> (flag==<span class="literal">false</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,in[i]);</span><br><span class="line">		flag=<span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	pre.resize(n);</span><br><span class="line">	in.resize(n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;pre[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;in[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	postorder(<span class="number">0</span>, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>已知前序中序序列，求后序遍历第一个数，由根节点递归遍历找到最左子树（其次兄弟结点）即可</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1139 First Contact</title>
    <url>/2020/03/25/1139-First-Contact/</url>
    <content><![CDATA[<p>Unlike in nowadays, the way that boys and girls expressing their feelings of love was quite subtle in the early years. When a boy A had a crush on a girl B, he would usually not contact her directly in the first place. Instead, he might ask another boy C, one of his close friends, to ask another girl D, who was a friend of both B and C, to send a message to B – quite a long shot, isn’t it? Girls would do analogously.</p>
<p>Here given a network of friendship relations, you are supposed to help a boy or a girl to list all their friends who can possibly help them making the first contact.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers N (1 &lt;N ≤ 300) and M, being the total number of people and the number of friendship relations, respectively. Then M lines follow, each gives a pair of friends. Here a person is represented by a 4-digit ID. To tell their genders, we use a negative sign to represent girls.</p>
<p>After the relations, a positive integer K (≤ 100) is given, which is the number of queries. Then K lines of queries follow, each gives a pair of lovers, separated by a space. It is assumed that the first one is having a crush on the second one.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each query, first print in a line the number of different pairs of friends they can find to help them, then in each line print the IDs of a pair of friends.</p>
<p>If the lovers A and B are of opposite genders, you must first print the friend of A who is of the same gender of A, then the friend of B, who is of the same gender of B. If they are of the same gender, then both friends must be in the same gender as theirs. It is guaranteed that each person has only one gender.</p>
<p>The friends must be printed in non-decreasing order of the first IDs, and for the same first ones, in increasing order of the seconds ones.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 18</span><br><span class="line">-2001 1001</span><br><span class="line">-2002 -2001</span><br><span class="line">1004 1001</span><br><span class="line">-2004 -2001</span><br><span class="line">-2003 1005</span><br><span class="line">1005 -2001</span><br><span class="line">1001 -2003</span><br><span class="line">1002 1001</span><br><span class="line">1002 -2004</span><br><span class="line">-2004 1001</span><br><span class="line">1003 -2002</span><br><span class="line">-2003 1003</span><br><span class="line">1004 -2002</span><br><span class="line">-2001 -2003</span><br><span class="line">1001 1003</span><br><span class="line">1003 -2001</span><br><span class="line">1002 -2001</span><br><span class="line">-2002 -2003</span><br><span class="line">5</span><br><span class="line">1001 -2001</span><br><span class="line">-2003 1001</span><br><span class="line">1005 -2001</span><br><span class="line">-2002 -2004</span><br><span class="line">1111 -2003</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1002 2004</span><br><span class="line">1003 2002</span><br><span class="line">1003 2003</span><br><span class="line">1004 2002</span><br><span class="line">4</span><br><span class="line">2001 1002</span><br><span class="line">2001 1003</span><br><span class="line">2002 1003</span><br><span class="line">2002 1004</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2003 2001</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt;arr;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> a,b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x.a!=y.a?x.a&lt;y.a:x.b&lt;y.b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n,k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">10000</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">		<span class="built_in">string</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		<span class="keyword">if</span> (a.length()==b.length()) &#123;</span><br><span class="line">			v[<span class="built_in">abs</span>(stoi(a))].push_back(<span class="built_in">abs</span>(stoi(b)));</span><br><span class="line">			v[<span class="built_in">abs</span>(stoi(b))].push_back(<span class="built_in">abs</span>(stoi(a)));</span><br><span class="line">		&#125;</span><br><span class="line">		arr[<span class="built_in">abs</span>(stoi(a))*<span class="number">10000</span>+<span class="built_in">abs</span>(stoi(b))]=arr[<span class="built_in">abs</span>(stoi(b))*<span class="number">10000</span>+<span class="built_in">abs</span>(stoi(a))]=<span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> c,d;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;c&gt;&gt;d;</span><br><span class="line">		<span class="built_in">vector</span>&lt;node&gt;ans;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v[<span class="built_in">abs</span>(c)].<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;v[<span class="built_in">abs</span>(d)].<span class="built_in">size</span>();k++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (v[<span class="built_in">abs</span>(c)][j]==<span class="built_in">abs</span>(d)||<span class="built_in">abs</span>(c)==v[<span class="built_in">abs</span>(d)][k]) &#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (arr[v[<span class="built_in">abs</span>(c)][j]*<span class="number">10000</span>+v[<span class="built_in">abs</span>(d)][k]]==<span class="literal">true</span>) &#123;</span><br><span class="line">					ans.push_back(node&#123;v[<span class="built_in">abs</span>(c)][j],v[<span class="built_in">abs</span>(d)][k]&#125;);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		sort(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), cmp);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="keyword">int</span>(ans.<span class="built_in">size</span>()));</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%04d %04d\n"</span>,ans[i].a,ans[i].b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在找到各自同性的朋友的前提下，若朋友互相认识，那么即可找到此伴侣，但是要排除没有通过朋友就找到此人的情况。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>八数码问题</title>
    <url>/2020/03/25/%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>git init   </p>
<p>cd到上传文件目录  </p>
<p>git status</p>
<p>git add .</p>
<p>git add README.md</p>
<p>git commit -m “注释语句”</p>
<p>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:0810-CAO/99.git</p>
<p>git push  -u origin master</p>
<p>切换分支提交</p>
<p>git checkout -b user切换分支</p>
<p>git status</p>
<p>git add .    git status</p>
<p>git commit -m “ “</p>
<p>git push  -u origin user 第一次提交需要加上-u</p>
<p>合并到master中</p>
<p>git checkout master</p>
<p>git merge user     </p>
<p>git push 可直接push</p>
<p>jA814zOs/XSnF1+f+ke4xVPf5gbhk8QuW0xM1256quJo4mNvdgCgZdSbvhocPTAylSaD9yRIJUDClXP02zlSDQpeN2sexRQfFo/rt04z28suqGrZqIf6aRte2sM7DbQ83ATYoleNPznRlrfixZV5gTNWbmMYt0AaHtoFXKaIj63a/86RyfIXjstnB3UiTTrJcGF1a2Ny</p>
<p>77C9-DFB5-3883-F09D BC37-EE93-DA0E-1988 446A-DBA7-558A-5FCE 565F-51AD-B7BE-B296</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">string</span> GOAL = <span class="string">"123804765"</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Situation</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> father;</span><br><span class="line">	<span class="built_in">string</span> code;<span class="comment">//当前状态</span></span><br><span class="line">	<span class="keyword">int</span> deep;</span><br><span class="line">	<span class="function">Situation <span class="title">up</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">Situation <span class="title">down</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">Situation <span class="title">left</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">Situation <span class="title">right</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">isGoal</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">isInOpen</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;<span class="built_in">open</span>)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">isInClosed</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;closed)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="built_in">string</span>)</span> <span class="keyword">const</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">show_deque</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;)</span> <span class="keyword">const</span></span>;</span><br><span class="line">	<span class="function"><span class="built_in">deque</span>&lt;Situation&gt; <span class="title">showWay</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;closed)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">showAnswer</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;closed)</span></span>;<span class="comment">//显示解答</span></span><br><span class="line">	Situation() :father(<span class="string">""</span>), code(<span class="string">""</span>), deep(<span class="number">-1</span>)&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">Situation <span class="title">Situation::up</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">string</span>::size_type loc = code.<span class="built_in">find</span>(<span class="string">'0'</span>);<span class="comment">//0的位置,从0开始计数</span></span><br><span class="line">	Situation son;</span><br><span class="line">	son.code = code;</span><br><span class="line">	son.deep = deep + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (loc&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">		<span class="keyword">char</span> temp = son.code[loc];<span class="comment">//即0</span></span><br><span class="line">		son.code[loc] = son.code[loc - <span class="number">3</span>];</span><br><span class="line">		son.code[loc<span class="number">-3</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		son.code = <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Situation <span class="title">Situation::down</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">string</span>::size_type loc = code.<span class="built_in">find</span>(<span class="string">'0'</span>);<span class="comment">//0的位置,从0开始计数</span></span><br><span class="line">	Situation son;</span><br><span class="line">	son.code = code;</span><br><span class="line">	son.deep = deep + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (loc&lt;=<span class="number">5</span>)&#123;</span><br><span class="line">		<span class="keyword">char</span> temp = son.code[loc];<span class="comment">//即0</span></span><br><span class="line">		son.code[loc] = son.code[loc + <span class="number">3</span>];</span><br><span class="line">		son.code[loc + <span class="number">3</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		son.code = <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Situation <span class="title">Situation::left</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">string</span>::size_type loc = code.<span class="built_in">find</span>(<span class="string">'0'</span>);<span class="comment">//0的位置,从0开始计数</span></span><br><span class="line">	Situation son;</span><br><span class="line">	son.code = code;</span><br><span class="line">	son.deep = deep + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (loc!=<span class="number">0</span>&amp;&amp;loc!=<span class="number">3</span>&amp;&amp;loc!=<span class="number">6</span>)&#123;</span><br><span class="line">		<span class="keyword">char</span> temp = son.code[loc];<span class="comment">//即0</span></span><br><span class="line">		son.code[loc] = son.code[loc - <span class="number">1</span>];</span><br><span class="line">		son.code[loc - <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		son.code = <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Situation <span class="title">Situation::right</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">string</span>::size_type loc = code.<span class="built_in">find</span>(<span class="string">'0'</span>);<span class="comment">//0的位置,从0开始计数</span></span><br><span class="line">	Situation son;</span><br><span class="line">	son.code = code;</span><br><span class="line">	son.deep = deep + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (loc!=<span class="number">2</span>&amp;&amp;loc!=<span class="number">5</span>&amp;&amp;loc!=<span class="number">8</span>)&#123;</span><br><span class="line">		<span class="keyword">char</span> temp = son.code[loc];<span class="comment">//即0</span></span><br><span class="line">		son.code[loc] = son.code[loc + <span class="number">1</span>];</span><br><span class="line">		son.code[loc + <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		son.code = <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Situation::isGoal</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> code == GOAL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Situation::isInOpen</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;<span class="built_in">open</span>)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">open</span>.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (code==<span class="built_in">open</span>.at(i).code)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Situation::isInClosed</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;closed)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; closed.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (code == closed.at(i).code)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Situation::show</span><span class="params">()</span> <span class="keyword">const</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!code.empty())&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; code[<span class="number">0</span>] &lt;&lt; code[<span class="number">1</span>] &lt;&lt; code[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">			&lt;&lt; code[<span class="number">3</span>] &lt;&lt; code[<span class="number">4</span>] &lt;&lt; code[<span class="number">5</span>] &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">			&lt;&lt; code[<span class="number">6</span>] &lt;&lt; code[<span class="number">7</span>] &lt;&lt; code[<span class="number">8</span>] &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"空的"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Situation::show</span><span class="params">(<span class="built_in">string</span> code)</span> <span class="keyword">const</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!code.empty())&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; code[<span class="number">0</span>] &lt;&lt; code[<span class="number">1</span>] &lt;&lt; code[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">			&lt;&lt; code[<span class="number">3</span>] &lt;&lt; code[<span class="number">4</span>] &lt;&lt; code[<span class="number">5</span>] &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">			&lt;&lt; code[<span class="number">6</span>] &lt;&lt; code[<span class="number">7</span>] &lt;&lt; code[<span class="number">8</span>] &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"空的"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Situation::show_deque</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;m_deque)</span> <span class="keyword">const</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_deque.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		m_deque.at(i).show();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//路径</span></span><br><span class="line"><span class="function"><span class="built_in">deque</span>&lt;Situation&gt; <span class="title">Situation::showWay</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;closed)</span></span>&#123;</span><br><span class="line">	<span class="comment">//cout &lt;&lt; closed.size() &lt;&lt; endl;</span></span><br><span class="line">	<span class="built_in">deque</span>&lt;Situation&gt; dequeList;</span><br><span class="line">	Situation temp = closed.back();</span><br><span class="line">	dequeList.push_back(temp);</span><br><span class="line">	<span class="comment">//closed表从后往前，根据father值找到路径</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = closed.<span class="built_in">size</span>()<span class="number">-1</span>; i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span> (temp.father==closed.at(i).code)&#123;</span><br><span class="line">			dequeList.push_back(closed.at(i));</span><br><span class="line">			temp = closed.at(i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//cout &lt;&lt; dequeList.size() &lt;&lt; endl;</span></span><br><span class="line">	<span class="keyword">return</span> dequeList;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Situation::showAnswer</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;closed)</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="built_in">deque</span>&lt;Situation&gt; <span class="title">way</span><span class="params">(showWay(closed))</span></span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"共需要"</span> &lt;&lt; way.<span class="built_in">size</span>() &lt;&lt; <span class="string">"步"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = way.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		way.at(i).show();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出目标</span></span><br><span class="line">	show(GOAL);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="built_in">deque</span>&lt;Situation&gt; &amp;<span class="built_in">open</span>, <span class="built_in">deque</span>&lt;Situation&gt; &amp;closed,<span class="keyword">int</span> range)</span></span>&#123;</span><br><span class="line">	Situation a;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (!<span class="built_in">open</span>.empty())&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; i++ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">open</span>.front().code == GOAL)&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"成功："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			a.showAnswer(closed);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">open</span>.empty())&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"失败"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		closed.push_back(<span class="built_in">open</span>.front());</span><br><span class="line">		<span class="built_in">open</span>.pop_front();</span><br><span class="line">		<span class="comment">//节点n的深度是否等于深度界限</span></span><br><span class="line">		<span class="keyword">if</span> (closed.back().deep == range)&#123;</span><br><span class="line">			<span class="comment">//loop(open,closed,range);不能用递归</span></span><br><span class="line">			<span class="keyword">continue</span>; </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="comment">//扩展节点n,把其后裔节点放入OPEN表的末端</span></span><br><span class="line">			Situation son1 = closed.back().up();</span><br><span class="line">			Situation son2 = closed.back().down();</span><br><span class="line">			Situation son3 = closed.back().left();</span><br><span class="line">			Situation son4 = closed.back().right();</span><br><span class="line">			<span class="comment">/*</span></span><br><span class="line"><span class="comment">			广度优先搜索和深度优先搜索的唯一区别就是子节点放到open表的位置：</span></span><br><span class="line"><span class="comment">			（1）广度优先搜索放到open表的后面</span></span><br><span class="line"><span class="comment">			（2）深度优先搜索放到open表的前面</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line">			<span class="keyword">if</span> (!son1.code.empty())&#123;</span><br><span class="line">				<span class="keyword">if</span> (!son1.isInOpen(<span class="built_in">open</span>)&amp;&amp;!son1.isInClosed(closed))&#123;</span><br><span class="line">					son1.father = closed.back().code;</span><br><span class="line">					<span class="built_in">open</span>.push_front(son1);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (!son2.code.empty())&#123;</span><br><span class="line">				<span class="keyword">if</span> (!son2.isInOpen(<span class="built_in">open</span>) &amp;&amp; !son2.isInClosed(closed))&#123;</span><br><span class="line">					son2.father = closed.back().code;</span><br><span class="line">					<span class="built_in">open</span>.push_front(son2);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (!son3.code.empty())&#123;</span><br><span class="line">				<span class="keyword">if</span> (!son3.isInOpen(<span class="built_in">open</span>) &amp;&amp; !son3.isInClosed(closed))&#123;</span><br><span class="line">					son3.father = closed.back().code;</span><br><span class="line">					<span class="built_in">open</span>.push_front(son3);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			 <span class="keyword">if</span> (!son4.code.empty())&#123;</span><br><span class="line">				<span class="keyword">if</span> (!son4.isInOpen(<span class="built_in">open</span>) &amp;&amp; !son4.isInClosed(closed))&#123;</span><br><span class="line">					son4.father = closed.back().code;</span><br><span class="line">					<span class="built_in">open</span>.push_front(son4);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//是否有任何后继节点为目标节点</span></span><br><span class="line">			<span class="keyword">if</span> (son1.isGoal())&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"后继节点中有目标节点："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">				son1.showAnswer(closed);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (son2.isGoal())&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"后继节点中有目标节点："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">				son2.showAnswer(closed);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (son3.isGoal())&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"后继节点中有目标节点："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">				son3.showAnswer(closed);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (son4.isGoal())&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"后继节点中有目标节点："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">				son4.showAnswer(closed);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">string</span> original = <span class="string">"208163754"</span>;</span><br><span class="line">	Situation first;</span><br><span class="line">	<span class="built_in">deque</span>&lt;Situation&gt; <span class="built_in">open</span>, closed;<span class="comment">//open存放未扩展节点，closed存放已扩展节点</span></span><br><span class="line">	<span class="keyword">int</span> range = <span class="number">10</span>;<span class="comment">//深度界限</span></span><br><span class="line">	first.code = original;</span><br><span class="line">	first.deep = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">open</span>.push_back(first);</span><br><span class="line">	loop(<span class="built_in">open</span>,closed,range);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>采用有限深度优先解决八数码问题</p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>1141 PAT Ranking of Institutions</title>
    <url>/2020/03/24/1141-PAT-Ranking-of-Institutions/</url>
    <content><![CDATA[<p>After each PAT, the PAT Center will announce the ranking of institutions based on their students’ performances. Now you are asked to generate the ranklist.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer N (≤105), which is the number of testees. Then N lines follow, each gives the information of a testee in the following format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID Score School</span><br></pre></td></tr></table></figure>

<p>where <code>ID</code> is a string of 6 characters with the first one representing the test level: <code>B</code> stands for the basic level, <code>A</code> the advanced level and <code>T</code> the top level; <code>Score</code> is an integer in [0, 100]; and <code>School</code>is the institution code which is a string of no more than 6 English letters (case insensitive). Note: it is guaranteed that <code>ID</code> is unique for each testee.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each case, first print in a line the total number of institutions. Then output the ranklist of institutions in nondecreasing order of their ranks in the following format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Rank School TWS Ns</span><br></pre></td></tr></table></figure>

<p>where <code>Rank</code> is the rank (start from 1) of the institution; <code>School</code> is the institution code (all in lower case); ; <code>TWS</code> is the <strong>total weighted score</strong> which is defined to be the integer part of <code>ScoreB/1.5 + ScoreA + ScoreT*1.5</code>, where <code>ScoreX</code> is the total score of the testees belong to this institution on level <code>X</code>; and <code>Ns</code> is the total number of testees who belong to this institution.</p>
<p>The institutions are ranked according to their <code>TWS</code>. If there is a tie, the institutions are supposed to have the same rank, and they shall be printed in ascending order of <code>Ns</code>. If there is still a tie, they shall be printed in alphabetical order of their codes.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">A57908 85 Au</span><br><span class="line">B57908 54 LanX</span><br><span class="line">A37487 60 au</span><br><span class="line">T28374 67 CMU</span><br><span class="line">T32486 24 hypu</span><br><span class="line">A66734 92 cmu</span><br><span class="line">B76378 71 AU</span><br><span class="line">A47780 45 lanx</span><br><span class="line">A72809 100 pku</span><br><span class="line">A03274 45 hypu</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 cmu 192 2</span><br><span class="line">1 au 192 3</span><br><span class="line">3 pku 100 1</span><br><span class="line">4 hypu 81 2</span><br><span class="line">4 lanx 81 2</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cctype&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;unordered_map&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node&#123;</span><br><span class="line">	string school;</span><br><span class="line">	int tws,ns;</span><br><span class="line">&#125;;</span><br><span class="line">bool cmp(node a,node b)&#123;</span><br><span class="line">	if (a.tws!&#x3D;b.tws) &#123;</span><br><span class="line">		return a.tws&gt;b.tws;</span><br><span class="line">	&#125;else if (a.ns!&#x3D;b.ns) &#123;</span><br><span class="line">		return a.ns&lt;b.ns;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		return a.school&lt;b.school;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main(int argc, char *argv[]) &#123;</span><br><span class="line">	int n;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">	unordered_map&lt;string, int&gt;cnt;</span><br><span class="line">	unordered_map&lt;string, double&gt;sum;</span><br><span class="line">	for (int i&#x3D;0;i&lt;n;i++) &#123;</span><br><span class="line">		string id,school;</span><br><span class="line">		cin&gt;&gt;id;</span><br><span class="line">		double score;</span><br><span class="line">		cin&gt;&gt;score;</span><br><span class="line">		cin&gt;&gt;school;</span><br><span class="line">		for (int j&#x3D;0;j&lt;school.length();j++) &#123;</span><br><span class="line">			school[j]&#x3D;tolower(school[j]);</span><br><span class="line">		&#125;</span><br><span class="line">		if (id[0]&#x3D;&#x3D;&#39;B&#39;) &#123;</span><br><span class="line">			score&#x3D;score&#x2F;1.5;</span><br><span class="line">		&#125;else if (id[0]&#x3D;&#x3D;&#39;T&#39;) &#123;</span><br><span class="line">			score&#x3D;score*1.5;</span><br><span class="line">		&#125;</span><br><span class="line">		sum[school]+&#x3D;score;</span><br><span class="line">		cnt[school]++;</span><br><span class="line">	&#125;</span><br><span class="line">	vector&lt;node&gt;ans;</span><br><span class="line">	for (auto it&#x3D;cnt.begin();it!&#x3D;cnt.end();it++) &#123;</span><br><span class="line">		ans.push_back(node&#123;it-&gt;first,(int)sum[it-&gt;first],cnt[it-&gt;first]&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(ans.begin(), ans.end(), cmp);</span><br><span class="line">	int rank&#x3D;0,pres&#x3D;-1;</span><br><span class="line">	printf(&quot;%d\n&quot;,(int)ans.size());</span><br><span class="line">	for (int i&#x3D;0;i&lt;ans.size();i++) &#123;</span><br><span class="line">		if (pres!&#x3D;ans[i].tws) &#123;</span><br><span class="line">			rank&#x3D;i+1;</span><br><span class="line">		&#125;</span><br><span class="line">		pres&#x3D;ans[i].tws;</span><br><span class="line">		printf(&quot;%d &quot;,rank);</span><br><span class="line">		cout&lt;&lt;ans[i].school;</span><br><span class="line">		printf(&quot; %d %d\n&quot;,ans[i].tws,ans[i].ns);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>前面按照题目要求对数据整理，随后直接push到vector中并排序，最后按照编号输出信息</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1142 Maximal Clique</title>
    <url>/2020/03/12/1142-Maximal-Clique/</url>
    <content><![CDATA[<p>A <strong>clique</strong> is a subset of vertices of an undirected graph such that every two distinct vertices in the clique are adjacent. A <strong>maximal clique</strong> is a clique that cannot be extended by including one more adjacent vertex. (Quoted from <a href="https://en.wikipedia.org/wiki/Clique_(graph_theory)" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Clique_(graph_theory)</a>)</p>
<p>Now it is your job to judge if a given subset of vertices can form a maximal clique.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers Nv (≤200), the number of vertices in the graph, and Ne, the number of undirected edges. Then Ne lines follow, each gives a pair of vertices of an edge. The vertices are numbered from 1 to Nv.</p>
<p>After the graph, there is another positive integer M (≤ 100). Then M lines of query follow, each first gives a positive number K (≤ Nv), then followed by a sequence of K distinct vertices. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each of the M queries, print in a line <code>Yes</code> if the given subset of vertices can form a maximal clique; or if it is a clique but not a <strong>maximal clique</strong>, print <code>Not Maximal</code>; or if it is not a clique at all, print <code>Not a Clique</code>.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 10</span><br><span class="line">5 6</span><br><span class="line">7 8</span><br><span class="line">6 4</span><br><span class="line">3 6</span><br><span class="line">4 5</span><br><span class="line">2 3</span><br><span class="line">8 2</span><br><span class="line">2 7</span><br><span class="line">5 3</span><br><span class="line">3 4</span><br><span class="line">6</span><br><span class="line">4 5 4 3 6</span><br><span class="line">3 2 8 7</span><br><span class="line">2 2 3</span><br><span class="line">1 1</span><br><span class="line">3 4 3 6</span><br><span class="line">3 3 2 1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br><span class="line">Not Maximal</span><br><span class="line">Not a Clique</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">201</span>][<span class="number">201</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> nv,ne,a,b,k,m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;nv,&amp;ne);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ne;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">		e[a][b]=e[b][a]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v(k);</span><br><span class="line">		<span class="keyword">int</span> hash[<span class="number">210</span>]=&#123;<span class="number">0</span>&#125;,isclique=<span class="number">1</span>,ismaximal=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++) &#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;v[j]);</span><br><span class="line">			hash[v[j]]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (isclique==<span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> l=j+<span class="number">1</span>;l&lt;k;l++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (e[v[j]][v[l]]==<span class="number">0</span>) &#123;</span><br><span class="line">					isclique=<span class="number">0</span>;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"Not a Clique\n"</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (isclique==<span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=nv;j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (hash[j]==<span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;k;l++) &#123;</span><br><span class="line">					<span class="keyword">if</span> (e[v[l]][j]==<span class="number">0</span>) &#123;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span> (l==k<span class="number">-1</span>) &#123;</span><br><span class="line">						ismaximal=<span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (ismaximal==<span class="number">0</span>) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"Not Maximal\n"</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (ismaximal==<span class="number">1</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断无向图中给出的点是否都相连，并判断能否添加新节点满足前面条件</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1143 Lowest Common Ancestor</title>
    <url>/2020/03/12/1143-Lowest-Common-Ancestor/</url>
    <content><![CDATA[<p>The lowest common ancestor (LCA) of two nodes U and V in a tree is the deepest node that has both U and V as descendants.</p>
<p>A binary search tree (BST) is recursively defined as a binary tree which has the following properties:</p>
<ul>
<li>The left subtree of a node contains only nodes with keys less than the node’s key.</li>
<li>The right subtree of a node contains only nodes with keys greater than or equal to the node’s key.</li>
<li>Both the left and right subtrees must also be binary search trees.</li>
</ul>
<p>Given any two nodes in a BST, you are supposed to find their LCA.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers: M (≤ 1,000), the number of pairs of nodes to be tested; and N (≤ 10,000), the number of keys in the BST, respectively. In the second line, N distinct integers are given as the preorder traversal sequence of the BST. Then M lines follow, each contains a pair of integer keys U and V. All the keys are in the range of <strong>int</strong>.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each given pair of U and V, print in a line <code>LCA of U and V is A.</code> if the LCA is found and <code>A</code> is the key. But if <code>A</code> is one of U and V, print <code>X is an ancestor of Y.</code> where <code>X</code> is <code>A</code> and <code>Y</code> is the other node. If U or V is not found in the BST, print in a line <code>ERROR: U is not found.</code> or <code>ERROR: V is not found.</code> or <code>ERROR: U and V are not found.</code>.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 8</span><br><span class="line">6 3 1 2 5 4 8 7</span><br><span class="line">2 5</span><br><span class="line">8 7</span><br><span class="line">1 9</span><br><span class="line">12 -3</span><br><span class="line">0 8</span><br><span class="line">99 99</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LCA of 2 and 5 is 3.</span><br><span class="line">8 is an ancestor of 7.</span><br><span class="line">ERROR: 9 is not found.</span><br><span class="line">ERROR: 12 and -3 are not found.</span><br><span class="line">ERROR: 0 is not found.</span><br><span class="line">ERROR: 99 and 99 are not found.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">map&lt;int,bool&gt; mp;</span><br><span class="line">int main(int argc, char *argv[]) &#123;</span><br><span class="line">	int m,n,u,v,a;</span><br><span class="line">	scanf(&quot;%d%d&quot;,&amp;m,&amp;n);</span><br><span class="line">	vector&lt;int&gt;pre(n);</span><br><span class="line">	for (int i&#x3D;0;i&lt;n;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;pre[i]);</span><br><span class="line">		mp[pre[i]]&#x3D;true;</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i&#x3D;0;i&lt;m;i++) &#123;</span><br><span class="line">		scanf(&quot;%d%d&quot;,&amp;u,&amp;v);</span><br><span class="line">		for (int j&#x3D;0;j&lt;n;j++) &#123;</span><br><span class="line">			a&#x3D;pre[j];</span><br><span class="line">			if ((a&gt;&#x3D;u&amp;&amp;a&lt;&#x3D;v)||(a&gt;&#x3D;v&amp;&amp;a&lt;&#x3D;u)) &#123;</span><br><span class="line">				break;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		if (mp[u]&#x3D;&#x3D;false&amp;&amp;mp[v]&#x3D;&#x3D;false) &#123;</span><br><span class="line">			printf(&quot;ERROR: %d and %d are not found.\n&quot;,u,v);</span><br><span class="line">		&#125;else if (mp[u]&#x3D;&#x3D;false||mp[v]&#x3D;&#x3D;false) &#123;</span><br><span class="line">			printf(&quot;ERROR: %d is not found.\n&quot;,mp[u]&#x3D;&#x3D;false?u:v);</span><br><span class="line">		&#125;else if (a&#x3D;&#x3D;u||a&#x3D;&#x3D;v) &#123;</span><br><span class="line">			printf(&quot;%d is an ancestor of %d.\n&quot;,a,a&#x3D;&#x3D;u?v:u);</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			printf(&quot;LCA of %d and %d is %d.\n&quot;, u, v, a);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出二叉搜索树前序序列和两个节点的值，判断其最近的祖先，当给出的节点的值在判断节点的两侧或本身为根节点即可</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1147 Heaps</title>
    <url>/2020/03/12/1147-Heaps/</url>
    <content><![CDATA[<p>In computer science, a <strong>heap</strong> is a specialized tree-based data structure that satisfies the heap property: if P is a parent node of C, then the key (the value) of P is either greater than or equal to (in a max heap) or less than or equal to (in a min heap) the key of C. A common implementation of a heap is the binary heap, in which the tree is a complete binary tree. (Quoted from Wikipedia at <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Heap_(data_structure)</a>)</p>
<p>Your job is to tell if a given complete binary tree is a heap.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers: M (≤ 100), the number of trees to be tested; and N (1 &lt; N ≤ 1,000), the number of keys in each tree, respectively. Then M lines follow, each contains N distinct integer keys (all in the range of <strong>int</strong>), which gives the level order traversal sequence of a complete binary tree.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each given tree, print in a line <code>Max Heap</code> if it is a max heap, or <code>Min Heap</code> for a min heap, or <code>Not Heap</code> if it is not a heap at all. Then in the next line print the tree’s postorder traversal sequence. All the numbers are separated by a space, and there must no extra space at the beginning or the end of the line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 8</span><br><span class="line">98 72 86 60 65 12 23 50</span><br><span class="line">8 38 25 58 52 82 70 60</span><br><span class="line">10 28 15 12 34 9 8 56</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Max Heap</span><br><span class="line">50 60 65 72 12 23 86 98</span><br><span class="line">Min Heap</span><br><span class="line">60 58 52 38 82 70 25 8</span><br><span class="line">Not Heap</span><br><span class="line">56 12 34 28 9 8 15 10</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[1005], m, n;</span><br><span class="line">void postorder(int index) &#123;</span><br><span class="line">	if (index &gt; n)&#123;</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	postorder(index * 2);</span><br><span class="line">	postorder(index * 2 + 1);</span><br><span class="line">	printf(&quot;%d%s&quot;, a[index], index &#x3D;&#x3D; 1 ? &quot;\n&quot; : &quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">	scanf(&quot;%d %d&quot;, &amp;m, &amp;n);</span><br><span class="line">	while (m--) &#123;</span><br><span class="line">		int minn &#x3D; 1, maxn &#x3D; 1;</span><br><span class="line">		for (int i &#x3D; 1; i &lt;&#x3D; n; i++)&#123;</span><br><span class="line">			scanf(&quot;%d&quot;, &amp;a[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		for (int i &#x3D; 2; i &lt;&#x3D; n; i++) &#123;</span><br><span class="line">			if (a[i] &gt; a[i &#x2F; 2])&#123;</span><br><span class="line">				maxn &#x3D; 0;</span><br><span class="line">			&#125;</span><br><span class="line">			if (a[i] &lt; a[i &#x2F; 2])&#123;</span><br><span class="line">				minn &#x3D; 0;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		if (maxn &#x3D;&#x3D; 1)&#123;</span><br><span class="line">			printf(&quot;Max Heap\n&quot;);</span><br><span class="line">		&#125;else if (minn &#x3D;&#x3D; 1)&#123;</span><br><span class="line">			printf(&quot;Min Heap\n&quot;);</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			printf(&quot;Not Heap\n&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">		postorder(1);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出层序遍历，判断为大顶堆、小顶堆或两者都不是，并输出其后序遍历</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1146 Topological Order</title>
    <url>/2020/03/12/1146-Topological-Order/</url>
    <content><![CDATA[<p>This is a problem given in the Graduate Entrance Exam in 2018: Which of the following is NOT a topological order obtained from the given directed graph? Now you are supposed to write a program to test each of the options.</p>
<p><img src="https://images.ptausercontent.com/5d35ed2a-4d19-4f13-bf3f-35ed59cebf05.jpg" alt="gre.jpg"></p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers N (≤1,000), the number of vertices in the graph, and M (≤ 10,000), the number of directed edges. Then M lines follow, each gives the start and the end vertices of an edge. The vertices are numbered from 1 to N. After the graph, there is another positive integer K (≤ 100). Then K lines of query follow, each gives a permutation of all the vertices. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>Print in a line all the indices of queries which correspond to “NOT a topological order”. The indices start from zero. All the numbers are separated by a space, and there must no extra space at the beginning or the end of the line. It is graranteed that there is at least one answer.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 8</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">5 2</span><br><span class="line">5 4</span><br><span class="line">2 3</span><br><span class="line">2 6</span><br><span class="line">3 4</span><br><span class="line">6 4</span><br><span class="line">5</span><br><span class="line">1 5 2 3 6 4</span><br><span class="line">5 1 2 6 3 4</span><br><span class="line">5 1 2 3 6 4</span><br><span class="line">5 2 1 6 3 4</span><br><span class="line">1 2 3 4 5 6</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main( ) &#123;</span><br><span class="line">	int m,n,a,b,k,flag&#x3D;0,pre[1001];</span><br><span class="line">	vector&lt;int&gt; v[1001];</span><br><span class="line">	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">	for (int i&#x3D;0;i&lt;m;i++) &#123;</span><br><span class="line">		scanf(&quot;%d%d&quot;,&amp;a,&amp;b);</span><br><span class="line">		v[a].push_back(b);</span><br><span class="line">		pre[b]++;</span><br><span class="line">	&#125;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;k);</span><br><span class="line">	for (int i&#x3D;0;i&lt;k;i++) &#123;</span><br><span class="line">		int judge&#x3D;1;</span><br><span class="line">		vector&lt;int&gt; dpre(pre,pre+n+1);</span><br><span class="line">		for (int j&#x3D;0;j&lt;n;j++) &#123;</span><br><span class="line">			scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">			if (dpre[a]!&#x3D;0) &#123;</span><br><span class="line">				judge&#x3D;0;</span><br><span class="line">			&#125;</span><br><span class="line">			for (int it:v[a]) &#123;</span><br><span class="line">				dpre[it]--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		if (judge&#x3D;&#x3D;1) &#123;</span><br><span class="line">			continue;</span><br><span class="line">		&#125;</span><br><span class="line">		printf(&quot;%s%d&quot;,flag&#x3D;&#x3D;1?&quot; &quot;:&quot;&quot;,i);</span><br><span class="line">		flag&#x3D;1;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断是否是拓扑序列，判断入度不为0来决定是否输出当前编号</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1145 Hashing - Average Search Time</title>
    <url>/2020/03/12/1145-Hashing-Average-Search-Time/</url>
    <content><![CDATA[<p>The task of this problem is simple: insert a sequence of distinct positive integers into a hash table first. Then try to find another sequence of integer keys from the table and output the average search time (the number of comparisons made to find whether or not the key is in the table). The hash function is defined to be <em>H</em>(<em>k<strong>e</strong>y</em>)=<em>k<strong>e</strong>y</em>%<em>T<strong>S</strong>i<strong>z</strong>e</em> where <em>T<strong>S</strong>i<strong>z</strong>e</em> is the maximum size of the hash table. Quadratic probing (with positive increments only) is used to solve the collisions.</p>
<p>Note that the table size is better to be prime. If the maximum size given by the user is not prime, you must re-define the table size to be the smallest prime number which is larger than the size given by the user.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains 3 positive numbers: MSize, N, and M, which are the user-defined table size, the number of input numbers, and the number of keys to be found, respectively. All the three numbers are no more than 104. Then N distinct positive integers are given in the next line, followed by M positive integer keys in the next line. All the numbers in a line are separated by a space and are no more than 105.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, in case it is impossible to insert some number, print in a line <code>X cannot be inserted.</code> where <code>X</code> is the input number. Finally print in a line the average search time for all the M keys, accurate up to 1 decimal place.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 5 4</span><br><span class="line">10 6 4 15 11</span><br><span class="line">11 4 15 2</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">15 cannot be inserted.</span><br><span class="line">2.8</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">bool isprime(int n)&#123;</span><br><span class="line">	if (n&lt;&#x3D;1) &#123;</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i&#x3D;2;i&lt;&#x3D;sqrt(n);i++) &#123;</span><br><span class="line">		if (n%i&#x3D;&#x3D;0) &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return true;</span><br><span class="line">&#125;</span><br><span class="line">int main( )&#123;</span><br><span class="line">	int size,m,n,a;</span><br><span class="line">	scanf(&quot;%d%d%d&quot;,&amp;size,&amp;n,&amp;m);</span><br><span class="line">	while (!isprime(size)) &#123;</span><br><span class="line">		size++;</span><br><span class="line">	&#125;</span><br><span class="line">	vector&lt;int&gt;v(size);</span><br><span class="line">	for (int i&#x3D;0;i&lt;n;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">		int flag&#x3D;0;</span><br><span class="line">		for (int j&#x3D;0;j&lt;size;j++) &#123;</span><br><span class="line">			int pos&#x3D;(a+j*j)%size;</span><br><span class="line">			if (v[pos]&#x3D;&#x3D;0) &#123;</span><br><span class="line">				v[pos]&#x3D;a;</span><br><span class="line">				flag&#x3D;1;</span><br><span class="line">				break;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		if (!flag) &#123;</span><br><span class="line">			printf(&quot;%d cannot be inserted.\n&quot;,a);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	int ans&#x3D;0;</span><br><span class="line">	for (int i&#x3D;0;i&lt;m;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">		for (int j&#x3D;0;j&lt;&#x3D;size;j++) &#123;</span><br><span class="line">			ans++;</span><br><span class="line">			int pos&#x3D;(a+j*j)%size;</span><br><span class="line">			if (v[pos]&#x3D;&#x3D;a||v[pos]&#x3D;&#x3D;0) &#123;</span><br><span class="line">				break;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;%.1lf\n&quot;,ans*1.0&#x2F;m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用平方探测法解决哈希冲突，即向长度为a的数组插入数字b时，需要插入的位置为pos=(b+i*i)%a,(i&lt;a)</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1151 LCA in a Binary Tree</title>
    <url>/2020/03/12/1151-LCA-in-a-Binary-Tree/</url>
    <content><![CDATA[<p>The lowest common ancestor (LCA) of two nodes U and V in a tree is the deepest node that has both U and V as descendants.</p>
<p>Given any two nodes in a binary tree, you are supposed to find their LCA.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers: M (≤ 1,000), the number of pairs of nodes to be tested; and N (≤ 10,000), the number of keys in the binary tree, respectively. In each of the following two lines, N distinct integers are given as the inorder and preorder traversal sequences of the binary tree, respectively. It is guaranteed that the binary tree can be uniquely determined by the input sequences. Then M lines follow, each contains a pair of integer keys U and V. All the keys are in the range of <strong>int</strong>.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each given pair of U and V, print in a line <code>LCA of U and V is A.</code> if the LCA is found and <code>A</code> is the key. But if <code>A</code> is one of U and V, print <code>X is an ancestor of Y.</code> where <code>X</code> is <code>A</code> and <code>Y</code> is the other node. If U or V is not found in the binary tree, print in a line <code>ERROR: U is not found.</code> or <code>ERROR: V is not found.</code> or <code>ERROR: U and V are not found.</code>.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 8</span><br><span class="line">7 2 3 4 6 5 1 8</span><br><span class="line">5 3 7 2 6 4 8 1</span><br><span class="line">2 6</span><br><span class="line">8 1</span><br><span class="line">7 9</span><br><span class="line">12 -3</span><br><span class="line">0 8</span><br><span class="line">99 99</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LCA of 2 and 6 is 3.</span><br><span class="line">8 is an ancestor of 1.</span><br><span class="line">ERROR: 9 is not found.</span><br><span class="line">ERROR: 12 and -3 are not found.</span><br><span class="line">ERROR: 0 is not found.</span><br><span class="line">ERROR: 99 and 99 are not found.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">map&lt;int, int&gt;pos;</span><br><span class="line">vector&lt;int&gt;in,pre;</span><br><span class="line">void lca(int inl,int inr,int preroot,int a,int b)&#123;</span><br><span class="line">	if (inl&gt;inr) &#123;</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	int inroot&#x3D;pos[pre[preroot]],aIn&#x3D;pos[a],bIn&#x3D;pos[b];</span><br><span class="line">	if (aIn&lt;inroot&amp;&amp;bIn&lt;inroot) &#123;</span><br><span class="line">		lca(inl, inroot-1, preroot+1, a, b);</span><br><span class="line">	&#125;else if ((aIn&lt;inroot&amp;&amp;bIn&gt;inroot)||(aIn&gt;inroot&amp;&amp;bIn&lt;inroot)) &#123;</span><br><span class="line">		printf(&quot;LCA of %d and %d is %d.\n&quot;,a,b,in[inroot]);</span><br><span class="line">	&#125;else if(aIn&gt;inroot&amp;&amp;bIn&gt;inroot)&#123;</span><br><span class="line">		lca(inroot+1, inr, preroot+1+(inroot-inl), a, b);</span><br><span class="line">	&#125;else if (aIn&#x3D;&#x3D;inroot) &#123;</span><br><span class="line">		printf(&quot;%d is an ancestor of %d.\n&quot;,a,b);</span><br><span class="line">	&#125;else if (bIn&#x3D;&#x3D;inroot) &#123;</span><br><span class="line">		printf(&quot;%d is an ancestor of %d.\n&quot;,b,a);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main(int argc, char *argv[]) &#123;</span><br><span class="line">	int m,n,a,b;</span><br><span class="line">	scanf(&quot;%d%d&quot;,&amp;m,&amp;n);</span><br><span class="line">	in.resize(n+1),pre.resize(n+1);</span><br><span class="line">	for (int i&#x3D;1;i&lt;&#x3D;n;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;in[i]);</span><br><span class="line">		pos[in[i]]&#x3D;i;</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i&#x3D;1;i&lt;&#x3D;n;i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;pre[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i&#x3D;0;i&lt;m;i++) &#123;</span><br><span class="line">		scanf(&quot;%d%d&quot;,&amp;a,&amp;b);</span><br><span class="line">		if (pos[a]&#x3D;&#x3D;0&amp;&amp;pos[b]&#x3D;&#x3D;0) &#123;</span><br><span class="line">			printf(&quot;ERROR: %d and %d are not found.\n&quot;,a,b);</span><br><span class="line">		&#125;else if (pos[a]&#x3D;&#x3D;0||pos[b]&#x3D;&#x3D;0) &#123;</span><br><span class="line">			printf(&quot;ERROR: %d is not found.\n&quot;,pos[a]&#x3D;&#x3D;0?a:b);</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			lca(1, n, 1, a, b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出中序与先序序列，找到给出的点的最近公共祖先，只需要利用给出的先序序列确定出根节点，只要明白ab同侧则继续递归找到当前的子树的下一层，当ab异侧则当前子树根节点即为所求。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>spring</title>
    <url>/2020/03/08/spring/</url>
    <content><![CDATA[<p>Spring<br>Spring是分屏的JavaSE/EE full-stack 轻量级开源框架。以IOC（inverseof control控制反转）和AOP（Aspect Oriented Programming面向切面编程为内核）<br>服务器端：表示层（web）、业务逻辑层（service）、持久层（dao）<br>全站式开源框架：为每一个层都提供技术支持<br>Web：struts、spring MVC提供与struts框架的整合<br>Service：spring 常用于service管理实务、记录日志等，不仅仅在service层<br>Dao：hibernate、jdbctemplate<br>轻量级：相对于EJB（企业级）<br>体系结构：1）core container由beans模块（提供beanfactory，工厂模式的经典实现）、core核心模块（提供spring框架的解百纳组成部分）、context上下文模块（建立前两者基础上，是访问定义和配置的任何对象的媒介）和Expression language表达式语言模块组成。2）data access/integration（数据访问/集成），包括JDBC（提供抽象层，减少数据库操作的编码）、ORM、OXM、JMS、Transaction。3）web模块包括web（提供了基本的web开发集成特性）、servlet、struts、portlet组件<br>1、IOC（inverseof control控制反转），将对象的实例的创建权交予工厂。包括beanfactory这一基础的Ioc容器以及Applicationcontext这一beanfactory的子接口（应用上下文）创建方法为：// 1.定义配置文件路径(类路径)String xmlPath = “applicationContext.xml”;<br>// 2.初始化spring容器，加载配置文件ApplicationContext applicationContext = new ClassPathXmlApplicationContext(xmlPath);从类路径的xml文件载入上下文定义信息，把上下文定义文件当作类路径资源。<br>2、Hello word<br>1）导入jar<br>commons-logging-1.2.jar、spring-beans-3.2.2.RELEASE.jar、spring-context-3.2.2.RELEASE.jar、spring-core-3.2.2.RELEASE.jar、spring-expression-3.2.2.RELEASE.jar<br>2）编写配置文件<br>schema约束的配置文件<br>applicationContext.xml<br>3）Spring api获得实例<br>String xmlPath = “applicationContext.xml”;定义配置文件路径(类路径)<br>ApplicationContext applicationContext = new ClassPathXmlApplicationContext(xmlPath);初始化spring容器，加载配置文件<br>①UserDao userDao = (UserDao)applicationContext.getBean(“userDao”);找到配置文件<br>②&lt;bean id=”userDao”class=”cn.itcast.ioc.UserDaoImpl”/&gt;配置文件需要找到实现类<br>③public class UserDaoImpl implements UserDao {实现类<br>public void save() {System.out.println(“spring : hello user dao”);}}<br>④ public interface UserDao {public void save();}<br>DI<br>Dependency injection 依赖注入，一个对象使用另一个对象B的过程。从spring容器获得A对象，使spring自动将A需要的B进行设置，此设置称为注入。<br>实现：<br>UserService userService = (UserService)applicationContext.getBean(“userService”);配置文件—&gt;<bean id="userService" class="cn.itcast.ioc.UserServiceImpl">找到DI实例—&gt;name:实现类的属性名，不需提供setter方法，在UserServiceImpl中存在<br>ref:spring容器中另一个bean的名称，即上面的IOC实现类名称<br>value:属性值，JDK提供的值   <property name="userDao" ref="userDao"/><br>将IOC实例注入到userservice中—–&gt;public class UserServiceImpl implements UserService {private UserDao userDao;//使用UserDao接口声明一个对象<br>public void setUserDao(UserDao userDao) {//添加UserDao对象的set方法，用于依赖注入this.userDao = userDao;}<br>public void addUser() {//实现了UserService中的方法<br>this.userDao.save(); //调用UserDao中的save()方法<br>}}</p>
<p>TestApp.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.ioc;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.springframework.context.ApplicationContext;</span><br><span class="line">import org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line">public class TestApp &#123;</span><br><span class="line">	@Test</span><br><span class="line">	public void demo01() &#123;</span><br><span class="line">		&#x2F;&#x2F; 1.定义配置文件路径(类路径)</span><br><span class="line">		String xmlPath &#x3D; &quot;applicationContext.xml&quot;;</span><br><span class="line">		&#x2F;&#x2F; 2.初始化spring容器，加载配置文件</span><br><span class="line">		ApplicationContext applicationContext &#x3D; </span><br><span class="line">			               new ClassPathXmlApplicationContext(xmlPath);</span><br><span class="line">		&#x2F;&#x2F; 3.通过容器获取userDao实例</span><br><span class="line">		UserDao userDao &#x3D; (UserDao)applicationContext.getBean(&quot;userDao&quot;);</span><br><span class="line">		&#x2F;&#x2F; 4.调用userDao的save()方法</span><br><span class="line">		userDao.save();</span><br><span class="line">	&#125;</span><br><span class="line">	@Test</span><br><span class="line">	public void demo02() &#123;</span><br><span class="line">		&#x2F;&#x2F; 1.定义配置文件路径(类路径)</span><br><span class="line">		String xmlPath &#x3D; &quot;applicationContext.xml&quot;;</span><br><span class="line">		&#x2F;&#x2F; 2.初始化spring容器，加载配置文件</span><br><span class="line">		ApplicationContext applicationContext &#x3D; </span><br><span class="line">			                new ClassPathXmlApplicationContext(xmlPath);</span><br><span class="line">		&#x2F;&#x2F; 3.通过容器获取userService实例</span><br><span class="line">		UserService userService &#x3D; (UserService)applicationContext.getBean(&quot;userService&quot;);</span><br><span class="line">		&#x2F;&#x2F; 4.调用userService的addUser()方法</span><br><span class="line">		userService.addUser();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>applicationContext.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">	xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">	xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans </span><br><span class="line"> 	 http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd&quot;&gt;</span><br><span class="line">	&lt;!-- 将指定对象配置给spring，让spring创建其的实例 --&gt;</span><br><span class="line">	&lt;bean id&#x3D;&quot;userDao&quot; class&#x3D;&quot;cn.itcast.ioc.UserDaoImpl&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!--注册一个名称为userService的实例 --&gt;</span><br><span class="line">	&lt;bean id&#x3D;&quot;userService&quot; class&#x3D;&quot;cn.itcast.ioc.UserServiceImpl&quot;&gt;</span><br><span class="line">    &lt;!--将userDao实例注入到userService实例中</span><br><span class="line">    name:实现类的属性名，不需提供setter方法，在UserServiceImpl中存在</span><br><span class="line">    ref:spring容器中另一个bean的名称，即上面的IOC实现类名称</span><br><span class="line">    value:属性值，JDK提供的值</span><br><span class="line">     --&gt;</span><br><span class="line">	   &lt;property name&#x3D;&quot;userDao&quot; ref&#x3D;&quot;userDao&quot;&#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure>

<p>UserDaoImpl.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.ioc;</span><br><span class="line">public class UserDaoImpl implements UserDao &#123;</span><br><span class="line">	public void save() &#123;</span><br><span class="line">		System.out.println(&quot;spring : hello user dao&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UserDao.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.ioc;</span><br><span class="line">public interface UserDao &#123;</span><br><span class="line">	public void save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UserServiceImpl.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.ioc;</span><br><span class="line">public class UserServiceImpl implements UserService &#123;</span><br><span class="line">	&#x2F;&#x2F;使用UserDao接口声明一个对象</span><br><span class="line">	private UserDao userDao;</span><br><span class="line">	&#x2F;&#x2F;添加UserDao对象的set方法，用于依赖注入</span><br><span class="line">	public void setUserDao(UserDao userDao) &#123;</span><br><span class="line">		this.userDao &#x3D; userDao;</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F;实现了UserService中的方法</span><br><span class="line">	public void addUser() &#123;</span><br><span class="line">	this.userDao.save(); &#x2F;&#x2F;调用UserDao中的save()方法</span><br><span class="line">    System.out.println(&quot;spring : hello user Service&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UserService.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.ioc;</span><br><span class="line">public interface UserService &#123;</span><br><span class="line">	public void addUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>hibernate的检索与实务处理</title>
    <url>/2020/03/08/hibernate%E7%9A%84%E6%A3%80%E7%B4%A2%E4%B8%8E%E5%AE%9E%E5%8A%A1%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hibernate中的事务管理</span><br><span class="line">问题一：什么是事务？</span><br><span class="line">事务就是一件事情，这个事情由多个单元组成，这些单元执行时要么都成功，要么都不成功。</span><br><span class="line">问题二：事务的特性？（ACID）</span><br><span class="line">1、原子性2、一致性3、隔离性4、持久性</span><br><span class="line">问题三：关于不考虑事务的隔离性，会产生的问题？</span><br><span class="line">1、脏读：读取到另一个事务未提交的数据2、不可重读：再次读取的数据不一致3、虚读：再次读取的数据不一致4、更新丢失：后提交的事务将前面事务提交的数据覆盖</span><br><span class="line">问题四：关于上述问题的解决方法？</span><br><span class="line">设置事务的隔离级别：</span><br><span class="line">1、read uncommitted 什么也解决不了</span><br><span class="line">2、read committed 脏读 不可解决不可重复读</span><br><span class="line">3、REPEATABLE——READ 脏读 不可重复读，不能解决虚读</span><br><span class="line">4、SERIALIZABLE 什么都可以解决</span><br><span class="line">&lt;property name&#x3D;&quot;hibernate.connection.islation&quot;&gt;1&#x2F;2&#x2F;3&#x2F;4&lt;&#x2F;property&gt;</span><br><span class="line">关于事务隔离级别不考虑会面出现丢失更，什么是丢失更新？</span><br><span class="line">后提交的事务将前面事务提交的数据覆盖了</span><br><span class="line">解决丢失更新问题方式：</span><br><span class="line">1、悲观锁：利用数据本身提供的锁机制。排它锁 for update 共享锁lock in share mode  update语句自动加排它锁</span><br><span class="line">2、乐观锁：使用版本字段</span><br><span class="line">hibernate中解决丢失更新问题也是一样使用悲观锁、乐观锁</span><br><span class="line">hibernate中使用悲观锁解决丢失更新（数据不能同时修改）</span><br><span class="line">User user&#x3D;(User)session.load(User.class, 1,LockMode.UPGRADE);&#x2F;&#x2F;mysql</span><br><span class="line">User user&#x3D;(User)session.load(User.class, 1,LockMode.UPGRADE_NOWAIT);&#x2F;&#x2F;oracle</span><br><span class="line">hibernate中使用乐观锁解决丢失更新问题，需要使用一个版本字段</span><br><span class="line">在po类中添加一个属性 private int version</span><br><span class="line">在hbm.xml文件中通过&lt;version name&#x3D;”version跟po类中命名一致”&#x2F;&gt;来生成版本字段，版本字段在操作时不需要使用。版本字段，每次修改时会自加一。</span><br><span class="line">hibernate中二级缓存：hibernate中提供两种缓存：1）一级缓存，不需要管理2）二级缓存</span><br><span class="line">二级缓存分为两种：1）内置的，直接查询缓存，不能修改2）外置的，可以配置</span><br><span class="line">二级缓存结构：类缓存区域、集合缓存区域、更新时间戳区域、查询缓存区域</span><br><span class="line">二级缓存并发策略：数据库存在事务隔离级别，用于解决脏读、丢失更新等问题。二级缓存也是用来存储数据，也存在并发问题。其解决方法就是并发策略</span><br><span class="line">Transational（缓存支持事务、发生异常的时候，缓存也能够回滚）、read-write（更新缓存的时候回锁定缓存中的数据）、nonstrict-read-write（不锁定缓存中的数据）、read-only（从来不会被修改）</span><br><span class="line">问题：二级缓存中应该存储什么样的数据？不重要的，不经常被修改的数据</span><br><span class="line">二级缓存使用配置：</span><br><span class="line">1、二级缓存供应商。EHcache（支持本地缓存、支持分布式缓存）、Oscache、Swarmcahce、JBossCache</span><br><span class="line">2、需要在hibernate.cfg.xml文件中配置二级缓存你</span><br><span class="line">1）开启使用二级缓存 hibernate.cache.use_second_level_cache true</span><br><span class="line">2）指定供应商  hibernate.cahce.provider_class org.hibernate.cahce.EhcacheProvider</span><br><span class="line">3、指定那些数据存储到二级缓存中</span><br><span class="line">在hibernate.cfg.xml问价中配置</span><br><span class="line">&lt;class-cache usage&#x3D;&quot;read-write&quot; class&#x3D;&quot;cn.itcast.domain.Customer&quot;&#x2F;&gt;</span><br><span class="line">&lt;class-cache usage&#x3D;&quot;read-write&quot; class&#x3D;&quot;cn.itcast.domain.Order&quot;&#x2F;&gt;</span><br><span class="line">&lt;collection-cache usage&#x3D;&quot;read-write&quot; collection&#x3D;&quot;cn.itcast.domin.Customer.orders&quot;&#x2F;&gt;</span><br><span class="line">也提供另外的方式来设置那些数据放置到二级缓存中，在hbm.xml中设置</span><br><span class="line">在&lt;class&gt;下&lt;cache usage&#x3D;””&gt;代表当前po类会被放置在二级缓存中</span><br><span class="line">(&lt;!--&lt;cache usage&#x3D;&quot;read-write&quot;&#x2F;&gt;--&gt;&lt;!--代表customer会被放置在二级缓存中，跟在cfg.xml中配置有一样的效果--&gt;)</span><br><span class="line">在&lt;set&gt;下&lt;cache usage&#x3D;””&gt;代表当前集合会被放置在二级缓存中</span><br><span class="line">(&lt;!--&lt;cache usage&#x3D;&quot;read-write&quot;&#x2F;&gt;--&gt;&lt;!--代表当前集合会被放置在二级缓存中--&gt;)</span><br><span class="line">4、需要将指定的供应商提供的jar包与配置文件导入。</span><br><span class="line">我们使用的ehcache这个供应商</span><br><span class="line">1）将chcache.xml文件放置在src下</span><br><span class="line">2）导入3个jar包</span><br><span class="line">commons-logging-1.2.jar  ehcache-2.10.0.jar  backposrt-util-concurrent.jar</span><br><span class="line"></span><br><span class="line">Session session&#x3D;HibernateUtils.getSession();</span><br><span class="line">session.beginTransaction();</span><br><span class="line">Customer c1&#x3D;(Customer)session.get(Customer.class, 1);&#x2F;&#x2F;c1会在一级缓存中存在，也会在二级缓存中存在</span><br><span class="line">Customer c2&#x3D;(Customer)session.get(Customer.class, 1);&#x2F;&#x2F; 因为session没有关闭，这时会从一级缓存中取出数据</span><br><span class="line">System.out.println(c1&#x3D;&#x3D;c2);&#x2F;&#x2F; 代表c1,c2都是从一级缓存中获取到的.</span><br><span class="line">session.getTransaction().commit();&#x2F;&#x2F;sesison1关闭，一级缓存被清理</span><br><span class="line">session.close();</span><br><span class="line">&#x2F;&#x2F;查询时控制台没有打印sql语句，此时c3是从二级缓存中获取的，取出后，二级缓存会与一级缓存做一个同步，会将c3又在一级缓存中存在了</span><br><span class="line">Session session1&#x3D;HibernateUtils.getSession();</span><br><span class="line">session.beginTransaction();</span><br><span class="line">Customer c3&#x3D;(Customer)session1.get(Customer.class, 1);&#x2F;&#x2F;false 是因为c3是从二级缓存 中获取的，二级缓存中存放的是散装数据(存入的是类中的属性)，它们会重新new出一个对象</span><br><span class="line">System.out.println(c1&#x3D;&#x3D;c3);</span><br><span class="line">Customer c4&#x3D;(Customer)session1.get(Customer.class, 1);&#x2F;&#x2F;从一级缓存中获取</span><br><span class="line">System.out.println(c3&#x3D;&#x3D;c4);</span><br><span class="line">session.getTransaction().commit();</span><br><span class="line">session.close();</span><br></pre></td></tr></table></figure>

<p>依赖注入：一个对象使用另一个对象的过程称为依赖，从spring对象中获取A对象，使spring自动将A需要的B进行设置的过程称为注入</p>
]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>struts2的文件上传和下载</title>
    <url>/2020/03/08/struts2%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p>public void writefile(){<br>FileUtils.copyFile(upload,new File(“c:/upload”,uploadFileName)<br>}然后在execute中调用即可<br>Struts2文件上传问题解决：<br>如果文件上传出问题，会被workflow拦截器拦截，会跳转到input视图<br><constant name="struts.multipart.maxSize" value="20971520"/><br>struts.xml中配置全局文件大小上限<br>限制文件大小和类型：<br>在struts2中通过上传拦截器FileUpload来实现，在FileUpload中设置3个属性<br>1）maximumSize：上传文件的最大长度，默认为2MB<br>2）allowedTypes：允许上传文件类型，各类型之间以逗号分隔<br>3）allowedExtensions：允许上传文件的扩展名，各扩展名之间以逗号分隔<br>在struts.xml中覆盖三个属性<br>可以在错误页面通过&lt;s:fileError&gt;显示上传错误原因，在拦截器FileUpload中有一个方法acceptFile方法，这个方法中定义了错误信息，在struts-message.properties中定义了上传错误信息，可以进行国际化。<br>struts.messages.error.uploading=Error uploading: {0}<br>struts.messages.error.file.too.large=File {0} is too large to be uploaded. Maximum allowed size is {4} bytes!<br>struts.messages.error.content.type.not.allowed=Content-Type not allowed: {0} “{1}” “{2}” {3}<br>struts.messages.error.file.extension.not.allowed=File extension not allowed: {0} “{1}” “{2}” {3}<br>{0}：<input type="file" name="uploadimage">中name属性的值<br>{1}：上传文件的真实名称<br>{2}：上传文件保存到临时目录的名称<br>{3}：上传文件类型（对struts.messages.error.file.too.large是上传文件大小）<br>第一步：创建新的资源文件，例如fileuploadmessage.properties，放置在src下，在该资源文件下增加如下信息<br>struts.messages.error.uploading=上传错误: {0}<br>struts.messages.error.file.too.large=上传文件太大struts.messages.error.content.type.not.allowed=上传文件类型不允许: {0} “{1}” “{2}” {3}<br>struts.messages.error.file.extension.not.allowed=上传文件后缀不允许: {0} “{1}” “{2}” {3}<br>第二步：在struts.xml文件加载该资源文件<br><constant name="struts.custom.i18n.resources" values="cn....XXX.fileuploadmessage"/><br>多文件上传：<br>以此允许上传多个文件，在action中接收时，定义的变量类型可以是数组或list集合<br>Struts2中文件下载<br><result name="" type="stream"></p>
<p>fileupload.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;s&quot; uri&#x3D;&quot;&#x2F;struts-tags&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot;</span><br><span class="line">                       &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;上传页面&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;s:form action&#x3D;&quot;&#x2F;fileUpload.action&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;s:file name&#x3D;&quot;file&quot; label&#x3D;&quot;上传文件&quot;&#x2F;&gt;</span><br><span class="line">    &lt;s:submit value&#x3D;&quot;上传&quot;&#x2F;&gt;</span><br><span class="line">    &lt;s:reset value&#x3D;&quot;重置&quot;&#x2F;&gt; </span><br><span class="line"> &lt;&#x2F;s:form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">&quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">&lt;!-- 设置文件上传允许最大值 为10M--&gt;</span><br><span class="line">&lt;constant name&#x3D;&quot;struts.multipart.maxSize&quot; value&#x3D;&quot;10485760&quot;&gt;&lt;&#x2F;constant&gt;</span><br><span class="line">&lt;!-- 配置上传文件的出错信息的资源文件 --&gt;</span><br><span class="line">&lt;constant name&#x3D;&quot;struts.custom.i18n.resources&quot; value&#x3D;&quot;cn.itcast.action.FileUploadMessage&quot;&#x2F;&gt;</span><br><span class="line">&lt;package name&#x3D;&quot;struts2&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">&lt;!-- 文件上传（限制大小和类型） --&gt;</span><br><span class="line"> &lt;action name&#x3D;&quot;fileUpload&quot; class&#x3D;&quot;cn.itcast.action.FileUploadAction&quot;&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;success&quot;&gt;&#x2F;result.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;!--定义上传出错要跳转的页面 --&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;input&quot;&gt;&#x2F;fileUpload.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;interceptor-ref name&#x3D;&quot;defaultStack&quot;&gt;</span><br><span class="line">      &lt;!--限制上传文件最大值为4M --&gt;</span><br><span class="line">      &lt;param name&#x3D;&quot;fileUpload.maximumSize&quot;&gt;4194304&lt;&#x2F;param&gt; </span><br><span class="line">             &lt;!--限制上传文件的扩展名 --&gt;           </span><br><span class="line">      &lt;param name&#x3D;&quot;fileUpload.allowedExtensions&quot;&gt;</span><br><span class="line">         .txt,.doc,.jpg</span><br><span class="line">      &lt;&#x2F;param&gt;</span><br><span class="line">      &lt;!--限制上传文件的类型 --&gt;</span><br><span class="line">      &lt;param name&#x3D;&quot;fileUpload.allowedTypes&quot;&gt;</span><br><span class="line">         text&#x2F;plain,application&#x2F;msword,image&#x2F;jpeg</span><br><span class="line">      &lt;&#x2F;param&gt;</span><br><span class="line">    &lt;&#x2F;interceptor-ref&gt;</span><br><span class="line"> &lt;&#x2F;action&gt;</span><br><span class="line">&lt;&#x2F;package&gt;</span><br><span class="line">&lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>FileUploadAction.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line">import org.apache.struts2.ServletActionContext;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">public class FileUploadAction extends ActionSupport&#123;	    </span><br><span class="line">	private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line">     &#x2F;&#x2F;提交过来的文件</span><br><span class="line">     private File file;</span><br><span class="line">     &#x2F;&#x2F;提交过来的file的名字</span><br><span class="line">     private String fileFileName;</span><br><span class="line">     &#x2F;&#x2F;提交过来的file的类型</span><br><span class="line">     private String fileContentType;</span><br><span class="line">     public File getFile()</span><br><span class="line">     &#123;</span><br><span class="line">         return file;</span><br><span class="line">     &#125;</span><br><span class="line">     public void setFile(File file)</span><br><span class="line">     &#123;</span><br><span class="line">         this.file &#x3D; file;</span><br><span class="line">     &#125;</span><br><span class="line">     public String getFileFileName()</span><br><span class="line">     &#123;</span><br><span class="line">         return fileFileName;</span><br><span class="line">     &#125;</span><br><span class="line">     public void setFileFileName(String fileFileName)</span><br><span class="line">     &#123;</span><br><span class="line">         this.fileFileName &#x3D; fileFileName;</span><br><span class="line">     &#125;</span><br><span class="line">     public String getFileContentType()</span><br><span class="line">     &#123;</span><br><span class="line">         return fileContentType;</span><br><span class="line">     &#125;</span><br><span class="line">     public void setFileContentType(String fileContentType)</span><br><span class="line">     &#123;</span><br><span class="line">         this.fileContentType &#x3D; fileContentType;</span><br><span class="line">     &#125;</span><br><span class="line">     public String execute() throws Exception</span><br><span class="line">     &#123;</span><br><span class="line">    	 &#x2F;&#x2F;文件输入流</span><br><span class="line">    	 InputStream is &#x3D; new FileInputStream(file);</span><br><span class="line">    	 &#x2F;&#x2F;设置文件保存的目录</span><br><span class="line">         String uploadPath &#x3D; ServletActionContext.getServletContext()</span><br><span class="line">                             .getRealPath(&quot;&#x2F;upload&quot;);</span><br><span class="line">         &#x2F;&#x2F;设置目标文件</span><br><span class="line">         File toFile &#x3D; new File(uploadPath, this.getFileFileName());</span><br><span class="line">         &#x2F;&#x2F;文件输出流</span><br><span class="line">         OutputStream os &#x3D; new FileOutputStream(toFile);</span><br><span class="line">         byte[] buffer &#x3D; new byte[8192];</span><br><span class="line">         int length &#x3D; 0;</span><br><span class="line">         &#x2F;&#x2F;读取file文件输出到toFile文件中</span><br><span class="line">         while(-1 !&#x3D; (length &#x3D; is.read(buffer, 0, buffer.length)))</span><br><span class="line">         &#123;</span><br><span class="line">             os.write(buffer);</span><br><span class="line">         &#125;</span><br><span class="line">         &#x2F;&#x2F;关闭输入流和输出流</span><br><span class="line">         is.close();</span><br><span class="line">         os.close();</span><br><span class="line">         return SUCCESS;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>FileUploadMessage.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struts.messages.error.uploading&#x3D;\u4E0A\u4F20\u9519\u8BEF\: &#123;0&#125;</span><br><span class="line">struts.messages.error.file.too.large&#x3D;\u6587\u4EF6\u8FC7\u5927: &#123;0&#125; &quot;&#123;1&#125;&quot; &quot;&#123;2&#125;&quot; &#123;3&#125;</span><br><span class="line">struts.messages.error.content.type.not.allowed&#x3D;\u4E0A\u4F20\u6587\u4EF6\u7684\u7C7B\u578B\u4E0D\u5141\u8BB8\: &#123;0&#125; &quot;&#123;1&#125;&quot; &quot;&#123;2&#125;&quot; &#123;3&#125;</span><br><span class="line">struts.messages.error.file.extension.not.allowed&#x3D;\u4E0A\u4F20\u6587\u4EF6\u7684\u540E\u7F00\u540D\u4E0D\u5141\u8BB8\: &#123;0&#125; &quot;&#123;1&#125;&quot; &quot;&#123;2&#125;&quot; &#123;3&#125;</span><br></pre></td></tr></table></figure>

<p>result.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;s&quot; uri&#x3D;&quot;&#x2F;struts-tags&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot;</span><br><span class="line">                       &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;result&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">文件上传成功！&lt;br&gt;</span><br><span class="line">上传文件名： $&#123;fileFileName&#125;&lt;br&gt;</span><br><span class="line">上传文件类型：$&#123;fileContentType&#125;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>ognl表达式</title>
    <url>/2020/03/08/ognl%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<p>1）ognl表达式：是对象导航图语言。也是一种struts2默认的表达式语言，xwork提供ognl支持。支持对象方法调用、支持类静态的方法调用和值访问、访问ognl上下文和actioncontext、支持赋值操作和表达式串联、操作集合对象。OGNL上下文概念就是一个map结构，实现了java.utils.Map的接口。</p>
<p>2）访问ognl上下文和actioncontext：</p>
<p>ognl存在一个上下文对象（map），ognl可以操作这个上下文，即可以向这个map存储和取出数据。在struts2中这个上下文对象就是actioncontext。</p>
<p>ognl与valuestack</p>
<p>3）什么是值栈（valuestack）？</p>
<p>valuestack是struts2中的一个接口，ognl操作的就是这个valuestack，真正操作的是其实现类，ognlvaluestack就是一个map。它是ognl基础。</p>
<p>valuestack：贯穿整个action的生命周期（每个action类的对象实例都拥有一个valuestack对象），相当于一个数据中转站，在其中保存当前action对象和其他相关对象。上述也就是说valuestack是随着action生命周期一致，每个action都拥有自己的valuestack。valuestack中存储的时action的相关信息与常用的web对象。</p>
<p>struts框架将valuestack对象保存在request范围中，名称是“struts.valuestack”</p>
<p>request.setAttribute(“struts.valuestack”,valuestack对象）</p>
<p>4）如何获得值栈对象？</p>
<p>1、通过request对象获取</p>
<p>ValueStack valuestack=(ValueStack) ServletActionContext.getrequest().getAttribute(</p>
<p>ServletActionContext.STRUTS_VALUESTACK_KEY);</p>
<p>2、通过actioncontext对象获取</p>
<p>ValueStack valuestack=ActionContext.getContext().getValueStack();</p>
<p>5）值栈的内部结构</p>
<p>valueStack 中包含两个部分arraylist（root） Map（context）</p>
<p>map中包含root。root中存储了action相关信息，map中存储常用的web对象（reuqest、session、application、parameters）</p>
<p>值栈在开发中的应用</p>
<p>valueStack 在开发中作用：在页面与action之间数据交换。</p>
<p>自动存储在valuestack中的对象：1）action对象会被自动压入valuestack中2）action如果实现了modeldriven接口那么modeldriveninterceptor拦截器会生效，将model对象压入valuestack中。如果是属性驱动，bean对象存在action对象中，模型驱动，bean对象直接存储在root中。</p>
<p>前提：使用模型驱动时，可以从action中获取model对象，转为在action中提供一个getmodel方法，如果在action中提供了get方法，就会在&lt;s:debug&gt;中查看到该属性</p>
<p>属性驱动</p>
<p>product.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.domain;</span><br><span class="line">public class Product &#123;</span><br><span class="line">	private String name; &#x2F;&#x2F;商品名称</span><br><span class="line">	private double price; &#x2F;&#x2F;商品价格</span><br><span class="line">	public String getName() &#123;</span><br><span class="line">		return name;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setName(String name) &#123;</span><br><span class="line">		this.name &#x3D; name;</span><br><span class="line">	&#125;</span><br><span class="line">	public double getPrice() &#123;</span><br><span class="line">		return price;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setPrice(double price) &#123;</span><br><span class="line">		this.price &#x3D; price;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ValueStack2Action.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import cn.itcast.domain.Product;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">public class ValueStack2Action extends ActionSupport &#123;</span><br><span class="line">	private Product p3;</span><br><span class="line">	public Product getP3() &#123;</span><br><span class="line">		return p3;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setP3(Product p3) &#123;</span><br><span class="line">		this.p3 &#x3D; p3;</span><br><span class="line">	&#125;</span><br><span class="line">	@Override</span><br><span class="line">	public String execute() throws Exception &#123;</span><br><span class="line">		return SUCCESS;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>valueStack2.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">	pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;s&quot; uri&#x3D;&quot;&#x2F;struts-tags&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;查看valueStack信息&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;s:debug &#x2F;&gt;</span><br><span class="line">	商品名称：</span><br><span class="line">	&lt;s:property value&#x3D;&quot;p3.name&quot; &#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;br&gt; 商品价格：</span><br><span class="line">	&lt;s:property value&#x3D;&quot;p3.price&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>struts2.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">	&quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">	&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;!-- 开启访问静态方法支持 --&gt;</span><br><span class="line">	&lt;constant name&#x3D;&quot;struts.ognl.allowStaticMethodAccess&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">	&lt;package name&#x3D;&quot;struts2&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">		&lt;action name&#x3D;&quot;valueStack2&quot; class&#x3D;&quot;cn.itcast.action.ValueStack2Action&quot;&gt;</span><br><span class="line">			&lt;result&gt;&#x2F;valueStack2.jsp&lt;&#x2F;result&gt;</span><br><span class="line">		&lt;&#x2F;action&gt;</span><br><span class="line">		&lt;action name&#x3D;&quot;valueStack3&quot; class&#x3D;&quot;cn.itcast.action.ValueStack3Action&quot;&gt;</span><br><span class="line">			&lt;result&gt;&#x2F;valueStack3.jsp&lt;&#x2F;result&gt;</span><br><span class="line">		&lt;&#x2F;action&gt;</span><br><span class="line">	&lt;&#x2F;package&gt;</span><br><span class="line">&lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>模型驱动</p>
<p>ValueStack2Action.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">import com.opensymphony.xwork2.ModelDriven;</span><br><span class="line">import cn.itcast.domain.Product;</span><br><span class="line">&#x2F;&#x2F;模型驱动</span><br><span class="line">public class ValueStack3Action extends ActionSupport implements</span><br><span class="line">		ModelDriven&lt;Product&gt; &#123;</span><br><span class="line">	private Product p3 &#x3D; new Product();</span><br><span class="line">	@Override</span><br><span class="line">	public Product getModel() &#123;</span><br><span class="line">		return p3;</span><br><span class="line">	&#125;</span><br><span class="line">	@Override</span><br><span class="line">	public String execute() throws Exception &#123;</span><br><span class="line">		return SUCCESS;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>valueStack3.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; import&#x3D;&quot;java.util.*&quot; pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;s&quot; uri&#x3D;&quot;&#x2F;struts-tags&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;查看valueStack信息&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;s:debug &#x2F;&gt;</span><br><span class="line">	商品名称：</span><br><span class="line">	&lt;s:property value&#x3D;&quot;model.name&quot; &#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;br&gt; 商品价格：</span><br><span class="line">	&lt;s:property value&#x3D;&quot;model.price&quot; &#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;br&gt;</span><br><span class="line">	使用EL表达式访问值栈中的数据：&lt;&#x2F;br&gt;</span><br><span class="line">	商品名称：$&#123;model.name&#125;</span><br><span class="line">	&lt;&#x2F;br&gt;</span><br><span class="line">        商品价格：$&#123;model.price&#125;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>struts2标签库</title>
    <url>/2020/03/08/struts2%E6%A0%87%E7%AD%BE%E5%BA%93/</url>
    <content><![CDATA[<p>①通用标签库<br>control tags：if、elseif、else、append、generator、merge、sort、subset<br>data tags：action、bean、date、debug、i18n、include、param、property、push、text<br>property标签：用于输出指定值<br>&lt;s:property value=”#name” default=”a default value”/&gt;<br>default 可选属性，如果需要输出的属性值为null，则显示该属性指定的值<br>escape 可选属性，指定是否格式化HTML代码<br>value 可选属性，指定需要输出的属性值，如果没有指定该属性，则默认输出valuestavk栈顶的值。<br>&lt;% request.setAttribute(“name”,”李四”); %&gt;<br>&lt;s:property value=”#request.name” default=”张三”/&gt;<br>&lt;s:property value=”‘<h1>hello</h1>‘“ escape=”false”/&gt;<br>set标签：用于将某个值放入指定范围<br>&lt;s:set value=”request.username” var=”XXX” scape=”a default value”/&gt;<br>var变量的名字，name、id和var表达的含义是一样的，name，id被var替代<br>scape：指定变量被放置的范围，该属性可以接受application、session、request、page、action。如果没有设置该属性，则默认放置在值栈的context中。<br>value：赋给变量的值如果没有设置该属性，即将valuestack栈顶的值赋给变量<br>interator标签：用于对集合进行迭代，包含list、set和数组<br>&lt;s:iterator value=”{‘aa’,’bb’,’cc’}” var=”i” status=”status”&gt;<br>&lt;s:if test=”#status.getCount()==1”&gt;<br><font color="red">&lt;s:property value=”i”/&gt;</font></s:if><br>value:指定被迭代的集合，没有则使用valuestack栈顶的集合<br>var：引用变量的名称<br>status：指定迭代时的interatorstatus实例,其实例包含的方法为：int getcount()返回当前迭代了几个元素、int getindex()返回当前迭代元素的索引、boolean iseven()返回当前被迭代元素的索引是否是偶数、boolean isodd()返回当前被迭代元素的是否是奇数、boolean isfirst()返回当前被迭代元素是否是第一个、boolean islast()返回当前被迭代元素是否是最后一个。<br>url标签：用于创建url，可以通过param标签提供request参数<br>&lt;s:url action=”book” namespace=”/“ var=”myurl”&gt;<br>&lt;s:param name=”id” value=”3”&gt;</s:param><br></s:url><br>value：如果不提供就用当前action，使用value后缀必加action<br>action：用来生成url的action，没有则使用value<br>namespace：命名空间<br>var：引用变量的名称<br>②UI标签库：页面布局<br>&lt;%@ taglib uri=”/struts-tags” prefix=”s” %&gt;<br>&lt;s:form action=” “ method=”post”&gt;<br>&lt;s:textfield name=”username” lable=”用户名”/&gt;<br>&lt;s:textfield name=”password” lable=”密码”/&gt;<br>&lt;s:submit value=”提交”/&gt;<br></s:form>表格页面，添加theme=”simple”即可消除。可以方面数据回显</p>
<p>regist.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">    &lt;%@ taglib uri&#x3D;&quot;&#x2F;struts-tags&quot; prefix&#x3D;&quot;s&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;traditional regist&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h3&gt;&lt;s:fielderror&#x2F;&gt;&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;$(pageContext.request.contextPath)&#x2F;regist.action&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">用户名:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">密码:&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">性别:&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; value&#x3D;&quot;male&quot;&gt;男</span><br><span class="line">    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; value&#x3D;&quot;female&quot;&gt;女&lt;br&#x2F;&gt;</span><br><span class="line">籍贯:&lt;select name&#x3D;&quot;city&quot;&gt;</span><br><span class="line">&lt;option value&#x3D;&quot;北京&quot;&gt;北京&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option value&#x3D;&quot;上海&quot;&gt;上海&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option value&#x3D;&quot;广州&quot;&gt;广州&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option value&#x3D;&quot;深圳&quot;&gt;深圳&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;&lt;br&#x2F;&gt;</span><br><span class="line">爱好:&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;篮球&quot;&gt;篮球</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;足球&quot;&gt;足球</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;乒乓球&quot;&gt;乒乓球&lt;br&#x2F;&gt;</span><br><span class="line">介绍:&lt;textarea name&#x3D;&quot;info&quot; rows&#x3D;&quot;6&quot; cols&#x3D;&quot;30&quot;&gt;&lt;&#x2F;textarea&gt;&lt;br&#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;UI regist&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h3&gt;&lt;s:fielderror&#x2F;&gt;&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;s:form action&#x3D;&quot;regist.action&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">&lt;s:textfield name&#x3D;&quot;username&quot; label&#x3D;&quot;用户名&quot;&#x2F;&gt;</span><br><span class="line">&lt;s:password name&#x3D;&quot;password&quot; showPassword&#x3D;&quot;true&quot; label&#x3D;&quot;密码&quot;&#x2F;&gt;</span><br><span class="line">&lt;s:radio list&#x3D;&quot;#&#123; &#39;male&#39;:&#39;男&#39;,&#39;female&#39;:&#39;女&#39;&#125;&quot; name&#x3D;&quot;sex&quot; label&#x3D;&quot;性别&quot;&#x2F;&gt;</span><br><span class="line">&lt;s:select list&#x3D;&quot;&#123;&#39;北京&#39;,&#39;上海&#39;,&#39;广州&#39;,&#39;深圳&#39;&#125;&quot; name&#x3D;&quot;city&quot; label&#x3D;&quot;籍贯&quot;&#x2F;&gt;</span><br><span class="line">&lt;s:checkboxlist list&#x3D;&quot;&#123;&#39;篮球&#39;,&#39;足球&#39;,&#39;乒乓球&#39;&#125;&quot; name&#x3D;&quot;hobby&quot; label&#x3D;&quot;爱好&quot;&#x2F;&gt;</span><br><span class="line">&lt;s:textarea name&#x3D;&quot;info&quot; cols&#x3D;&quot;30&quot; rows&#x3D;&quot;6&quot; label&#x3D;&quot;介绍&quot;&gt;&lt;&#x2F;s:textarea&gt;</span><br><span class="line">&lt;s:submit value&#x3D;&quot;提交&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;s:form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>regist.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE validators PUBLIC</span><br><span class="line">  		&quot;-&#x2F;&#x2F;Apache Struts&#x2F;&#x2F;XWork Validator 1.0.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">  		&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;xwork-validator-1.0.3.dtd&quot;&gt;</span><br><span class="line">&lt;validators&gt;</span><br><span class="line">&lt;field name&#x3D;&quot;username&quot;&gt;</span><br><span class="line">&lt;field-validator type&#x3D;&quot;requiredstring&quot;&gt;</span><br><span class="line">&lt;message&gt;username is not allow null&lt;&#x2F;message&gt;</span><br><span class="line">&lt;&#x2F;field-validator&gt;</span><br><span class="line">&lt;&#x2F;field&gt;</span><br><span class="line">&lt;field name&#x3D;&quot;password&quot;&gt;</span><br><span class="line">&lt;field-validator type&#x3D;&quot;requiredstring&quot;&gt;</span><br><span class="line">&lt;message&gt;password is not allow null&lt;&#x2F;message&gt;</span><br><span class="line">&lt;&#x2F;field-validator&gt;</span><br><span class="line">&lt;&#x2F;field&gt;</span><br><span class="line">&lt;field name&#x3D;&quot;sex&quot;&gt;</span><br><span class="line">&lt;field-validator type&#x3D;&quot;requiredstring&quot;&gt;</span><br><span class="line">&lt;message&gt;sex is not allow null&lt;&#x2F;message&gt;</span><br><span class="line">&lt;&#x2F;field-validator&gt;</span><br><span class="line">&lt;&#x2F;field&gt;</span><br><span class="line">&lt;&#x2F;validators&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">	&quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">	&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">&lt;constant name&#x3D;&quot;struts.action.extension&quot; value&#x3D;&quot;action&quot;&gt;&lt;&#x2F;constant&gt;</span><br><span class="line">&lt;constant name&#x3D;&quot;struts.devMode&quot; value&#x3D;&quot;true&quot;&gt;&lt;&#x2F;constant&gt;</span><br><span class="line">    &lt;package name&#x3D;&quot;demo1&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;action name&#x3D;&quot;regist&quot; class&#x3D;&quot;cn.itcast.action.registaction&quot;&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;input&quot;&gt;&#x2F;regist.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;&#x2F;action&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;&#x2F;package&gt;</span><br><span class="line">&lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>Registration.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">public class registaction extends ActionSupport&#123;</span><br><span class="line">	private String username;</span><br><span class="line">	private String password;</span><br><span class="line">	private String sex;</span><br><span class="line">	private String city;</span><br><span class="line">	private String[] hobby;</span><br><span class="line">	private String info;</span><br><span class="line">	public String getUsername() &#123;</span><br><span class="line">		return username;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setUsername(String username) &#123;</span><br><span class="line">		this.username &#x3D; username;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getPassword() &#123;</span><br><span class="line">		return password;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setPassword(String password) &#123;</span><br><span class="line">		this.password &#x3D; password;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getSex() &#123;</span><br><span class="line">		return sex;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setSex(String sex) &#123;</span><br><span class="line">		this.sex &#x3D; sex;</span><br><span class="line">	&#125;</span><br><span class="line">	public String[] getHobby() &#123;</span><br><span class="line">		return hobby;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setHobby(String[] hobby) &#123;</span><br><span class="line">		this.hobby &#x3D; hobby;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getInfo() &#123;</span><br><span class="line">		return info;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setInfo(String info) &#123;</span><br><span class="line">		this.info &#x3D; info;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getCity() &#123;</span><br><span class="line">		return city;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setCity(String city) &#123;</span><br><span class="line">		this.city &#x3D; city;</span><br><span class="line">	&#125;</span><br><span class="line">	@Override</span><br><span class="line">	public String execute() throws Exception&#123;</span><br><span class="line">		System.out.println(&quot;SUCCESS&quot;);</span><br><span class="line">		return NONE;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>struts2拦截器</title>
    <url>/2020/03/08/struts2%E6%8B%A6%E6%88%AA%E5%99%A8/</url>
    <content><![CDATA[<p>strutsh中的拦截器interceptor<br>1、应用<br>struts2中的拦截器信息在哪定义的？struts-default.xml文件<br>struts2中的拦截器怎样定义：<br>在struts.xml文件中按照以下语法来配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;interceptor name&#x3D;&quot;name&quot; class&#x3D;&quot;class&quot; &gt;&lt;param name&#x3D;&quot;paramname&quot;&gt;value&lt;&#x2F;param&gt;&lt;&#x2F;interceptor&gt;</span><br></pre></td></tr></table></figure>

<p>name为拦截器名称，class为其实现的类，param是为拦截器传参，分别是参数名与值。如果需要执行多个拦截动作需要配置成拦截器栈：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;interceptors&gt;&lt;interceptor-stack name&#x3D;stackname&quot;&gt;&lt;interceptor-ref name&#x3D;&quot;name&quot;&#x2F;&gt; </span><br><span class="line">&lt;&#x2F;interceptor-stack&gt;&lt;&#x2F;interceptors&gt;</span><br></pre></td></tr></table></figure>

<p>其中stackname是栈的名称name为拦截器名称 interceptor-ref来指定多个拦截器<br>默认拦截器配置：&lt;default-interceptor-ref name=”拦截器的名称”/ &gt;<br>拦截器特点：查看源码大部分拦截器都extends Abstractinterceptor，这个类实现了interceptor接口，即struts2中的拦截器其实就是一个实现了interceptor接口的类。查看interceptor接口源码发现，定义了三个方法：Init、destory、intercept便是拦截器的生命周期。<br>拦截器作用：查看struts-default。xml文件中定义的defaultstack拦截器栈。它里面的每一个拦截器都有特定功能。<br>this.addactionerror()与this.addfielderror()区别前者用于校验，后者用来处理业务错误.在页面上要显示filederror使用的是&lt;s:filederror&gt;,actionerror使用的是&lt;s:actionerror&gt;<br>使用interceptor完成权限控制：自定义一个interceptor（做一个类去继承interceptor类）重定义interceptor方法要点：1）参数是actioninvocation类型，可以通过getaction()获取对象、getinvocationcontext()可以获取actioncontext对象。2）返回值：必须写成invocation.invoke代表向下执行。3）注册拦截器：在自己的struts.xml进行注册，如果在struts.xml中自定义了拦截器，那么继承失效<br>2、原理<br>struts2中的拦截器实现<br>1、struts2中的拦截器实现原理是AOP思想。AOP：面向切面（方面）编程，具体实现就是代理模式。<br>2、struts2中拦截器采用的是责任链模式。Java23设计模式中的一种，将所有操作像锁链一样串起来，在任意一个环节都可以让其继续执行，也可以断开。<br>查看struts2源码分析拦截器可知：1）：strutspreparedExecutefilter。完成两种操作①预处理操作：加载配置文件init方法②具体执行内容–拦截器dofilter方法中。2）actionproxy就是action的代理对象3）actioninvocation，这个对象是正真调用拦截器的对象。Invocation.invoke();4）采用递归调用拦截器，调用任意一个拦截器后都执行invocation.invoke,这相当于执行下一个拦截器后都执行了invokeactiononly(),这相当于执行action中的内容</p>
<p>demo3.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; import&#x3D;&quot;java.util.*&quot; pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;s&quot; uri&#x3D;&quot;&#x2F;struts-tags&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;登录&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;s:actionerror&#x2F;&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;$(pageContext.request.contextPath)&#x2F;login3.action&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">    USERNAME:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line">    PASSWORD:&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登录&quot;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>struts2.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">&quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">    &lt;package name&#x3D;&quot;structs1_1&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">    &lt;!-- 声明拦截器--&gt;</span><br><span class="line">    &lt;interceptors&gt;</span><br><span class="line">&lt;interceptor name&#x3D;&quot;mine&quot; class&#x3D;&quot;cn.itcast.utils.interceptor&quot;&#x2F;&gt;</span><br><span class="line">&lt;interceptor-stack name&#x3D;&quot;mystack&quot;&gt;</span><br><span class="line">&lt;interceptor-ref name&#x3D;&quot;defaultStack&quot;&#x2F;&gt;</span><br><span class="line">&lt;interceptor-ref name&#x3D;&quot;mine&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;interceptor-stack&gt;</span><br><span class="line">&lt;&#x2F;interceptors&gt;</span><br><span class="line">    &lt;!-- 用户登录操作--&gt;</span><br><span class="line">     &lt;action name&#x3D;&quot;login3&quot; class&#x3D;&quot;cn.itcast.action.login3action&quot;&gt;</span><br><span class="line">     &lt;result&gt;&#x2F;index.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;input&quot;&gt;&#x2F;demo3.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;&#x2F;action&gt;</span><br><span class="line">    &lt;action name&#x3D;&quot;book_*&quot; class&#x3D;&quot;cn.itcast.action.bookaction&quot; method&#x3D;&quot;&#123;1&#125;&quot;&gt;</span><br><span class="line">     &lt;result&gt;&#x2F;success.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;login3&quot;&gt;&#x2F;demo3.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;interceptor-ref name&#x3D;&quot;mystack&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;action&gt;</span><br><span class="line">    &lt;&#x2F;package&gt;</span><br><span class="line">&lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>index.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;book&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;Test4&#x2F;book_del&quot;&gt;book del&lt;&#x2F;a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;Test4&#x2F;book_add&quot;&gt;book add&lt;&#x2F;a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;Test4&#x2F;book_update&quot;&gt;book update&lt;&#x2F;a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;Test4&#x2F;book_find&quot;&gt;book find&lt;&#x2F;a&gt;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>success.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;成功界面&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">用户$&#123;user.username&#125;登录成功</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>login3action.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import com.opensymphony.xwork2.ActionContext;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">import com.opensymphony.xwork2.ModelDriven;</span><br><span class="line">import cn.itcast.domain.User;</span><br><span class="line">public class login3action extends ActionSupport implements ModelDriven&lt;User&gt;&#123;	private User user&#x3D;new User();</span><br><span class="line">	@Override</span><br><span class="line">	public User getModel() &#123;</span><br><span class="line">		&#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">		return user;</span><br><span class="line">	&#125;</span><br><span class="line">	public String execute() throws Exception&#123;</span><br><span class="line">		ActionContext actionContext &#x3D; ActionContext.getContext();</span><br><span class="line">		if(&quot;Tom&quot;.equals(user.getUsername())&amp;&amp;&quot;123&quot;.equals(user.getPassword()))&#123;</span><br><span class="line">		&#x2F;&#x2F;System.out.println(user.getUsername()+&quot; &quot;+user.getPassword());</span><br><span class="line">			actionContext.getSession().put(&quot;user&quot;, user);</span><br><span class="line">			return SUCCESS;</span><br><span class="line">			&#125;else &#123;</span><br><span class="line">				this.addActionError(&quot;user or password error&quot;);</span><br><span class="line">				return INPUT;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>User.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.domain;</span><br><span class="line">public class User &#123;</span><br><span class="line">private String username;</span><br><span class="line">private String password;</span><br><span class="line">public String getUsername() &#123;</span><br><span class="line">return username;</span><br><span class="line">&#125;</span><br><span class="line">public void setUsername(String username) &#123;</span><br><span class="line">this.username&#x3D;username;</span><br><span class="line">&#125;</span><br><span class="line">public String getPassword() &#123;</span><br><span class="line">return password;</span><br><span class="line">&#125;</span><br><span class="line">public void setPassword(String password) &#123;</span><br><span class="line">this.password&#x3D;password;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>struts2核心配置</title>
    <url>/2020/03/08/struts2%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>Struts2框架不能见到web常用对象（request、respond、session），减少耦合<br>在struts2框架中获取servlet api有三种方式<br>1）直接在action汇总使用actioncontext去获取<br>这种方式不是直接获取servlet api，通过struts2框架将相关信息包装再返回<br>是通过servlet api执行后的结果封装到map集合中返回。<br>常用方法：1、怎样获取actioncontext对象:ActionContext context=ActionContext.getContext();<br>2、获取其他的servlet api：①get(key)相当于httpservletrequest的getattrbute(string name)方法②要获取请求参数 getParameter()相当于request.getParameterMap()③getsession()方法返回一个Map集合，相当于httpsession④getapplication()方法返回一个Map集合相当于servletcontext⑤context.put(key,value)相当于request.setAttribute(key,value).Actioncontext相当于是一个map集合<br>可以直接获取servlet api<br>2）实现接口，合适注入的方式获取servlet api<br>当我们自己的action为实现servletrequestaware接口，当action被加载时，struts2框架发现这个action实现了接口，就会通过注入的方式将web对象注入 action指定的方法中，我们在action中就可以得到这个web对象。<br>3）直接使用ServletActionContext<br>其下获取servlet api的方法是静态方法，我们在使用时直接使用类名调用ServletActionContext是ActionContext子类<br>Static HttpServletRequest get Request()<br>Static HttpServletResponse getResponse()<br>Static Servletcontext getServletcontext()<br>上面三种方式，建议使用actioncontext，因为它没有与servlet api耦合</p>
<p>通过actioncontext类访问方法访问servlet api（其本质就是通过调用actioncontext方法来使用map中key的值获取value）<br>index.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;ISO-8859-1&quot;&gt;</span><br><span class="line">&lt;title&gt;hello&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;Test2&#x2F;demo.action&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;msg&quot;&gt; </span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;send&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;% </span><br><span class="line">session.setAttribute(&quot;1&quot;,&quot;sessionvalue&quot;);</span><br><span class="line">application.setAttribute(&quot;2&quot;, &quot;applicationvalue&quot;);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">&quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">    &lt;package name&#x3D;&quot;structs2_1&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">    &lt;default-action-ref name&#x3D;&quot;index&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- 继承actionsupport类完成action创建--&gt;</span><br><span class="line">    &lt;action name&#x3D;&quot;demo&quot; class&#x3D;&quot;cn.itcast.action.demoaction&quot;&gt;</span><br><span class="line">    &lt;result&gt;&#x2F;success.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;&#x2F;action&gt;</span><br><span class="line">    &lt;&#x2F;package&gt;  </span><br><span class="line">    &lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>demoaction.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import com.opensymphony.xwork2.ActionContext;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">&#x2F;&#x2F;第一种方式，使用actioncontext</span><br><span class="line">public class demoaction extends ActionSupport &#123;</span><br><span class="line">	public String execute() throws Exception &#123;</span><br><span class="line">		&#x2F;&#x2F;1获取actioncontext对象</span><br><span class="line">		ActionContext context&#x3D;ActionContext.getContext();</span><br><span class="line">		&#x2F;&#x2F;2获取请求参数request.getparameter(&quot;msg&quot;)</span><br><span class="line">		Map&lt;String,Object&gt; parameters&#x3D;context.getParameters();</span><br><span class="line">		System.out.println(((String[])parameters.get(&quot;msg&quot;))[0]);</span><br><span class="line">		&#x2F;&#x2F;3get相当于request.getattribute()</span><br><span class="line">		&#x2F;&#x2F;String msg&#x3D;(String)context.get(&quot;msg&quot;);&#x2F;&#x2F;相当于getattribute()</span><br><span class="line">		&#x2F;&#x2F;System.out.println(msg);</span><br><span class="line">&#x2F;&#x2F;4context.getsession()方法相当于获取一个httpsession对象，但他返回map集合</span><br><span class="line">		Map&lt;String,Object&gt; session&#x3D;context.getSession();</span><br><span class="line">		System.out.println(session.get(&quot;1&quot;));</span><br><span class="line">&#x2F;&#x2F;5使用context.getapplication相当于servletcontexxt对象中的内容，返回一个map</span><br><span class="line">		Map&lt;String,Object&gt; application&#x3D;context.getApplication();</span><br><span class="line">		System.out.println(application.get(&quot;2&quot;));</span><br><span class="line">		&#x2F;&#x2F;context的put方法</span><br><span class="line">		context.put(&quot;3&quot;, &quot;value&quot;);</span><br><span class="line">		System.out.println(context.get(&quot;3&quot;));</span><br><span class="line">		return SUCCESS;</span><br><span class="line">		&#125;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>

<p>success.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;success&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">success.jsp hello struts2</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>action请求参数处理：1）将action作为javabean处理请求参数（属性驱动）：直接在action中定义参数，属性的名称要与请求参数中的名称一致。更明确的说，应该与属性提供的get/set方法的后面的名称一致。 原理：通过struts3的拦截器完成的。主要是通过param拦截器完成。<br>问题一：struts2的action是否是多线程的？存在安全问题？<br>答：action是多线程的，解决线程安全问题的方案是，为每一个线程创建一个action实例。<br>问题二：将bean传递到service层，是否将action传递到service层？<br>答：不能，需要单独定义javabean，将action数据封装到bean。<br>2）创建单独的model对象，在action中创建model对象引用，提供get/set方法，在页面上通过ognl表达式（对象名.属性名）去封装（属性驱动）。通过param拦截器实现<br>3）通过modedriver方式（模型驱动）要求1）要求action实现一个接口modeldriven。重写getmodel()方法。2）要求在action中必须实例化一个javabean对象，在getmodel方法中将这个实例化后的对象返回。modeldriver这种方式的原理是通过modeldriven拦截器完成的。二、三对比来说，第二种可以再action定义多个对象，第三种只能定义一个。</p>
<p>result结果集类型：<br><result name="" type="">url</result>name属性对应的是action中方法执行后返回的字符串值，如果匹配会跳转指定的url，type属性定义跳转方式。chain-&gt;在action内部实现跳转，可以共享action数据、dispatcher-&gt;请求转发（默认）、redirect-&gt;重定向、redireaction-&gt;重定向到某个action，可以直接访问某个action、stream-&gt;回应是流，用于下载。<br>dispatcher与redirect用于跳转到页面，其他两者用于跳转到action</p>
<p>通过属性驱动的方法实现页面与action之间数据的交互(简单来说就是将提供的表单中的数据在一个java中包装后，在另一个java中采用调用其包装后的对象来实现调用，然后至于说ognl来封装的数据方式就是采用对象名.属性名的方式)</p>
<p>demo.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;              </span><br><span class="line">&lt;title&gt;使用ognl封装数据&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;$(pageContext.request.contextPath)&#x2F;login2.action&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">USERNAME:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;user.username&quot;&gt;&lt;br&gt;</span><br><span class="line">PASSWORD:&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;user.password&quot;&gt;&lt;br&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;send&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">&quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line">&quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">    &lt;package name&#x3D;&quot;structs1_1&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">    &lt;action name&#x3D;&quot;login2&quot; class&#x3D;&quot;cn.itcast.action.login2action&quot;&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;success&quot;&gt;&#x2F;index.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;&#x2F;action&gt;</span><br><span class="line">    &lt;&#x2F;package&gt;</span><br><span class="line">&lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>user.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.domain;</span><br><span class="line">public class User &#123;</span><br><span class="line">private String username;</span><br><span class="line">private String password;</span><br><span class="line">public String getUsername() &#123;</span><br><span class="line">return username;</span><br><span class="line">&#125;</span><br><span class="line">public void setUsername(String username) &#123;</span><br><span class="line">this.username&#x3D;username;&#125;</span><br><span class="line">public String getPassword() &#123;</span><br><span class="line">return password;&#125;</span><br><span class="line">public void setPassword(String password) &#123;</span><br><span class="line">this.password&#x3D;password;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>login2ation.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">import cn.itcast.domain.User;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">&#x2F;&#x2F;创建单独的model，在页面使用ognl表达式</span><br><span class="line">public class login2action extends ActionSupport&#123;</span><br><span class="line">private User user;</span><br><span class="line">public User getUser() &#123;</span><br><span class="line">return user;&#125;</span><br><span class="line">public void setUser(User user) &#123;</span><br><span class="line">this.user&#x3D;user;&#125;</span><br><span class="line">public String execute() throws Exception&#123;</span><br><span class="line">System.out.println(user.getUsername()+&quot; &quot;+user.getPassword());</span><br><span class="line">return SUCCESS;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>struts2框架入门</title>
    <url>/2020/03/08/struts2%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>hello.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;ISO-8859-1&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;ISO-8859-1&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;ISO-8859-1&quot;&gt;</span><br><span class="line">&lt;title&gt;struts basic&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;$(pageContext.request.contextPath)&#x2F;hello.action&quot;&gt;the struts basic&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;$(pageContext.request.contextPath)&#x2F;everyone.action&quot;&gt;the struts basic&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>everyone.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;ISO-8859-1&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;ISO-8859-1&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;ISO-8859-1&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">everyone.jsp hello everyone struts2</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>success.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;ISO-8859-1&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;ISO-8859-1&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;ISO-8859-1&quot;&gt;</span><br><span class="line">&lt;title&gt;success&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">success.jsp hello struts2</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line"> &quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.3&#x2F;&#x2F;EN&quot;</span><br><span class="line"> &quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.3.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">    &lt;package name&#x3D;&quot;default&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">    &lt;action name&#x3D;&quot;hello&quot; class&#x3D;&quot;cn.itcast.action.helloaction&quot;&gt;</span><br><span class="line">    &lt;result name&#x3D;&quot;OK&quot;&gt;&#x2F;success.jsp&lt;&#x2F;result&gt;</span><br><span class="line">    &lt;&#x2F;action&gt;</span><br></pre></td></tr></table></figure>

<p>cn.itcast.action</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.itcast.action;</span><br><span class="line">public class helloaction &#123;</span><br><span class="line">	public String execute() &#123;</span><br><span class="line">		return &quot;OK&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>struts2的一个入门案例，在jsp中引入一个.action超链接，然后和struts.xml中的name相匹配进入java包中获取相关的返回值，最后在显示另一个jsp页面内容</p>
]]></content>
      <categories>
        <category>java高级应用</category>
      </categories>
  </entry>
  <entry>
    <title>1150 Travelling Salesman Problem</title>
    <url>/2020/02/23/1150-Travelling-Salesman-Problem/</url>
    <content><![CDATA[<p>The “travelling salesman problem” asks the following question: “Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?” It is an NP-hard problem in combinatorial optimization, important in operations research and theoretical computer science. (Quoted from “<a href="https://en.wikipedia.org/wiki/Travelling_salesman_problem&quot;" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Travelling_salesman_problem&quot;</a>.)</p>
<p>In this problem, you are supposed to find, from a given list of cycles, the one that is the closest to the solution of a travelling salesman problem.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains 2 positive integers <em>N</em> (2&lt;<em>N</em>≤200), the number of cities, and <em>M</em>, the number of edges in an undirected graph. Then <em>M</em> lines follow, each describes an edge in the format <code>City1 City2 Dist</code>, where the cities are numbered from 1 to <em>N</em> and the distance <code>Dist</code> is positive and is no more than 100. The next line gives a positive integer <em>K</em> which is the number of paths, followed by <em>K</em> lines of paths, each in the format:</p>
<p><em>n</em> <em>C</em>1 <em>C</em>2 … <em>C**n</em></p>
<p>where <em>n</em> is the number of cities in the list, and <em>C**i</em>‘s are the cities on a path.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each path, print in a line <code>Path X: TotalDist (Description)</code> where <code>X</code> is the index (starting from 1) of that path, <code>TotalDist</code> its total distance (if this distance does not exist, output <code>NA</code> instead), and <code>Description</code> is one of the following:</p>
<ul>
<li><code>TS simple cycle</code> if it is a simple cycle that visits every city;</li>
<li><code>TS cycle</code> if it is a cycle that visits every city, but not a simple cycle;</li>
<li><code>Not a TS cycle</code> if it is NOT a cycle that visits every city.</li>
</ul>
<p>Finally print in a line <code>Shortest Dist(X) = TotalDist</code> where <code>X</code> is the index of the cycle that is the closest to the solution of a travelling salesman problem, and <code>TotalDist</code> is its total distance. It is guaranteed that such a solution is unique.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 10</span><br><span class="line">6 2 1</span><br><span class="line">3 4 1</span><br><span class="line">1 5 1</span><br><span class="line">2 5 1</span><br><span class="line">3 1 8</span><br><span class="line">4 1 6</span><br><span class="line">1 6 1</span><br><span class="line">6 3 1</span><br><span class="line">1 2 1</span><br><span class="line">4 5 1</span><br><span class="line">7</span><br><span class="line">7 5 1 4 3 6 2 5</span><br><span class="line">7 6 1 3 4 5 2 6</span><br><span class="line">6 5 1 4 3 6 2</span><br><span class="line">9 6 2 1 6 3 4 5 2 6</span><br><span class="line">4 1 2 5 1</span><br><span class="line">7 6 1 2 5 4 3 1</span><br><span class="line">7 6 3 2 5 4 1 6</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Path 1: 11 (TS simple cycle)</span><br><span class="line">Path 2: 13 (TS simple cycle)</span><br><span class="line">Path 3: 10 (Not a TS cycle)</span><br><span class="line">Path 4: 8 (TS cycle)</span><br><span class="line">Path 5: 3 (Not a TS cycle)</span><br><span class="line">Path 6: 13 (Not a TS cycle)</span><br><span class="line">Path 7: NA (Not a TS cycle)</span><br><span class="line">Shortest Dist(4) &#x3D; 8</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int e[210][210], n, m, k, ans &#x3D; 100000, ansid;</span><br><span class="line">vector&lt;int&gt; v;</span><br><span class="line">void check(int index) &#123;</span><br><span class="line">	int sum &#x3D; 0, cnt, flag &#x3D; 1;</span><br><span class="line">	scanf(&quot;%d&quot;, &amp;cnt);</span><br><span class="line">	set&lt;int&gt; s;</span><br><span class="line">	vector&lt;int&gt; v(cnt);</span><br><span class="line">	for (int i &#x3D; 0; i &lt; cnt; i++) &#123;</span><br><span class="line">		scanf(&quot;%d&quot;, &amp;v[i]);</span><br><span class="line">		s.insert(v[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i &#x3D; 0; i &lt; cnt - 1; i++) &#123;</span><br><span class="line">		if(e[v[i]][v[i+1]] &#x3D;&#x3D; 0)&#123;</span><br><span class="line">		flag &#x3D; 0;</span><br><span class="line">		&#125;</span><br><span class="line">		sum +&#x3D; e[v[i]][v[i+1]];</span><br><span class="line">	&#125;</span><br><span class="line">	if (flag &#x3D;&#x3D; 0) &#123;</span><br><span class="line">		printf(&quot;Path %d: NA (Not a TS cycle)\n&quot;, index);</span><br><span class="line">	&#125; else if(v[0] !&#x3D; v[cnt-1] || s.size() !&#x3D; n) &#123;</span><br><span class="line">		printf(&quot;Path %d: %d (Not a TS cycle)\n&quot;, index, sum);</span><br><span class="line">	&#125; else if(cnt !&#x3D; n + 1) &#123;</span><br><span class="line">		printf(&quot;Path %d: %d (TS cycle)\n&quot;, index, sum);</span><br><span class="line">		if (sum &lt; ans) &#123;</span><br><span class="line">			ans &#x3D; sum;</span><br><span class="line">			ansid &#x3D; index;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		printf(&quot;Path %d: %d (TS simple cycle)\n&quot;, index, sum);</span><br><span class="line">		if (sum &lt; ans) &#123;</span><br><span class="line">			ans &#x3D; sum;</span><br><span class="line">			ansid &#x3D; index;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">	scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</span><br><span class="line">	for (int i &#x3D; 0; i &lt; m; i++) &#123;</span><br><span class="line">		int t1, t2, t;</span><br><span class="line">		scanf(&quot;%d%d%d&quot;, &amp;t1, &amp;t2, &amp;t);</span><br><span class="line">		e[t1][t2] &#x3D; e[t2][t1] &#x3D; t;</span><br><span class="line">	&#125;</span><br><span class="line">	scanf(&quot;%d&quot;, &amp;k);</span><br><span class="line">	for (int i &#x3D; 1; i &lt;&#x3D; k; i++)&#123;</span><br><span class="line">		check(i);</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;Shortest Dist(%d) &#x3D; %d\n&quot;, ansid, ans);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断是否为旅行商问题，即能否形成一条每个点只经过一次的回路，起始点通过两次</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>图</category>
      </categories>
  </entry>
  <entry>
    <title>1149 Dangerous Goods Packaging</title>
    <url>/2020/02/23/1149-Dangerous-Goods-Packaging/</url>
    <content><![CDATA[<p>When shipping goods with containers, we have to be careful not to pack some incompatible goods into the same container, or we might get ourselves in serious trouble. For example, oxidizing agent （氧化剂） must not be packed with flammable liquid （易燃液体）, or it can cause explosion.</p>
<p>Now you are given a long list of incompatible goods, and several lists of goods to be shipped. You are supposed to tell if all the goods in a list can be packed into the same container.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers: <em>N</em> (≤104), the number of pairs of incompatible goods, and <em>M</em> (≤100), the number of lists of goods to be shipped.</p>
<p>Then two blocks follow. The first block contains N pairs of incompatible goods, each pair occupies a line; and the second one contains M lists of goods to be shipped, each list occupies a line in the following format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">K G[1] G[2] ... G[K]</span><br></pre></td></tr></table></figure>

<p>where <code>K</code> (≤1,000) is the number of goods and <code>G[i]</code>‘s are the IDs of the goods. To make it simple, each good is represented by a 5-digit ID number. All the numbers in a line are separated by spaces.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each shipping list, print in a line <code>Yes</code> if there are no incompatible goods in the list, or <code>No</code> if not.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 3</span><br><span class="line">20001 20002</span><br><span class="line">20003 20004</span><br><span class="line">20005 20006</span><br><span class="line">20003 20001</span><br><span class="line">20005 20004</span><br><span class="line">20004 20006</span><br><span class="line">4 00001 20004 00002 20003</span><br><span class="line">5 98823 20002 20003 20006 10010</span><br><span class="line">3 12345 67890 23333</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, k, t1, t2;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;t1, &amp;t2);</span><br><span class="line">		m[t1].push_back(t2);</span><br><span class="line">		m[t2].push_back(t1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (k--) &#123;</span><br><span class="line">		<span class="keyword">int</span> cnt, flag = <span class="number">0</span>, a[<span class="number">100000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cnt);</span><br><span class="line">		<span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">v</span><span class="params">(cnt)</span></span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line">			a[v[i]] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); i++)</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m[v[i]].<span class="built_in">size</span>(); j++)</span><br><span class="line">				<span class="keyword">if</span> (a[m[v[i]][j]] == <span class="number">1</span>)<span class="comment">//对应于map的地址与映射</span></span><br><span class="line">					flag = <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,flag ? <span class="string">"No"</span> :<span class="string">"Yes"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1148 Werewolf - Simple Version</title>
    <url>/2020/02/23/1148-Werewolf-Simple-Version/</url>
    <content><![CDATA[<p>Werewolf（狼人杀） is a game in which the players are partitioned into two parties: the werewolves and the human beings. Suppose that in a game,</p>
<ul>
<li>player #1 said: “Player #2 is a werewolf.”;</li>
<li>player #2 said: “Player #3 is a human.”;</li>
<li>player #3 said: “Player #4 is a werewolf.”;</li>
<li>player #4 said: “Player #5 is a human.”; and</li>
<li>player #5 said: “Player #4 is a human.”.</li>
</ul>
<p>Given that there were 2 werewolves among them, at least one but not all the werewolves were lying, and there were exactly 2 liars. Can you point out the werewolves?</p>
<p>Now you are asked to solve a harder version of this problem: given that there were <em>N</em> players, with 2 werewolves among them, at least one but not all the werewolves were lying, and there were exactly 2 liars. You are supposed to point out the werewolves.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer <em>N</em> (5≤<em>N</em>≤100). Then <em>N</em> lines follow and the <em>i</em>-th line gives the statement of the <em>i</em>-th player (1≤<em>i</em>≤<em>N</em>), which is represented by the index of the player with a positive sign for a human and a negative sign for a werewolf.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>If a solution exists, print in a line in ascending order the indices of the two werewolves. The numbers must be separated by exactly one space with no extra spaces at the beginning or the end of the line. If there are more than one solution, you must output the smallest solution sequence – that is, for two sequences <em>A</em>=<em>a</em>[1],…,<em>a</em>[<em>M</em>] and <em>B</em>=<em>b</em>[1],…,<em>b</em>[<em>M</em>], if there exists 0≤<em>k</em>&lt;<em>M</em> such that <em>a</em>[<em>i</em>]=<em>b</em>[<em>i</em>] (<em>i</em>≤<em>k</em>) and <em>a</em>[<em>k</em>+1]&lt;<em>b</em>[<em>k</em>+1], then <em>A</em> is said to be smaller than <em>B</em>. In case there is no solution, simply print <code>No Solution</code>.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">-2</span><br><span class="line">+3</span><br><span class="line">-4</span><br><span class="line">+5</span><br><span class="line">+4</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 4</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">+6</span><br><span class="line">+3</span><br><span class="line">+1</span><br><span class="line">-5</span><br><span class="line">-2</span><br><span class="line">+4</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2-the-solution-is-not-unique"><a href="#Sample-Output-2-the-solution-is-not-unique" class="headerlink" title="Sample Output 2 (the solution is not unique):"></a>Sample Output 2 (the solution is not unique):</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 5</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-3"><a href="#Sample-Input-3" class="headerlink" title="Sample Input 3:"></a>Sample Input 3:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">-2</span><br><span class="line">-3</span><br><span class="line">-4</span><br><span class="line">-5</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-3"><a href="#Sample-Output-3" class="headerlink" title="Sample Output 3:"></a>Sample Output 3:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No Solution</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; key, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; wolf, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> error_count = <span class="number">0</span>;     </span><br><span class="line">	<span class="keyword">int</span> wolf_count = <span class="number">0</span>;     </span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (wolf[<span class="built_in">abs</span>(key[i]) - <span class="number">1</span>] * key[i] &lt; <span class="number">0</span>) &#123;   </span><br><span class="line">			<span class="keyword">if</span> (wolf[i] == <span class="number">-1</span>)</span><br><span class="line">				wolf_count++;</span><br><span class="line">			error_count++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (error_count == <span class="number">2</span> &amp;&amp; wolf_count == <span class="number">1</span>)   </span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; key;</span><br><span class="line">	<span class="keyword">int</span> n, t;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	key.resize(n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; key[i];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">			<span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">wolf</span><span class="params">(n, <span class="number">1</span>)</span></span>;</span><br><span class="line">			wolf[i] = wolf[j] = <span class="number">-1</span>;</span><br><span class="line">			<span class="keyword">if</span> (judge(key, wolf, n)) &#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; j + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"No Solution"</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本题采用双层循环遍历，假设出狼人的位置，然后根据撒谎人数为2，狼人撒谎一人来解决问题</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1155 Heap Paths</title>
    <url>/2020/02/22/1155-Heap-Paths/</url>
    <content><![CDATA[<p>In computer science, a <strong>heap</strong> is a specialized tree-based data structure that satisfies the heap property: if P is a parent node of C, then the key (the value) of P is either greater than or equal to (in a max heap) or less than or equal to (in a min heap) the key of C. A common implementation of a heap is the binary heap, in which the tree is a complete binary tree. (Quoted from Wikipedia at <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Heap_(data_structure)</a>)</p>
<p>One thing for sure is that all the keys along any path from the root to a leaf in a max/min heap must be in non-increasing/non-decreasing order.</p>
<p>Your job is to check every path in a given complete binary tree, in order to tell if it is a heap or not.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer <em>N</em> (1&lt;<em>N</em>≤1,000), the number of keys in the tree. Then the next line contains <em>N</em> distinct integer keys (all in the range of <strong>int</strong>), which gives the level order traversal sequence of a complete binary tree.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each given tree, first print all the paths from the root to the leaves. Each path occupies a line, with all the numbers separated by a space, and no extra space at the beginning or the end of the line. The paths must be printed in the following order: for each node in the tree, all the paths in its right subtree must be printed before those in its left subtree.</p>
<p>Finally print in a line <code>Max Heap</code> if it is a max heap, or <code>Min Heap</code> for a min heap, or <code>Not Heap</code> if it is not a heap at all. </p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">98 72 86 60 65 12 23 50</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">98 86 23</span><br><span class="line">98 86 12</span><br><span class="line">98 72 65</span><br><span class="line">98 72 60 50</span><br><span class="line">Max Heap</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">8 38 25 58 52 82 70 60</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 25 70</span><br><span class="line">8 25 82</span><br><span class="line">8 38 52</span><br><span class="line">8 38 58 60</span><br><span class="line">Min Heap</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-3"><a href="#Sample-Input-3" class="headerlink" title="Sample Input 3:"></a>Sample Input 3:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">10 28 15 12 34 9 8 56</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-3"><a href="#Sample-Output-3" class="headerlink" title="Sample Output 3:"></a>Sample Output 3:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 15 8</span><br><span class="line">10 15 9</span><br><span class="line">10 28 34</span><br><span class="line">10 28 12 56</span><br><span class="line">Not Heap</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">vector&lt;int&gt; v;</span><br><span class="line">int a[1001], n, isMin &#x3D; 1, isMax &#x3D; 1;</span><br><span class="line">void Dfs(int index) &#123;</span><br><span class="line">	if (index * 2 &gt; n &amp;&amp; index * 2 + 1 &gt; n) &#123;</span><br><span class="line">		if (index &lt;&#x3D; n) &#123;</span><br><span class="line">			for (int i &#x3D; 0; i &lt; v.size(); i++)</span><br><span class="line">				printf(&quot;%d%s&quot;, v[i], i !&#x3D; v.size() - 1 ? &quot; &quot; : &quot;\n&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		v.push_back(a[index * 2 + 1]);</span><br><span class="line">		Dfs(index * 2 + 1);</span><br><span class="line">		v.pop_back();</span><br><span class="line">		v.push_back(a[index * 2]);</span><br><span class="line">		Dfs(index * 2);</span><br><span class="line">		v.pop_back();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">	for (int i &#x3D; 1; i &lt;&#x3D; n; i++)</span><br><span class="line">		scanf(&quot;%d&quot;, &amp;a[i]);</span><br><span class="line">	v.push_back(a[1]);</span><br><span class="line">	Dfs(1);</span><br><span class="line">	for (int i &#x3D; 2; i &lt;&#x3D; n; i++) &#123;&#x2F;&#x2F;与子节点比较</span><br><span class="line">		if (a[i&#x2F;2] &gt; a[i]) isMin &#x3D; 0;</span><br><span class="line">		if (a[i&#x2F;2] &lt; a[i]) isMax &#x3D; 0;</span><br><span class="line">	&#125;</span><br><span class="line">	if (isMin &#x3D;&#x3D; 1)&#123;</span><br><span class="line">		printf(&quot;Min Heap&quot;);</span><br><span class="line">	&#125;else &#123;</span><br><span class="line">		printf(&quot;%s&quot;, isMax &#x3D;&#x3D; 1 ? &quot;Max Heap&quot; : &quot;Not Heap&quot;); </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出一个层次遍历的一组数据，判断其深度优先遍历后的排序情况</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1154 Vertex Coloring</title>
    <url>/2020/02/22/1154-Vertex-Coloring/</url>
    <content><![CDATA[<p>A <strong>proper vertex coloring</strong> is a labeling of the graph’s vertices with colors such that no two vertices sharing the same edge have the same color. A coloring using at most <em>k</em> colors is called a (proper) <strong><em>k\</em>-coloring</strong>.</p>
<p>Now you are supposed to tell if a given coloring is a proper <em>k</em>-coloring.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives two positive integers <em>N</em> and <em>M</em> (both no more than 104), being the total numbers of vertices and edges, respectively. Then <em>M</em> lines follow, each describes an edge by giving the indices (from 0 to <em>N</em>−1) of the two ends of the edge.</p>
<p>After the graph, a positive integer <em>K</em> (≤ 100) is given, which is the number of colorings you are supposed to check. Then <em>K</em>lines follow, each contains <em>N</em> colors which are represented by non-negative integers in the range of <strong>int</strong>. The <em>i</em>-th color is the color of the <em>i</em>-th vertex.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each coloring, print in a line <code>k-coloring</code> if it is a proper <code>k</code>-coloring for some positive <code>k</code>, or <code>No</code> if not.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 11</span><br><span class="line">8 7</span><br><span class="line">6 8</span><br><span class="line">4 5</span><br><span class="line">8 4</span><br><span class="line">8 1</span><br><span class="line">1 2</span><br><span class="line">1 4</span><br><span class="line">9 8</span><br><span class="line">9 1</span><br><span class="line">1 0</span><br><span class="line">2 4</span><br><span class="line">4</span><br><span class="line">0 1 0 1 4 1 0 1 3 0</span><br><span class="line">0 1 0 1 4 1 0 1 0 0</span><br><span class="line">8 1 0 1 4 1 0 5 3 0</span><br><span class="line">1 2 3 4 5 6 7 8 8 9</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4-coloring</span><br><span class="line">No</span><br><span class="line">6-coloring</span><br><span class="line">No</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> t1, t2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, m, k;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	<span class="function"><span class="built_in">vector</span>&lt;node&gt; <span class="title">v</span><span class="params">(m)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;v[i].t1, &amp;v[i].t2);</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">	<span class="keyword">while</span> (k--) &#123;</span><br><span class="line">		<span class="keyword">int</span> a[<span class="number">10009</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">		<span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">		<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; se;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">			se.insert(a[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[v[i].t1] == a[v[i].t2]) &#123;</span><br><span class="line">				flag = <span class="literal">false</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag) </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d-coloring\n"</span>, se.<span class="built_in">size</span>());</span><br><span class="line">		<span class="keyword">else</span> </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给出n条边及其对应的颜色，判断是否存在相同颜色的边，若有则输出no，没有则要表明存在几种颜色。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1045 Favorite Color Stripe</title>
    <url>/2020/02/15/1045-Favorite-Color-Stripe/</url>
    <content><![CDATA[<p>Eva is trying to make her own color stripe out of a given one. She would like to keep only her favorite colors in her favorite order by cutting off those unwanted pieces and sewing the remaining parts together to form her favorite color stripe.</p>
<p>It is said that a normal human eye can distinguish about less than 200 different colors, so Eva’s favorite colors are limited. However the original stripe could be very long, and Eva would like to have the remaining favorite stripe with the maximum length. So she needs your help to find her the best result.</p>
<p>Note that the solution might not be unique, but you only have to tell her the maximum length. For example, given a stripe of colors {2 2 4 1 5 5 6 3 1 1 5 6}. If Eva’s favorite colors are given in her favorite order as {2 3 1 5 6}, then she has 4 possible best solutions {2 2 1 1 1 5 6}, {2 2 1 5 5 5 6}, {2 2 1 5 5 6 6}, and {2 2 3 1 1 5 6}.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>N</em> (≤200) which is the total number of colors involved (and hence the colors are numbered from 1 to <em>N</em>). Then the next line starts with a positive integer <em>M</em>(≤200) followed by <em>M</em> Eva’s favorite color numbers given in her favorite order. Finally the third line starts with a positive integer <em>L</em> (≤104) which is the length of the given stripe, followed by <em>L</em> colors on the stripe. All the numbers in a line a separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, simply print in a line the maximum length of Eva’s favorite stripe.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">5 2 3 1 5 6</span><br><span class="line">12 2 2 4 1 5 5 6 3 1 1 5 6</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<p>最长不下降子序列（LIS）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxc = <span class="number">210</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10010</span>;</span><br><span class="line"><span class="keyword">int</span> HashTable[maxc];</span><br><span class="line"><span class="keyword">int</span> A[maxn], dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, m, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="built_in">fill</span>(HashTable, HashTable+maxc, <span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">		HashTable[x] = i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> L, num = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;L);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">		<span class="keyword">if</span>(HashTable[x] &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">			A[num++] = HashTable[x];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">		dp[i] = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(A[j] &lt;= A[i] &amp;&amp; dp[i] &lt; dp[j] + <span class="number">1</span>) &#123;</span><br><span class="line">				dp[i] = dp[j] + <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">max</span>(ans, dp[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最长公共子序列（LCS）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxc = <span class="number">210</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10010</span>;</span><br><span class="line"><span class="keyword">int</span> A[maxc], B[maxn], dp[maxc][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;A[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> L;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;L);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= L; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;B[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++) &#123;</span><br><span class="line">		dp[i][<span class="number">0</span>] = <span class="number">0</span>;<span class="comment">//边界</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= L; j++) &#123;</span><br><span class="line">		dp[<span class="number">0</span>][j] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= L; j++) &#123;</span><br><span class="line">			<span class="keyword">int</span> MAX = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i][j - <span class="number">1</span>]);</span><br><span class="line">			<span class="keyword">if</span>(A[i] == B[j]) &#123;</span><br><span class="line">				dp[i][j] = MAX + <span class="number">1</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				dp[i][j] = MAX;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m][L]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1044 Shopping in Mars</title>
    <url>/2020/02/13/1044-Shopping-in-Mars/</url>
    <content><![CDATA[<p>Shopping in Mars is quite a different experience. The Mars people pay by chained diamonds. Each diamond has a value (in Mars dollars M$). When making the payment, the chain can be cut at any position for only once and some of the diamonds are taken off the chain one by one. Once a diamond is off the chain, it cannot be taken back. For example, if we have a chain of 8 diamonds with values M$3, 2, 1, 5, 4, 6, 8, 7, and we must pay M$15. We may have 3 options:</p>
<ol>
<li>Cut the chain between 4 and 6, and take off the diamonds from the position 1 to 5 (with values 3+2+1+5+4=15).</li>
<li>Cut before 5 or after 6, and take off the diamonds from the position 4 to 6 (with values 5+4+6=15).</li>
<li>Cut before 8, and take off the diamonds from the position 7 to 8 (with values 8+7=15).</li>
</ol>
<p>Now given the chain of diamond values and the amount that a customer has to pay, you are supposed to list all the paying options for the customer.</p>
<p>If it is impossible to pay the exact amount, you must suggest solutions with minimum lost.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains 2 numbers: <em>N</em> (≤105), the total number of diamonds on the chain, and <em>M</em> (≤108), the amount that the customer has to pay. Then the next line contains <em>N</em> positive numbers <em>D</em>1⋯<em>D**N</em> (<em>D*<em>i</em>≤103 for all *i</em>=1,⋯,<em>N</em>) which are the values of the diamonds. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print <code>i-j</code> in a line for each pair of <code>i</code> ≤ <code>j</code> such that <em>D</em><code>i</code> + … + <em>D</em><code>j</code> = <em>M</em>. Note that if there are more than one solution, all the solutions must be printed in increasing order of <code>i</code>.</p>
<p>If there is no solution, output <code>i-j</code> for pairs of <code>i</code> ≤ <code>j</code> such that <em>D</em><code>i</code> + … + <em>D</em><code>j</code> &gt;<em>M</em> with (<em>D</em><code>i</code> + … + <em>D</em><code>j</code> −<em>M</em>) minimized. Again all the solutions must be printed in increasing order of <code>i</code>.</p>
<p>It is guaranteed that the total value of diamonds is sufficient to pay the given amount.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">16 15</span><br><span class="line">3 2 1 5 4 6 8 7 16 10 15 11 9 12 14 13</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1-5</span><br><span class="line">4-6</span><br><span class="line">7-8</span><br><span class="line">11-11</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 13</span><br><span class="line">2 4 5 7 9</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2-4</span><br><span class="line">4-5</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"><span class="keyword">int</span> n, S, nearS = <span class="number">100000010</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">upper_bound</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> left = L, right = R, mid;</span><br><span class="line">	<span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">		mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(sum[mid] &gt; x) &#123;</span><br><span class="line">			right = mid;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			left = mid + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;S);</span><br><span class="line">	sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;sum[i]);</span><br><span class="line">		sum[i] += sum[i - <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> j = upper_bound(i, n + <span class="number">1</span>, sum[i - <span class="number">1</span>] + S);</span><br><span class="line">		<span class="keyword">if</span>(sum[j - <span class="number">1</span>] - sum[i - <span class="number">1</span>] == S) &#123;</span><br><span class="line">			nearS = S;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(j &lt;= n &amp;&amp; sum[j] - sum[i - <span class="number">1</span>] &lt; nearS) &#123;</span><br><span class="line">			nearS = sum[j] - sum[i - <span class="number">1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> j = upper_bound(i, n + <span class="number">1</span>, sum[i - <span class="number">1</span>] + nearS);</span><br><span class="line">		<span class="keyword">if</span>(sum[j - <span class="number">1</span>] - sum[i - <span class="number">1</span>] == nearS) &#123;</span><br><span class="line">		   <span class="built_in">printf</span>(<span class="string">"%d-%d\n"</span>, i, j - <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1043 Is It a Binary Search Tree</title>
    <url>/2020/02/13/1043-Is-It-a-Binary-Search-Tree/</url>
    <content><![CDATA[<p>A Binary Search Tree (BST) is recursively defined as a binary tree which has the following properties:</p>
<ul>
<li>The left subtree of a node contains only nodes with keys less than the node’s key.</li>
<li>The right subtree of a node contains only nodes with keys greater than or equal to the node’s key.</li>
<li>Both the left and right subtrees must also be binary search trees.</li>
</ul>
<p>If we swap the left and right subtrees of every node, then the resulting tree is called the <strong>Mirror Image</strong> of a BST.</p>
<p>Now given a sequence of integer keys, you are supposed to tell if it is the preorder traversal sequence of a BST or the mirror image of a BST.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>N</em> (≤1000). Then <em>N</em> integer keys are given in the next line. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in a line <code>YES</code> if the sequence is the preorder traversal sequence of a BST or the mirror image of a BST, or <code>NO</code> if not. Then if the answer is <code>YES</code>, print in the next line the postorder traversal sequence of that tree. All the numbers in a line must be separated by a space, and there must be no extra space at the end of the line.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">8 6 5 7 10 8 11</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YES</span><br><span class="line">5 7 6 8 11 10 8</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">8 10 11 8 6 7 5</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YES</span><br><span class="line">11 8 10 7 5 6 8</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-3"><a href="#Sample-Input-3" class="headerlink" title="Sample Input 3:"></a>Sample Input 3:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">8 6 8 5 10 9 11</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-3"><a href="#Sample-Output-3" class="headerlink" title="Sample Output 3:"></a>Sample Output 3:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    node *left,*right;</span><br><span class="line">&#125;;</span><br><span class="line">void insert(node* &amp;root,int data)&#123;</span><br><span class="line">    if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">        root&#x3D;new node;</span><br><span class="line">        root-&gt;data&#x3D;data;</span><br><span class="line">        root-&gt;left&#x3D;root-&gt;right&#x3D;NULL;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if (data&lt;root-&gt;data) &#123;</span><br><span class="line">        insert(root-&gt;left, data);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        insert(root-&gt;right, data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void preorder(node* root,vector&lt;int&gt;&amp;vi)&#123;</span><br><span class="line">    if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    vi.push_back(root-&gt;data);</span><br><span class="line">    preorder(root-&gt;left, vi);</span><br><span class="line">    preorder(root-&gt;right, vi);</span><br><span class="line">&#125;</span><br><span class="line">void preordermin(node* root,vector&lt;int&gt;&amp;vi)&#123;</span><br><span class="line">    if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    vi.push_back(root-&gt;data);</span><br><span class="line">    preordermin(root-&gt;right, vi);</span><br><span class="line">    preordermin(root-&gt;left, vi);</span><br><span class="line">&#125;</span><br><span class="line">void postorder(node* root,vector&lt;int&gt;&amp;vi)&#123;</span><br><span class="line">    if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    postorder(root-&gt;left, vi);</span><br><span class="line">    postorder(root-&gt;right, vi);</span><br><span class="line">    vi.push_back(root-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">void postordermin(node* root,vector&lt;int&gt;&amp;vi)&#123;</span><br><span class="line">    if (root&#x3D;&#x3D;NULL) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    postordermin(root-&gt;right, vi);</span><br><span class="line">    postordermin(root-&gt;left, vi);</span><br><span class="line">    vi.push_back(root-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;int&gt;origin,pre,prem,post,postm;</span><br><span class="line">int main( )&#123;</span><br><span class="line">    int n,data;</span><br><span class="line">    node* root&#x3D;NULL;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">    for (int i&#x3D;0; i&lt;n; i++) &#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;data);</span><br><span class="line">        origin.push_back(data);</span><br><span class="line">        insert(root, data);</span><br><span class="line">    &#125;</span><br><span class="line">    preorder(root, pre);</span><br><span class="line">    preordermin(root, prem);</span><br><span class="line">    postorder(root, post);</span><br><span class="line">    postordermin(root, postm);</span><br><span class="line">    if (origin&#x3D;&#x3D;pre) &#123;</span><br><span class="line">        printf(&quot;YES\n&quot;);</span><br><span class="line">        for (int i&#x3D;0; i&lt;post.size(); i++) &#123;</span><br><span class="line">            printf(&quot;%d&quot;,post[i]);</span><br><span class="line">            if (i&lt;post.size()-1) &#123;</span><br><span class="line">                printf(&quot; &quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else if (origin&#x3D;&#x3D;prem)&#123;</span><br><span class="line">        printf(&quot;YES\n&quot;);</span><br><span class="line">        for (int i&#x3D;0; i&lt;postm.size(); i++) &#123;</span><br><span class="line">            printf(&quot;%d&quot;,postm[i]);</span><br><span class="line">            if (i&lt;postm.size()-1) &#123;</span><br><span class="line">                printf(&quot; &quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        printf(&quot;NO\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此题需要理解题意，判断是否为（镜像树）先序序列，是则输出后序序列。此题可借助递归来遍历树即可。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1034 Head of a Gang</title>
    <url>/2020/02/11/1034-Head-of-a-Gang/</url>
    <content><![CDATA[<p>One way that the police finds the head of a gang is to check people’s phone calls. If there is a phone call between <em>A</em> and <em>B</em>, we say that <em>A</em> and <em>B</em> is related. The weight of a relation is defined to be the total time length of all the phone calls made between the two persons. A “Gang” is a cluster of more than 2 persons who are related to each other with total relation weight being greater than a given threshold <em>K</em>. In each gang, the one with maximum total weight is the head. Now given a list of phone calls, you are supposed to find the gangs and the heads.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains two positive numbers <em>N</em> and <em>K</em> (both less than or equal to 1000), the number of phone calls and the weight threthold, respectively. Then <em>N</em> lines follow, each in the following format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Name1 Name2 Time</span><br></pre></td></tr></table></figure>

<p>where <code>Name1</code> and <code>Name2</code> are the names of people at the two ends of the call, and <code>Time</code> is the length of the call. A name is a string of three capital letters chosen from <code>A</code>-<code>Z</code>. A time length is a positive integer which is no more than 1000 minutes.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in a line the total number of gangs. Then for each gang, print in a line the name of the head and the total number of the members. It is guaranteed that the head is unique for each gang. The output must be sorted according to the alphabetical order of the names of the heads.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 59</span><br><span class="line">AAA BBB 10</span><br><span class="line">BBB AAA 20</span><br><span class="line">AAA CCC 40</span><br><span class="line">DDD EEE 5</span><br><span class="line">EEE DDD 70</span><br><span class="line">FFF GGG 30</span><br><span class="line">GGG HHH 20</span><br><span class="line">HHH FFF 10</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">AAA 3</span><br><span class="line">GGG 3</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 70</span><br><span class="line">AAA BBB 10</span><br><span class="line">BBB AAA 20</span><br><span class="line">AAA CCC 40</span><br><span class="line">DDD EEE 5</span><br><span class="line">EEE DDD 70</span><br><span class="line">FFF GGG 30</span><br><span class="line">GGG HHH 20</span><br><span class="line">HHH FFF 10</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; intToString;<span class="comment">//存放编号-&gt;姓名</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; stringToInt;<span class="comment">//存放姓名-&gt;编号</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; Gang;<span class="comment">//存放head的姓名（inttostring(head))-&gt;numMember</span></span><br><span class="line"><span class="keyword">int</span> G[maxn][maxn] = &#123;<span class="number">0</span>&#125;, weight[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, k, numPerson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> nowVisit, <span class="keyword">int</span>&amp; head, <span class="keyword">int</span>&amp; numMember, <span class="keyword">int</span>&amp; totalValue)</span> </span>&#123;</span><br><span class="line">	numMember++;</span><br><span class="line">	vis[nowVisit] = <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">if</span>(weight[nowVisit] &gt; weight[head]) &#123;</span><br><span class="line">		head = nowVisit;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numPerson; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(G[nowVisit][i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			totalValue += G[nowVisit][i];</span><br><span class="line">			G[nowVisit][i] = G[i][nowVisit] = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(vis[i] == <span class="literal">false</span>) &#123;</span><br><span class="line">				DFS(i, head, numMember, totalValue);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFSTrave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numPerson; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(vis[i] == <span class="literal">false</span>) &#123;</span><br><span class="line">			<span class="keyword">int</span> head = i, numMember = <span class="number">0</span>, totalValue = <span class="number">0</span>;</span><br><span class="line">			DFS(i, head, numMember, totalValue);</span><br><span class="line">			<span class="keyword">if</span>(numMember &gt; <span class="number">2</span> &amp;&amp; totalValue &gt; k) &#123;</span><br><span class="line">				Gang[intToString[head]] = numMember;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(stringToInt.<span class="built_in">find</span>(str) != stringToInt.<span class="built_in">end</span>()) &#123;</span><br><span class="line">		<span class="keyword">return</span> stringToInt[str];</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		stringToInt[str] = numPerson;</span><br><span class="line">		intToString[numPerson] = str;</span><br><span class="line">		<span class="keyword">return</span> numPerson++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> w;</span><br><span class="line">	<span class="built_in">string</span> str1, str2;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; str1 &gt;&gt; str2 &gt;&gt; w;</span><br><span class="line">		<span class="keyword">int</span> id1 = change(str1);</span><br><span class="line">		<span class="keyword">int</span> id2 = change(str2);</span><br><span class="line">		weight[id1] += w;</span><br><span class="line">		weight[id2] += w;</span><br><span class="line">		G[id1][id2] += w;</span><br><span class="line">		G[id2][id1] += w;</span><br><span class="line">	&#125;</span><br><span class="line">	DFSTrave();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; Gang.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">	<span class="keyword">for</span>(it = Gang.<span class="built_in">begin</span>(); it != Gang.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">" "</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断每一个连通块的节点的权重与边权，采用DFS对所有块遍历即可，将满足条件的head放入Gang中并输出对应的numMember。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>图</category>
      </categories>
  </entry>
  <entry>
    <title>1033 To Fill or Not to Fill</title>
    <url>/2020/02/11/1033-To-Fill-or-Not-to-Fill/</url>
    <content><![CDATA[<p>With highways available, driving a car from Hangzhou to any other city is easy. But since the tank capacity of a car is limited, we have to find gas stations on the way from time to time. Different gas station may give different price. You are asked to carefully design the cheapest route to go.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains 4 positive numbers: <em>C<strong>m</strong>a**x</em> (≤ 100), the maximum capacity of the tank; <em>D</em> (≤30000), the distance between Hangzhou and the destination city; <em>D<strong>a</strong>v**g</em> (≤20), the average distance per unit gas that the car can run; and <em>N</em> (≤ 500), the total number of gas stations. Then <em>N</em> lines follow, each contains a pair of non-negative numbers: <em>P**i</em>, the unit gas price, and <em>D**i</em> (≤<em>D</em>), the distance between this station and Hangzhou, for <em>i</em>=1,⋯,<em>N</em>. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print the cheapest price in a line, accurate up to 2 decimal places. It is assumed that the tank is empty at the beginning. If it is impossible to reach the destination, print <code>The maximum travel distance = X</code> where <code>X</code> is the maximum possible distance the car can run, accurate up to 2 decimal places.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">50 1300 12 8</span><br><span class="line">6.00 1250</span><br><span class="line">7.00 600</span><br><span class="line">7.00 150</span><br><span class="line">7.10 0</span><br><span class="line">7.20 200</span><br><span class="line">7.50 400</span><br><span class="line">7.30 1000</span><br><span class="line">6.85 300</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">749.17</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">50 1300 12 2</span><br><span class="line">7.10 0</span><br><span class="line">7.00 600</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The maximum travel distance &#x3D; 1200.00</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">510</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">station</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> price, dis;</span><br><span class="line">&#125;st[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(station a, station b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.dis &lt; b. dis;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">double</span> Cmax, D, Davg;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%d"</span>, &amp;Cmax, &amp;D, &amp;Davg, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;st[i].price, &amp;st[i].dis);</span><br><span class="line">    &#125;</span><br><span class="line">    st[n].price = <span class="number">0</span>;</span><br><span class="line">    st[n].dis = D;</span><br><span class="line">    sort(st, st + n, cmp);</span><br><span class="line">    <span class="keyword">if</span>(st[<span class="number">0</span>].dis != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The maximum travel distance = 0.00\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> ans = <span class="number">0</span>, nowTank = <span class="number">0</span>, MAX = Cmax * Davg;</span><br><span class="line">        <span class="keyword">while</span>(now &lt; n) &#123;</span><br><span class="line">            <span class="keyword">int</span> k = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">double</span> priceMin = INF;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = now + <span class="number">1</span>; i &lt;= n &amp;&amp; st[i].dis - st[now].dis &lt;= MAX; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(st[i].price &lt; priceMin) &#123;</span><br><span class="line">                    priceMin = st[i].price;</span><br><span class="line">                    k = i;</span><br><span class="line">                    <span class="keyword">if</span>(priceMin &lt; st[now].price) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(k == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">double</span> need = (st[k].dis - st[now].dis) / Davg;</span><br><span class="line">            <span class="keyword">if</span>(priceMin &lt; st[now].price) &#123;</span><br><span class="line">                <span class="keyword">if</span>(nowTank &lt; need) &#123;</span><br><span class="line">                    ans += (need - nowTank) * st[now].price;</span><br><span class="line">                    nowTank = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    nowTank -= need;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ans += (Cmax - nowTank) * st[now].price;</span><br><span class="line">                nowTank = Cmax - need;</span><br><span class="line">            &#125;</span><br><span class="line">            now = k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(now == n) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, ans);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The maximum travel distance = %.2f\n"</span>, st[now].dis + MAX);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本题是典型的贪心算法，需要考虑在当前加油站需要加多少油可以到达最近的价格低于当前的加油站，以及考虑加满油后汽车所能行驶的最大距离。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1030 Travel Plan</title>
    <url>/2020/02/10/1030-Travel-Plan/</url>
    <content><![CDATA[<p>A traveler’s map gives the distances between cities along the highways, together with the cost of each highway. Now you are supposed to write a program to help a traveler to decide the shortest path between his/her starting city and the destination. If such a shortest path is not unique, you are supposed to output the one with the minimum cost, which is guaranteed to be unique.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case starts with a line containing 4 positive integers <em>N</em>, <em>M</em>, <em>S</em>, and <em>D</em>, where <em>N</em> (≤500) is the number of cities (and hence the cities are numbered from 0 to <em>N</em>−1); <em>M</em> is the number of highways; <em>S</em> and <em>D</em>are the starting and the destination cities, respectively. Then <em>M</em> lines follow, each provides the information of a highway, in the format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">City1 City2 Distance Cost</span><br></pre></td></tr></table></figure>

<p>where the numbers are all integers no more than 500, and are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in one line the cities along the shortest path from the starting point to the destination, followed by the total distance and the total cost of the path. The numbers must be separated by a space and there must be no extra space at the end of output.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 5 0 3</span><br><span class="line">0 1 1 20</span><br><span class="line">1 3 2 30</span><br><span class="line">0 3 4 10</span><br><span class="line">0 2 2 20</span><br><span class="line">2 3 1 20</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 2 3 3 40</span><br></pre></td></tr></table></figure>

<h4 id="1-Dijkstra算法"><a href="#1-Dijkstra算法" class="headerlink" title="(1) Dijkstra算法"></a>(1) Dijkstra算法</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV = <span class="number">501</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, G[MAXV][MAXV], cost[MAXV][MAXV];</span><br><span class="line"><span class="keyword">int</span> d[MAXV], c[MAXV], pre[MAXV];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXV] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">fill</span>(d, d + MAXV, INF);</span><br><span class="line">	<span class="built_in">fill</span>(c, c + MAXV, INF);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) pre[i] = i;</span><br><span class="line">	d[s] = <span class="number">0</span>;</span><br><span class="line">	c[s] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> u = <span class="number">-1</span>, MIN = INF;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(vis[j] == <span class="literal">false</span> &amp;&amp; d[j] &lt; MIN) &#123;</span><br><span class="line">				u = j;</span><br><span class="line">				MIN = d[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(u == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">		vis[u] = <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v &lt; n; v++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(vis[v] == <span class="literal">false</span> &amp;&amp; G[u][v] != INF) &#123;</span><br><span class="line">				<span class="keyword">if</span>(d[u] + G[u][v] &lt; d[v]) &#123;</span><br><span class="line">					d[v] = d[u] + G[u][v];</span><br><span class="line">					c[v] = c[u] + cost[u][v];</span><br><span class="line">					pre[v] = u;</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(d[u] + G[u][v] == d[v]) &#123;</span><br><span class="line">					<span class="keyword">if</span>(c[u] + cost[u][v] &lt; c[v]) &#123;</span><br><span class="line">						c[v] = c[u] + cost[u][v];</span><br><span class="line">						pre[v] = u;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(v == st) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, v);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	DFS(pre[v]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d "</span>, v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;st, &amp;ed);</span><br><span class="line">	<span class="keyword">int</span> u, v;</span><br><span class="line">	<span class="built_in">fill</span>(G[<span class="number">0</span>], G[<span class="number">0</span>] + MAXV * MAXV, INF);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;G[u][v], &amp;cost[u][v]);</span><br><span class="line">		G[v][u] = G[u][v];</span><br><span class="line">		cost[v][u] = cost[u][v];</span><br><span class="line">	&#125;</span><br><span class="line">	Dijkstra(st);</span><br><span class="line">	DFS(ed);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, d[ed], c[ed]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-Dijkstra-DFS"><a href="#2-Dijkstra-DFS" class="headerlink" title="(2) Dijkstra+DFS"></a>(2) Dijkstra+DFS</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV = <span class="number">510</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, G[MAXV][MAXV], cost[MAXV][MAXV];</span><br><span class="line"><span class="keyword">int</span> d[MAXV], minCost = INF;</span><br><span class="line"><span class="keyword">bool</span> vis[MAXV] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pre[MAXV];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tempPath, path;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">fill</span>(d, d + MAXV, INF);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		pre[i].push_back(i);</span><br><span class="line">	&#125;</span><br><span class="line">	d[s] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> u = <span class="number">-1</span>, MIN = INF;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(vis[j] == <span class="literal">false</span> &amp;&amp; d[j] &lt; MIN) &#123;</span><br><span class="line">				u = j;</span><br><span class="line">				MIN = d[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(u == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">		vis[u] = <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v &lt; n; v++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(vis[v] == <span class="literal">false</span> &amp;&amp; G[u][v] != INF) &#123;</span><br><span class="line">				<span class="keyword">if</span>(d[u] + G[u][v] &lt; d[v]) &#123;</span><br><span class="line">					d[v] = d[u] + G[u][v];</span><br><span class="line">					pre[v].<span class="built_in">clear</span>();</span><br><span class="line">					pre[v].push_back(u);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(d[u] + G[u][v] == d[v]) &#123;</span><br><span class="line">					pre[v].push_back(u);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(v == st) &#123;</span><br><span class="line">		tempPath.push_back(v);</span><br><span class="line">		<span class="keyword">int</span> tempCost = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = tempPath.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">			<span class="keyword">int</span> id = tempPath[i], idNext = tempPath[i - <span class="number">1</span>];</span><br><span class="line">			tempCost += cost[id][idNext];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(tempCost &lt; minCost) &#123;</span><br><span class="line">			minCost = tempCost;</span><br><span class="line">			path = tempPath;</span><br><span class="line">		&#125;</span><br><span class="line">		tempPath.pop_back();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	tempPath.push_back(v);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre[v].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">		DFS(pre[v][i]);</span><br><span class="line">	&#125;</span><br><span class="line">	tempPath.pop_back();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;st, &amp;ed);</span><br><span class="line">	<span class="keyword">int</span> u, v;</span><br><span class="line">	<span class="built_in">fill</span>(G[<span class="number">0</span>], G[<span class="number">0</span>] + MAXV * MAXV, INF);</span><br><span class="line">	<span class="built_in">fill</span>(cost[<span class="number">0</span>], cost[<span class="number">0</span>] + MAXV * MAXV, INF);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;G[u][v], &amp;cost[u][v]);</span><br><span class="line">		G[v][u] = G[u][v];</span><br><span class="line">		cost[v][u] = cost[u][v];</span><br><span class="line">	&#125;</span><br><span class="line">	Dijkstra(st);</span><br><span class="line">	DFS(ed);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = path.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, path[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, d[ed], minCost);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>两种解法，总的来说前者较为简单只需要在选择路径最短的同时考虑耗时的问题，而后者在使用dijkstra算法来获取最短路径，再使用dfs来比较出耗费最小的一条。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1026 Table Tennis</title>
    <url>/2020/02/09/1026-Table-Tennis/</url>
    <content><![CDATA[<p>A table tennis club has N tables available to the public. The tables are numbered from 1 to N. For any pair of players, if there are some tables open when they arrive, they will be assigned to the available table with the smallest number. If all the tables are occupied, they will have to wait in a queue. It is assumed that every pair of players can play for at most 2 hours.</p>
<p>Your job is to count for everyone in queue their waiting time, and for each table the number of players it has served for the day.</p>
<p>One thing that makes this procedure a bit complicated is that the club reserves some tables for their VIP members. When a VIP table is open, the first VIP pair in the queue will have the priviledge to take it. However, if there is no VIP in the queue, the next pair of players can take it. On the other hand, if when it is the turn of a VIP pair, yet no VIP table is available, they can be assigned as any ordinary players.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains an integer <code>N</code> (≤10000) - the total number of pairs of players. Then <code>N</code> lines follow, each contains 2 times and a VIP tag: <code>HH:MM:SS</code> - the arriving time, <code>P</code> - the playing time in minutes of a pair of players, and <code>tag</code> - which is 1 if they hold a VIP card, or 0 if not. It is guaranteed that the arriving time is between 08:00:00 and 21:00:00 while the club is open. It is assumed that no two customers arrives at the same time. Following the players’ info, there are 2 positive integers: <code>K</code> (≤100) - the number of tables, and <code>M</code> (&lt; K) - the number of VIP tables. The last line contains <code>M</code> table numbers.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print the arriving time, serving time and the waiting time for each pair of players in the format shown by the sample. Then print in a line the number of players served by each table. Notice that the output must be listed in chronological order of the serving time. The waiting time must be rounded up to an integer minute(s). If one cannot get a table before the closing time, their information must NOT be printed.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">20:52:00 10 0</span><br><span class="line">08:00:00 20 0</span><br><span class="line">08:02:00 30 0</span><br><span class="line">20:51:00 10 0</span><br><span class="line">08:10:00 5 0</span><br><span class="line">08:12:00 10 1</span><br><span class="line">20:50:00 10 0</span><br><span class="line">08:01:30 15 1</span><br><span class="line">20:53:00 10 1</span><br><span class="line">3 1</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">08:00:00 08:00:00 0</span><br><span class="line">08:01:30 08:01:30 0</span><br><span class="line">08:02:00 08:02:00 0</span><br><span class="line">08:12:00 08:16:30 5</span><br><span class="line">08:10:00 08:20:00 10</span><br><span class="line">20:50:00 20:50:00 0</span><br><span class="line">20:51:00 20:51:00 0</span><br><span class="line">20:52:00 20:52:00 0</span><br><span class="line">3 3 2</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> K = <span class="number">111</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Player</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> arriveTime, startTime, trainTime;</span><br><span class="line">	<span class="keyword">bool</span> isVIP;</span><br><span class="line">&#125; newPlayer;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Table</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> endTime, numServe;</span><br><span class="line">	<span class="keyword">bool</span> isVIP;</span><br><span class="line">&#125; table[K];</span><br><span class="line"><span class="built_in">vector</span>&lt;Player&gt; player;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">convertTime</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> m, <span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> h * <span class="number">3600</span> + m * <span class="number">60</span> + s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpArriveTime</span><span class="params">(Player a, Player b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.arriveTime &lt; b.arriveTime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpStartTime</span><span class="params">(Player a, Player b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.startTime &lt; b.startTime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nextVIPPlayer</span><span class="params">(<span class="keyword">int</span> VIPi)</span> </span>&#123;</span><br><span class="line">	VIPi++;</span><br><span class="line">	<span class="keyword">while</span>(VIPi &lt; player.<span class="built_in">size</span>() &amp;&amp; player[VIPi].isVIP == <span class="number">0</span>) &#123;</span><br><span class="line">		VIPi++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> VIPi;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">allotTable</span><span class="params">(<span class="keyword">int</span> pID, <span class="keyword">int</span> tID)</span> </span>&#123;<span class="comment">//将tID桌分配给pID球员</span></span><br><span class="line">	<span class="keyword">if</span>(player[pID].arriveTime &lt;= table[tID].endTime) &#123;</span><br><span class="line">		player[pID].startTime = table[tID].endTime;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		player[pID].startTime = player[pID].arriveTime;</span><br><span class="line">	&#125;</span><br><span class="line">	table[tID].endTime = player[pID].startTime + player[pID].trainTime;</span><br><span class="line">	table[tID].numServe++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, k, m, VIPtable;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	<span class="keyword">int</span> stTime = convertTime(<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">int</span> edTime = convertTime(<span class="number">21</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> h, m, s, trainTime, isVIP;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d:%d:%d %d %d"</span>, &amp;h, &amp;m, &amp;s, &amp;trainTime, &amp;isVIP);</span><br><span class="line">		newPlayer.arriveTime = convertTime(h, m, s);</span><br><span class="line">		newPlayer.startTime = edTime;</span><br><span class="line">		<span class="keyword">if</span>(newPlayer.arriveTime &gt;= edTime) <span class="keyword">continue</span>;</span><br><span class="line">		newPlayer.trainTime = trainTime &lt;= <span class="number">120</span> ? trainTime * <span class="number">60</span> : <span class="number">7200</span>;</span><br><span class="line">		newPlayer.isVIP = isVIP;</span><br><span class="line">		player.push_back(newPlayer);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;k, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">		table[i].endTime = stTime;</span><br><span class="line">		table[i].numServe = table[i].isVIP = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;VIPtable);</span><br><span class="line">		table[VIPtable].isVIP = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(player.<span class="built_in">begin</span>(), player.<span class="built_in">end</span>(), cmpArriveTime);</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>, VIPi = <span class="number">-1</span>;</span><br><span class="line">	VIPi = nextVIPPlayer(VIPi);</span><br><span class="line">	<span class="keyword">while</span>(i &lt; player.<span class="built_in">size</span>()) &#123;<span class="comment">//分四种情况，球员是(否)为vip与球桌是(否)为vip</span></span><br><span class="line">		<span class="keyword">int</span> idx = <span class="number">-1</span>, minEndTime = INF;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(table[j].endTime &lt; minEndTime) &#123;</span><br><span class="line">				minEndTime = table[j].endTime;</span><br><span class="line">				idx = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(table[idx].endTime &gt;= edTime) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">if</span>(player[i].isVIP == <span class="number">1</span> &amp;&amp; i &lt; VIPi) &#123;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(table[idx].isVIP == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span>(player[i].isVIP == <span class="number">1</span>) &#123;</span><br><span class="line">				allotTable(i, idx);</span><br><span class="line">				<span class="keyword">if</span>(VIPi == i) VIPi = nextVIPPlayer(VIPi);</span><br><span class="line">				i++;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">if</span>(VIPi &lt; player.<span class="built_in">size</span>() &amp;&amp; player[VIPi].arriveTime &lt;= table[idx].endTime) &#123;</span><br><span class="line">					allotTable(VIPi, idx);</span><br><span class="line">					VIPi = nextVIPPlayer(VIPi);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					allotTable(i, idx);</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span>(player[i].isVIP == <span class="number">0</span>) &#123;</span><br><span class="line">				allotTable(i, idx);</span><br><span class="line">				i++;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">int</span> VIPidx = <span class="number">-1</span>, minVIPEndTime = INF;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</span><br><span class="line">					<span class="keyword">if</span>(table[j].isVIP == <span class="number">1</span> &amp;&amp; table[j].endTime &lt; minVIPEndTime) &#123;</span><br><span class="line">						minVIPEndTime = table[j].endTime;</span><br><span class="line">						VIPidx = j;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(VIPidx != <span class="number">-1</span> &amp;&amp; player[i].arriveTime &gt;= table[VIPidx].endTime) &#123;</span><br><span class="line">					allotTable(i, VIPidx);</span><br><span class="line">					<span class="keyword">if</span>(VIPi == i) VIPi = nextVIPPlayer(VIPi);</span><br><span class="line">					i++;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					allotTable(i, idx);</span><br><span class="line">					<span class="keyword">if</span>(VIPi == i) VIPi = nextVIPPlayer(VIPi);</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(player.<span class="built_in">begin</span>(), player.<span class="built_in">end</span>(), cmpStartTime);</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; player.<span class="built_in">size</span>() &amp;&amp; player[i].startTime &lt; edTime; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> t1 = player[i].arriveTime;</span><br><span class="line">		<span class="keyword">int</span> t2 = player[i].startTime;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d "</span>, t1 / <span class="number">3600</span>, t1 % <span class="number">3600</span> / <span class="number">60</span>, t1 % <span class="number">60</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d "</span>, t2 / <span class="number">3600</span>, t2 % <span class="number">3600</span> / <span class="number">60</span>, t2 % <span class="number">60</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.0f\n"</span>, round((t2 - t1) / <span class="number">60.0</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>, table[i].numServe);</span><br><span class="line">		<span class="keyword">if</span>(i &lt; k) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1023 Have Fun with Numbers</title>
    <url>/2020/02/09/1023-Have-Fun-with-Numbers/</url>
    <content><![CDATA[<p>Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication. Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation. Check to see the result if we double it again!</p>
<p>Now you are suppose to check if there are more numbers with this property. That is, double a given number with <em>k</em> digits, you are to tell if the resulting number consists of only a permutation of the digits in the original number.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input contains one test case. Each case contains one positive integer with no more than 20 digits.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in a line “Yes” if doubling the input number gives a number that consists of only a permutation of the digits in the original number, or “No” if not. Then in the next line, print the doubled number.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1234567899</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">2469135798</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bign</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> d[<span class="number">21</span>];</span><br><span class="line">	<span class="keyword">int</span> len;</span><br><span class="line">	bign() &#123;</span><br><span class="line">		<span class="built_in">memset</span>(d, <span class="number">0</span>, <span class="keyword">sizeof</span>(d));</span><br><span class="line">		len = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">bign <span class="title">change</span><span class="params">(<span class="keyword">char</span> str[])</span> </span>&#123;<span class="comment">//转化bign型</span></span><br><span class="line">	bign a;</span><br><span class="line">	a.len = <span class="built_in">strlen</span>(str);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len; i++) &#123;</span><br><span class="line">		a.d[i] = str[a.len - i - <span class="number">1</span>] - <span class="string">'0'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">bign <span class="title">multi</span><span class="params">(bign a, <span class="keyword">int</span> b)</span> </span>&#123;<span class="comment">//乘法</span></span><br><span class="line">	bign c;</span><br><span class="line">	<span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> temp = a.d[i] * b + carry;</span><br><span class="line">		c.d[c.len++] = temp % <span class="number">10</span>;</span><br><span class="line">		carry = temp / <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(carry != <span class="number">0</span>) &#123;</span><br><span class="line">		c.d[c.len++] = carry % <span class="number">10</span>;</span><br><span class="line">		carry /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Judge</span><span class="params">(bign a, bign b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a.len != b.len) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">int</span> count[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len; i++) &#123;</span><br><span class="line">		count[a.d[i]]++;</span><br><span class="line">		count[b.d[i]]--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(count[i] != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(bign a)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = a.len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>, a.d[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> str[<span class="number">21</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">	bign a = change(str);</span><br><span class="line">	bign mul = multi(a, <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">if</span>(Judge(a, mul) == <span class="literal">true</span>) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">	<span class="built_in">print</span>(mul);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1022 Digital Library</title>
    <url>/2020/02/05/1022-Digital-Library/</url>
    <content><![CDATA[<p>A Digital Library contains millions of books, stored according to their titles, authors, key words of their abstracts, publishers, and published years. Each book is assigned an unique 7-digit number as its ID. Given any query from a reader, you are supposed to output the resulting books, sorted in increasing order of their ID’s.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>N</em> (≤104) which is the total number of books. Then <em>N</em> blocks follow, each contains the information of a book in 6 lines:</p>
<ul>
<li>Line #1: the 7-digit ID number;</li>
<li>Line #2: the book title – a string of no more than 80 characters;</li>
<li>Line #3: the author – a string of no more than 80 characters;</li>
<li>Line #4: the key words – each word is a string of no more than 10 characters without any white space, and the keywords are separated by exactly one space;</li>
<li>Line #5: the publisher – a string of no more than 80 characters;</li>
<li>Line #6: the published year – a 4-digit number which is in the range [1000, 3000].</li>
</ul>
<p>It is assumed that each book belongs to one author only, and contains no more than 5 key words; there are no more than 1000 distinct key words in total; and there are no more than 1000 distinct publishers.</p>
<p>After the book information, there is a line containing a positive integer <em>M</em> (≤1000) which is the number of user’s search queries. Then <em>M</em> lines follow, each in one of the formats shown below:</p>
<ul>
<li>1: a book title</li>
<li>2: name of an author</li>
<li>3: a key word</li>
<li>4: name of a publisher</li>
<li>5: a 4-digit number representing the year</li>
</ul>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each query, first print the original query in a line, then output the resulting book ID’s in increasing order, each occupying a line. If no book is found, print <code>Not Found</code> instead.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1111111</span><br><span class="line">The Testing Book</span><br><span class="line">Yue Chen</span><br><span class="line">test code debug sort keywords</span><br><span class="line">ZUCS Print</span><br><span class="line">2011</span><br><span class="line">3333333</span><br><span class="line">Another Testing Book</span><br><span class="line">Yue Chen</span><br><span class="line">test code sort keywords</span><br><span class="line">ZUCS Print2</span><br><span class="line">2012</span><br><span class="line">2222222</span><br><span class="line">The Testing Book</span><br><span class="line">CYLL</span><br><span class="line">keywords debug book</span><br><span class="line">ZUCS Print2</span><br><span class="line">2011</span><br><span class="line">6</span><br><span class="line">1: The Testing Book</span><br><span class="line">2: Yue Chen</span><br><span class="line">3: keywords</span><br><span class="line">4: ZUCS Print</span><br><span class="line">5: 2011</span><br><span class="line">3: blablabla</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1: The Testing Book</span><br><span class="line">1111111</span><br><span class="line">2222222</span><br><span class="line">2: Yue Chen</span><br><span class="line">1111111</span><br><span class="line">3333333</span><br><span class="line">3: keywords</span><br><span class="line">1111111</span><br><span class="line">2222222</span><br><span class="line">3333333</span><br><span class="line">4: ZUCS Print</span><br><span class="line">1111111</span><br><span class="line">5: 2011</span><br><span class="line">1111111</span><br><span class="line">2222222</span><br><span class="line">3: blablabla</span><br><span class="line">Not Found</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; &gt; mpTitle, mpAuthor, mpKey, mpPub, mpYear;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; &gt;&amp; mp, <span class="built_in">string</span>&amp; str)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(mp.<span class="built_in">find</span>(str) == mp.<span class="built_in">end</span>()) <span class="built_in">printf</span>(<span class="string">"Not Found\n"</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it = mp[str].<span class="built_in">begin</span>(); it != mp[str].<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%07d\n"</span>, *it);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, m, id, type;</span><br><span class="line">	<span class="built_in">string</span> title, author, key, pub, year;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id);</span><br><span class="line">		<span class="keyword">char</span> c = getchar();</span><br><span class="line">		getline(<span class="built_in">cin</span>, title);</span><br><span class="line">		mpTitle[title].insert(id);</span><br><span class="line">		getline(<span class="built_in">cin</span>, author);</span><br><span class="line">		mpAuthor[author].insert(id);</span><br><span class="line">		<span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; key) &#123;</span><br><span class="line">			mpKey[key].insert(id);</span><br><span class="line">			c = getchar();</span><br><span class="line">			<span class="keyword">if</span>(c == <span class="string">'\n'</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		getline(<span class="built_in">cin</span>, pub);</span><br><span class="line">		mpPub[pub].insert(id);</span><br><span class="line">		getline(<span class="built_in">cin</span>, year);</span><br><span class="line">		mpYear[year].insert(id);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">string</span> temp;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d: "</span>, &amp;type);</span><br><span class="line">		getline(<span class="built_in">cin</span>, temp);</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; type &lt;&lt; <span class="string">": "</span> &lt;&lt; temp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">if</span>(type == <span class="number">1</span>) query(mpTitle, temp);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(type == <span class="number">2</span>) query(mpAuthor, temp);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(type == <span class="number">3</span>) query(mpKey, temp);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(type == <span class="number">4</span>) query(mpPub, temp);</span><br><span class="line">		<span class="keyword">else</span> query(mpYear, temp);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本题还是采用map与set嵌套使用的方式来录入一定的数据，然后通过要查询的类型数据来输出相应的id</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1021 Deepest Root</title>
    <url>/2020/02/04/1021-Deepest-Root/</url>
    <content><![CDATA[<p>A graph which is connected and acyclic can be considered a tree. The height of the tree depends on the selected root. Now you are supposed to find the root that results in a highest tree. Such a root is called <strong>the deepest root</strong>.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>N</em> (≤104) which is the number of nodes, and hence the nodes are numbered from 1 to <em>N</em>. Then <em>N</em>−1 lines follow, each describes an edge by given the two adjacent nodes’ numbers.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print each of the deepest roots in a line. If such a root is not unique, print them in increasing order of their numbers. In case that the given graph is not a tree, print <code>Error: K components</code> where <code>K</code> is the number of connected components in the graph.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br><span class="line">2 5</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br><span class="line">2 5</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: 2 components</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp, Ans;</span><br><span class="line"><span class="keyword">bool</span> isRoot[N];</span><br><span class="line"><span class="keyword">int</span> father[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findFather</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="comment">//找x根节点</span></span><br><span class="line">	<span class="keyword">int</span> a = x;</span><br><span class="line">	<span class="keyword">while</span>(x != father[x]) &#123;</span><br><span class="line">		x = father[x];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;<span class="comment">//合并a,b</span></span><br><span class="line">	<span class="keyword">int</span> faA = findFather(a);</span><br><span class="line">	<span class="keyword">int</span> faB = findFather(b);</span><br><span class="line">	<span class="keyword">if</span>(faA != faB) &#123;</span><br><span class="line">		father[faA] = faB;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;<span class="comment">//初始化</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">	    father[i] = i;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calBlock</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;<span class="comment">//计算连通块</span></span><br><span class="line">	<span class="keyword">int</span> Block = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		isRoot[findFather(i)] = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		Block += isRoot[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> Block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> maxH = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> Height, <span class="keyword">int</span> pre)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(Height &gt; maxH) &#123;</span><br><span class="line">		temp.<span class="built_in">clear</span>();</span><br><span class="line">		temp.push_back(u);</span><br><span class="line">		maxH = Height;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span>(Height == maxH) &#123;</span><br><span class="line">		temp.push_back(u);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[u].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(G[u][i] == pre) <span class="keyword">continue</span>;</span><br><span class="line">		DFS(G[u][i], Height + <span class="number">1</span>, u);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a, b, n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	init(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line">		G[a].push_back(b);</span><br><span class="line">		G[b].push_back(a);</span><br><span class="line">		Union(a, b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> Block = calBlock(n);</span><br><span class="line">	<span class="keyword">if</span>(Block != <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Error: %d components\n"</span>, Block);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		DFS(<span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">		Ans = temp;</span><br><span class="line">		DFS(Ans[<span class="number">0</span>], <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">			Ans.push_back(temp[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		sort(Ans.<span class="built_in">begin</span>(), Ans.<span class="built_in">end</span>());</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Ans[<span class="number">0</span>]);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Ans.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(Ans[i] != Ans[i - <span class="number">1</span>]) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Ans[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断是否形成树，并且求最大树高的根节点。采用并查集的方法，将节点连接通过连通块个数来判断，然后DFS遍历出最深的根节点。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>图</category>
      </categories>
  </entry>
  <entry>
    <title>1020 Tree Traversals</title>
    <url>/2020/02/04/1020-Tree-Traversals/</url>
    <content><![CDATA[<p>Suppose that all the keys in a binary tree are distinct positive integers. Given the postorder and inorder traversal sequences, you are supposed to output the level order traversal sequence of the corresponding binary tree.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line gives a positive integer <em>N</em> (≤30), the total number of nodes in the binary tree. The second line gives the postorder sequence and the third line gives the inorder sequence. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in one line the level order traversal sequence of the corresponding binary tree. All the numbers in a line must be separated by exactly one space, and there must be no extra space at the end of the line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">2 3 1 5 7 6 4</span><br><span class="line">1 2 3 4 5 6 7</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 1 6 3 5 7 2</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">50</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    node *lchild;</span><br><span class="line">    node *rchild;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> pre[maxn],in[maxn],post[maxn],n;</span><br><span class="line"><span class="function">node *<span class="title">creat</span><span class="params">(<span class="keyword">int</span> postl,<span class="keyword">int</span> postr,<span class="keyword">int</span> inl,<span class="keyword">int</span> inr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (postl&gt;postr) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    node * root=<span class="keyword">new</span> node;</span><br><span class="line">    root-&gt;data=post[postr];</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (k=inl; k&lt;=inr; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (in[k]==post[postr]) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> numleft=k-inl;</span><br><span class="line">    root-&gt;lchild=creat(postl, postl+numleft<span class="number">-1</span>, inl, k<span class="number">-1</span>);</span><br><span class="line">    root-&gt;rchild=creat(postl+numleft, postr<span class="number">-1</span>, k+<span class="number">1</span>, inr);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(node *root)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;node*&gt;q;</span><br><span class="line">    q.push(root);</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        node* now=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,now-&gt;data);</span><br><span class="line">        num++;</span><br><span class="line">        <span class="keyword">if</span> (num&lt;n) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span> (now-&gt;lchild!=<span class="literal">NULL</span>) &#123;</span><br><span class="line">                q.push(now-&gt;lchild);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (now-&gt;rchild!=<span class="literal">NULL</span>) &#123;</span><br><span class="line">                q.push(now-&gt;rchild);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;post[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;in[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    node *root=creat(<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    BFS(root);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>只要抓住后序序列的最后元素（根节点）与中序序列对应的元素即为中序序列的根节点，随后使用递归来遍历出左右子树的值，题意要求输出层次则使用DFS。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>树</category>
      </categories>
  </entry>
  <entry>
    <title>1018 Public Bike Management</title>
    <url>/2020/02/03/1018-Public-Bike-Management/</url>
    <content><![CDATA[<p>There is a public bike service in Hangzhou City which provides great convenience to the tourists from all over the world. One may rent a bike at any station and return it to any other stations in the city.</p>
<p>The Public Bike Management Center (PBMC) keeps monitoring the real-time capacity of all the stations. A station is said to be in <strong>perfect</strong> condition if it is exactly half-full. If a station is full or empty, PBMC will collect or send bikes to adjust the condition of that station to perfect. And more, all the stations on the way will be adjusted as well.</p>
<p>When a problem station is reported, PBMC will always choose the shortest path to reach that station. If there are more than one shortest path, the one that requires the least number of bikes sent from PBMC will be chosen.</p>
<p><img src="https://images.ptausercontent.com/213" alt="img"></p>
<p>The above figure illustrates an example. The stations are represented by vertices and the roads correspond to the edges. The number on an edge is the time taken to reach one end station from another. The number written inside a vertex <em>S</em> is the current number of bikes stored at <em>S</em>. Given that the maximum capacity of each station is 10. To solve the problem at <em>S</em>3, we have 2 different shortest paths:</p>
<ol>
<li>PBMC -&gt; <em>S</em>1 -&gt; <em>S</em>3. In this case, 4 bikes must be sent from PBMC, because we can collect 1 bike from <em>S</em>1 and then take 5 bikes to <em>S</em>3, so that both stations will be in perfect conditions.</li>
<li>PBMC -&gt; <em>S</em>2 -&gt; <em>S</em>3. This path requires the same time as path 1, but only 3 bikes sent from PBMC and hence is the one that will be chosen.</li>
</ol>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains 4 numbers: <em>C<strong>m</strong>a**x</em> (≤100), always an even number, is the maximum capacity of each station; <em>N</em> (≤500), the total number of stations; <em>S**p</em>, the index of the problem station (the stations are numbered from 1 to <em>N</em>, and PBMC is represented by the vertex 0); and <em>M</em>, the number of roads. The second line contains <em>N</em> non-negative numbers <em>C**i</em> (<em>i</em>=1,⋯,<em>N</em>) where each <em>C**i</em> is the current number of bikes at <em>S*<em>i</em>respectively. Then *M</em> lines follow, each contains 3 numbers: <em>S**i</em>, <em>S**j</em>, and <em>T<strong>i</strong>j</em> which describe the time <em>T<strong>i</strong>j</em> taken to move betwen stations <em>S**i</em> and <em>S**j</em>. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print your results in one line. First output the number of bikes that PBMC must send. Then after one space, output the path in the format: 0−&gt;<em>S</em>1−&gt;⋯−&gt;<em>S**p</em>. Finally after another space, output the number of bikes that we must take back to PBMC after the condition of <em>S**p</em> is adjusted to perfect.</p>
<p>Note that if such a path is not unique, output the one that requires minimum number of bikes that we must take back to PBMC. The judge’s data guarantee that such a path is unique.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 3 3 5</span><br><span class="line">6 7 0</span><br><span class="line">0 1 1</span><br><span class="line">0 2 1</span><br><span class="line">0 3 3</span><br><span class="line">1 3 1</span><br><span class="line">2 3 1</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 0-&gt;2-&gt;3 0</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV = <span class="number">510</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, Cmax, Sp, numPath = <span class="number">0</span>, G[MAXV][MAXV], weight[MAXV];</span><br><span class="line"><span class="keyword">int</span> d[MAXV], minNeed = INF, minRemain = INF;</span><br><span class="line"><span class="keyword">bool</span> vis[MAXV] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pre[MAXV];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tempPath, path;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">fill</span>(d, d + MAXV, INF);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		pre[i].push_back(i);</span><br><span class="line">	&#125;</span><br><span class="line">	d[s] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> u = <span class="number">-1</span>, MIN = INF;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(vis[j] == <span class="literal">false</span> &amp;&amp; d[j] &lt; MIN) &#123;</span><br><span class="line">				u = j;</span><br><span class="line">				MIN = d[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(u == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">		vis[u] = <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v &lt;= n; v++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(vis[v] == <span class="literal">false</span> &amp;&amp; G[u][v] != INF) &#123;</span><br><span class="line">				<span class="keyword">if</span>(d[u] + G[u][v] &lt; d[v]) &#123;</span><br><span class="line">					d[v] = d[u] + G[u][v];</span><br><span class="line">					pre[v].<span class="built_in">clear</span>();</span><br><span class="line">					pre[v].push_back(u);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(d[u] + G[u][v] == d[v]) &#123;</span><br><span class="line">					pre[v].push_back(u);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(v == <span class="number">0</span>) &#123;</span><br><span class="line">		tempPath.push_back(v);</span><br><span class="line">		<span class="keyword">int</span> need = <span class="number">0</span>, remain = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = tempPath.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">			<span class="keyword">int</span> id = tempPath[i];</span><br><span class="line">			<span class="keyword">if</span>(weight[id] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				remain += weight[id];</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">if</span>(remain &gt; <span class="built_in">abs</span>(weight[id])) &#123;</span><br><span class="line">					remain -= <span class="built_in">abs</span>(weight[id]);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					need += <span class="built_in">abs</span>(weight[id]) - remain;</span><br><span class="line">					remain = <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(need &lt; minNeed) &#123;</span><br><span class="line">			minNeed = need;</span><br><span class="line">			minRemain = remain;</span><br><span class="line">			path = tempPath;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(need == minNeed &amp;&amp; remain &lt; minRemain) &#123;</span><br><span class="line">			minRemain = remain;</span><br><span class="line">			path = tempPath;</span><br><span class="line">		&#125;</span><br><span class="line">		tempPath.pop_back();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	tempPath.push_back(v);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre[v].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">		DFS(pre[v][i]);</span><br><span class="line">	&#125;</span><br><span class="line">	tempPath.pop_back();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;Cmax, &amp;n, &amp;Sp, &amp; m);</span><br><span class="line">	<span class="keyword">int</span> u, v;</span><br><span class="line">	<span class="built_in">fill</span>(G[<span class="number">0</span>], G[<span class="number">0</span>] + MAXV * MAXV, INF);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;weight[i]);</span><br><span class="line">		weight[i] -= Cmax / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;G[u][v]);</span><br><span class="line">		G[v][u] = G[u][v];</span><br><span class="line">	&#125;</span><br><span class="line">	Dijkstra(<span class="number">0</span>);</span><br><span class="line">	DFS(Sp);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d "</span>, minNeed);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = path.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>, path[i]);</span><br><span class="line">		<span class="keyword">if</span>(i &gt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"-&gt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">" %d"</span>, minRemain);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本题使用dijksta+DFS的方法来解决自行车管理，由于需要考虑到完美状态的问题，在录入数据时便将数据折半然后求最大容量与之差，得‘’-‘’则表示需要补给车辆反之需要撤走车辆。使用dijksta来解决最短路径，DFS来解决最小的need或最小的remain</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>图</category>
      </categories>
  </entry>
  <entry>
    <title>1017 Queueing at Bank</title>
    <url>/2020/02/03/1017-Queueing-at-Bank/</url>
    <content><![CDATA[<p>Suppose a bank has <em>K</em> windows open for service. There is a yellow line in front of the windows which devides the waiting area into two parts. All the customers have to wait in line behind the yellow line, until it is his/her turn to be served and there is a window available. It is assumed that no window can be occupied by a single customer for more than 1 hour.</p>
<p>Now given the arriving time <em>T</em> and the processing time <em>P</em> of each customer, you are supposed to tell the average waiting time of all the customers.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains 2 numbers: <em>N</em> (≤104) - the total number of customers, and <em>K</em> (≤100) - the number of windows. Then <em>N</em> lines follow, each contains 2 times: <code>HH:MM:SS</code> - the arriving time, and <em>P</em> - the processing time in minutes of a customer. Here <code>HH</code> is in the range [00, 23], <code>MM</code> and <code>SS</code> are both in [00, 59]. It is assumed that no two customers arrives at the same time.</p>
<p>Notice that the bank opens from 08:00 to 17:00. Anyone arrives early will have to wait in line till 08:00, and anyone comes too late (at or after 17:00:01) will not be served nor counted into the average.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in one line the average waiting time of all the customers, in minutes and accurate up to 1 decimal place.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7 3</span><br><span class="line">07:55:00 16</span><br><span class="line">17:00:01 2</span><br><span class="line">07:59:59 15</span><br><span class="line">08:01:00 60</span><br><span class="line">08:00:00 30</span><br><span class="line">08:00:02 2</span><br><span class="line">08:03:00 10</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8.2</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> k=<span class="number">111</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">10000000</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">customer</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> cometime,needtime;</span><br><span class="line">&#125;newcustomer;</span><br><span class="line"><span class="built_in">vector</span>&lt;customer&gt;custom;<span class="comment">//使用队列</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">changetime</span><span class="params">(<span class="keyword">int</span> h,<span class="keyword">int</span> m,<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> h*<span class="number">3600</span>+m*<span class="number">60</span>+s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(customer a,customer b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.cometime&lt;b.cometime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> endtime[k];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> c,w,totaltime=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> stime=changetime(<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">int</span> etime=changetime(<span class="number">17</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;c,&amp;w);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;w;i++) &#123;</span><br><span class="line">		endtime[i]=stime;<span class="comment">//初始化结束时间</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;c;i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> h,m,s,needtime;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d:%d:%d %d"</span>,&amp;h,&amp;m,&amp;s,&amp;needtime);</span><br><span class="line">		<span class="keyword">int</span> cometime=changetime(h, m, s);</span><br><span class="line">		<span class="keyword">if</span> (cometime&gt;etime) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		newcustomer.cometime=cometime;</span><br><span class="line">		newcustomer.needtime=needtime&lt;=<span class="number">60</span>?needtime*<span class="number">60</span>:<span class="number">3600</span>;</span><br><span class="line">		custom.push_back(newcustomer);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(custom.<span class="built_in">begin</span>(), custom.<span class="built_in">end</span>(), cmp);<span class="comment">//借助队列调用sort函数排序</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;custom.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> idx=<span class="number">-1</span>,minetime=INF;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;w;j++) &#123;<span class="comment">//选择最早结束服务的窗口</span></span><br><span class="line">			<span class="keyword">if</span> (endtime[j]&lt;minetime) &#123;</span><br><span class="line">				minetime=endtime[j];</span><br><span class="line">				idx=j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (endtime[idx]&lt;=custom[i].cometime) &#123;</span><br><span class="line">			endtime[idx]=custom[i].cometime+custom[i].needtime;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			totaltime+=(endtime[idx]-custom[i].cometime);</span><br><span class="line">			endtime[idx]+=custom[i].needtime;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (custom.<span class="built_in">size</span>()==<span class="number">0</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"0 0"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.1f"</span>,totaltime/<span class="number">60.0</span>/custom.<span class="built_in">size</span>());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1016 Phone Bills</title>
    <url>/2020/02/02/1016-Phone-Bills/</url>
    <content><![CDATA[<p>A long-distance telephone company charges its customers by the following rules:</p>
<p>Making a long-distance call costs a certain amount per minute, depending on the time of day when the call is made. When a customer starts connecting a long-distance call, the time will be recorded, and so will be the time when the customer hangs up the phone. Every calendar month, a bill is sent to the customer for each minute called (at a rate determined by the time of day). Your job is to prepare the bills for each month, given a set of phone call records.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case has two parts: the rate structure, and the phone call records.</p>
<p>The rate structure consists of a line with 24 non-negative integers denoting the toll (cents/minute) from 00:00 - 01:00, the toll from 01:00 - 02:00, and so on for each hour in the day.</p>
<p>The next line contains a positive number <em>N</em> (≤1000), followed by <em>N</em> lines of records. Each phone call record consists of the name of the customer (string of up to 20 characters without space), the time and date (<code>mm:dd:hh:mm</code>), and the word <code>on-line</code> or <code>off-line</code>.</p>
<p>For each test case, all dates will be within a single month. Each <code>on-line</code> record is paired with the chronologically next record for the same customer provided it is an <code>off-line</code> record. Any <code>on-line</code> records that are not paired with an <code>off-line</code> record are ignored, as are <code>off-line</code> records not paired with an <code>on-line</code> record. It is guaranteed that at least one call is well paired in the input. You may assume that no two records for the same customer have the same time. Times are recorded using a 24-hour clock.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, you must print a phone bill for each customer.</p>
<p>Bills must be printed in alphabetical order of customers’ names. For each customer, first print in a line the name of the customer and the month of the bill in the format shown by the sample. Then for each time period of a call, print in one line the beginning and ending time and date (<code>dd:hh:mm</code>), the lasting time (in minute) and the charge of the call. The calls must be listed in chronological order. Finally, print the total charge for the month in the format shown by the sample.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 10 10 10 10 10 20 20 20 15 15 15 15 15 15 15 20 30 20 15 15 10 10 10</span><br><span class="line">10</span><br><span class="line">CYLL 01:01:06:01 on-line</span><br><span class="line">CYLL 01:28:16:05 off-line</span><br><span class="line">CYJJ 01:01:07:00 off-line</span><br><span class="line">CYLL 01:01:08:03 off-line</span><br><span class="line">CYJJ 01:01:05:59 on-line</span><br><span class="line">aaa 01:01:01:03 on-line</span><br><span class="line">aaa 01:02:00:01 on-line</span><br><span class="line">CYLL 01:28:15:41 on-line</span><br><span class="line">aaa 01:05:02:24 on-line</span><br><span class="line">aaa 01:04:23:59 off-line</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CYJJ 01</span><br><span class="line">01:05:59 01:07:00 61 $12.10</span><br><span class="line">Total amount: $12.10</span><br><span class="line">CYLL 01</span><br><span class="line">01:06:01 01:08:03 122 $24.40</span><br><span class="line">28:15:41 28:16:05 24 $3.85</span><br><span class="line">Total amount: $28.25</span><br><span class="line">aaa 01</span><br><span class="line">02:00:01 04:23:59 4318 $638.80</span><br><span class="line">Total amount: $638.80</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> space[<span class="number">25</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">record</span> &#123;</span></span><br><span class="line">	<span class="keyword">char</span> name[<span class="number">25</span>];</span><br><span class="line">	<span class="keyword">int</span> month, dd, hh, mm;</span><br><span class="line">	<span class="keyword">bool</span> status;</span><br><span class="line">&#125; rec[maxn], temp;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(record a,record b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> s=<span class="built_in">strcmp</span>(a.name, b.name);</span><br><span class="line">	<span class="keyword">if</span> (s!=<span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> s&lt;<span class="number">0</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (a.month!=b.month) &#123;</span><br><span class="line">		<span class="keyword">return</span> a.month&lt;b.month;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (a.dd!=b.dd) &#123;</span><br><span class="line">		<span class="keyword">return</span> a.dd&lt;b.dd;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (a.hh!=b.hh) &#123;</span><br><span class="line">		<span class="keyword">return</span> a.hh&lt;b.hh;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> a.mm&lt;b.mm;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getmoney</span><span class="params">(<span class="keyword">int</span> on,<span class="keyword">int</span> off,<span class="keyword">int</span>&amp; time,<span class="keyword">int</span>&amp; money)</span></span>&#123;</span><br><span class="line">	temp=rec[on];</span><br><span class="line">	<span class="keyword">while</span> (temp.dd&lt;rec[off].dd||temp.hh&lt;rec[off].hh||temp.mm&lt;rec[off].mm) &#123;</span><br><span class="line">		time++;</span><br><span class="line">		money+=space[temp.hh];</span><br><span class="line">		temp.mm++;</span><br><span class="line">		<span class="keyword">if</span> (temp.mm&gt;=<span class="number">60</span>) &#123;</span><br><span class="line">			temp.mm=<span class="number">0</span>;</span><br><span class="line">			temp.hh++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (temp.hh&gt;=<span class="number">24</span>) &#123;</span><br><span class="line">			temp.hh=<span class="number">0</span>;</span><br><span class="line">			temp.dd++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">24</span>;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;space[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">char</span> <span class="built_in">line</span>[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,rec[i].name);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d:%d:%d:%d"</span>,&amp;rec[i].month,&amp;rec[i].dd,&amp;rec[i].hh,&amp;rec[i].mm);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,<span class="built_in">line</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="built_in">line</span>, <span class="string">"on-line"</span>)==<span class="number">0</span>) &#123;</span><br><span class="line">			rec[i].status=<span class="literal">true</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			rec[i].status=<span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(rec,rec+n,cmp);</span><br><span class="line">	<span class="keyword">int</span> on=<span class="number">0</span>,off,next;</span><br><span class="line">	<span class="keyword">while</span> (on&lt;n) &#123;</span><br><span class="line">		<span class="keyword">int</span> <span class="built_in">print</span>=<span class="number">0</span>;</span><br><span class="line">		next=on;</span><br><span class="line">		<span class="keyword">while</span> (next&lt;n&amp;&amp;<span class="built_in">strcmp</span>(rec[next].name, rec[on].name)==<span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">print</span>==<span class="number">0</span>&amp;&amp;rec[next].status==<span class="literal">true</span>) &#123;</span><br><span class="line">				<span class="built_in">print</span>=<span class="number">1</span>;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">print</span>==<span class="number">1</span>&amp;&amp;rec[next].status==<span class="literal">false</span>) &#123;</span><br><span class="line">				<span class="built_in">print</span>=<span class="number">2</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			next++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">print</span>&lt;<span class="number">2</span>) &#123;</span><br><span class="line">			on=next;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> allmoney=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s %02d\n"</span>,rec[on].name,rec[on].month);</span><br><span class="line">		<span class="keyword">while</span> (on&lt;next) &#123;</span><br><span class="line">			<span class="keyword">while</span> (on&lt;next<span class="number">-1</span>&amp;&amp;!(rec[on].status==<span class="literal">true</span>&amp;&amp;rec[on+<span class="number">1</span>].status==<span class="literal">false</span>)) &#123;</span><br><span class="line">				on++;</span><br><span class="line">			&#125;</span><br><span class="line">			off=on+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span> (off==next) &#123;</span><br><span class="line">				on=next;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d "</span>,rec[on].dd,rec[on].hh,rec[on].mm);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d "</span>,rec[off].dd,rec[off].hh,rec[off].mm);</span><br><span class="line">			<span class="keyword">int</span> time=<span class="number">0</span>,money=<span class="number">0</span>;</span><br><span class="line">			getmoney(on, off, time, money);</span><br><span class="line">			allmoney+=money;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d $%.2f\n"</span>,time,money/<span class="number">100.0</span>);</span><br><span class="line">			on=off+<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Total amount: $%.2f\n"</span>,allmoney/<span class="number">100.0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本题需要考虑每个用户的多个开始结束时间，要注意对用户信息进行排序这样可以便于找到on,off</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1014 Waiting in Line</title>
    <url>/2020/02/01/1014-Waiting-in-Line/</url>
    <content><![CDATA[<p>Suppose a bank has <em>N</em> windows open for service. There is a yellow line in front of the windows which devides the waiting area into two parts. The rules for the customers to wait in line are:</p>
<ul>
<li>The space inside the yellow line in front of each window is enough to contain a line with <em>M</em> customers. Hence when all the <em>N</em> lines are full, all the customers after (and including) the (<em>N**M</em>+1)st one will have to wait in a line behind the yellow line.</li>
<li>Each customer will choose the shortest line to wait in when crossing the yellow line. If there are two or more lines with the same length, the customer will always choose the window with the smallest number.</li>
<li><em>C<strong>u</strong>s<strong>t</strong>o<strong>m</strong>e<strong>r</strong>i</em> will take <em>T**i</em> minutes to have his/her transaction processed.</li>
<li>The first <em>N</em> customers are assumed to be served at 8:00am.</li>
</ul>
<p>Now given the processing time of each customer, you are supposed to tell the exact time at which a customer has his/her business done.</p>
<p>For example, suppose that a bank has 2 windows and each window may have 2 custmers waiting inside the yellow line. There are 5 customers waiting with transactions taking 1, 2, 6, 4 and 3 minutes, respectively. At 08:00 in the morning, <em>c*</em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>1is served at <em>w</em></em>i<strong>n</strong>d<strong>o</strong>w<em>1 while <em>c</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>2 is served at <em>w</em></em>i<strong>n</strong>d<strong>o</strong>w<em>2. <em>C</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>3 will wait in front of <em>w</em></em>i<strong>n</strong>d<strong>o</strong>w<em>1 and <em>c</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>4will wait in front of <em>w</em></em>i<strong>n</strong>d<strong>o</strong>w<em>2. <em>C</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r*5 will wait behind the yellow line.</p>
<p>At 08:01, <em>c*</em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>1 is done and <em>c</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>5 enters the line in front of <em>w</em></em>i<strong>n</strong>d<strong>o</strong>w<em>1 since that line seems shorter now. <em>C</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>2 will leave at 08:02, <em>c</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>4 at 08:06, <em>c</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r<em>3 at 08:07, and finally <em>c</em></em>u<strong>s</strong>t<strong>o</strong>m<strong>e</strong>r*5 at 08:10.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case starts with a line containing 4 positive integers: <em>N</em> (≤20, number of windows), <em>M</em> (≤10, the maximum capacity of each line inside the yellow line), <em>K</em> (≤1000, number of customers), and <em>Q</em> (≤1000, number of customer queries).</p>
<p>The next line contains <em>K</em> positive integers, which are the processing time of the <em>K</em> customers.</p>
<p>The last line contains <em>Q</em> positive integers, which represent the customers who are asking about the time they can have their transactions done. The customers are numbered from 1 to <em>K</em>.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each of the <em>Q</em> customers, print in one line the time at which his/her transaction is finished, in the format <code>HH:MM</code> where <code>HH</code> is in [08, 17] and <code>MM</code> is in [00, 59]. Note that since the bank is closed everyday after 17:00, for those customers who cannot be served before 17:00, you must output <code>Sorry</code> instead.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 2 7 5</span><br><span class="line">1 2 6 4 3 534 2</span><br><span class="line">3 4 5 6 7</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">08:07</span><br><span class="line">08:06</span><br><span class="line">08:10</span><br><span class="line">17:00</span><br><span class="line">Sorry</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxNode = <span class="number">1111</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k, query, q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">convertToMinute</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h * <span class="number">60</span> + m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Window</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> endTime, popTime;<span class="comment">//当前队伍的最后服务时间，队首客户的服务结束时间</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">&#125; window[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> ans[maxNode], needTime[maxNode];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> inIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;k, &amp;query);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;needTime[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        window[i].popTime = window[i].endTime = convertToMinute(<span class="number">8</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">min</span>(n * m, k); i++) &#123;</span><br><span class="line">        window[inIndex % n].q.push(inIndex);</span><br><span class="line">        window[inIndex % n].endTime += needTime[inIndex];</span><br><span class="line">        <span class="keyword">if</span>(inIndex &lt; n) window[inIndex].popTime = needTime[inIndex];</span><br><span class="line">        ans[inIndex] = window[inIndex % n].endTime;</span><br><span class="line">        inIndex++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(; inIndex &lt; k; inIndex++) &#123;</span><br><span class="line">        <span class="keyword">int</span> idx = <span class="number">-1</span>, minPopTime = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(window[i].popTime &lt; minPopTime) &#123;</span><br><span class="line">                idx = i;</span><br><span class="line">                minPopTime = window[i].popTime;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Window&amp; W = window[idx];</span><br><span class="line">        W.q.pop();</span><br><span class="line">        W.q.push(inIndex);</span><br><span class="line">        W.endTime += needTime[inIndex];</span><br><span class="line">        W.popTime += needTime[W.q.front()];</span><br><span class="line">        ans[inIndex] = W.endTime;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; query; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line">        <span class="keyword">if</span>(ans[q - <span class="number">1</span>] - needTime[q - <span class="number">1</span>] &gt;= convertToMinute(<span class="number">17</span>, <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Sorry\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%02d:%02d\n"</span>, ans[q - <span class="number">1</span>] / <span class="number">60</span>, ans[q - <span class="number">1</span>] % <span class="number">60</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1013 Battle Over Cities</title>
    <url>/2020/02/01/1013-Battle-Over-Cities/</url>
    <content><![CDATA[<p>It is vitally important to have all the cities connected by highways in a war. If a city is occupied by the enemy, all the highways from/toward that city are closed. We must know immediately if we need to repair any other highways to keep the rest of the cities connected. Given the map of cities which have all the remaining highways marked, you are supposed to tell the number of highways need to be repaired, quickly.</p>
<p>For example, if we have 3 cities and 2 highways connecting <em>c*</em>i<strong>t</strong>y<em>1-</em>c<strong>i</strong>t<strong>y*2 and *c</strong>i<strong>t</strong>y<em>1-</em>c<strong>i</strong>t<strong>y*3. Then if *c</strong>i<strong>t</strong>y<em>1 is occupied by the enemy, we must have 1 highway repaired, that is the highway <em>c</em></em>i<strong>t</strong>y<em>2-</em>c<strong>i</strong>t*<em>y</em>3.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case starts with a line containing 3 numbers <em>N</em> (&lt;1000), <em>M</em> and <em>K</em>, which are the total number of cities, the number of remaining highways, and the number of cities to be checked, respectively. Then <em>M</em>lines follow, each describes a highway by 2 integers, which are the numbers of the cities the highway connects. The cities are numbered from 1 to <em>N</em>. Finally there is a line containing <em>K</em> numbers, which represent the cities we concern.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each of the <em>K</em> cities, output in a line the number of highways need to be repaired if that city is lost.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 2 3</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[N];<span class="comment">//邻接表</span></span><br><span class="line"><span class="keyword">bool</span> vis[N];<span class="comment">//确定是否被访问</span></span><br><span class="line"><span class="keyword">int</span> currentpoint;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (v==currentpoint) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	vis[v]=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[v].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (vis[G[v][i]]==<span class="literal">false</span>) &#123;</span><br><span class="line">			dfs(G[v][i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n,k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> a,b;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">		G[a].push_back(b);</span><br><span class="line">		G[b].push_back(a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;currentpoint);</span><br><span class="line">		<span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span>(vis));<span class="comment">//初始化数组</span></span><br><span class="line">		<span class="keyword">int</span> block=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i!=currentpoint&amp;&amp;vis[i]==<span class="literal">false</span>) &#123;</span><br><span class="line">				dfs(i);</span><br><span class="line">				block++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,block<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将删除节点后的每个独立的线路分块，只需要统计这些块的个数即可得到所需要添加的路线数</p>
]]></content>
      <categories>
        <category>pat甲级</category>
        <category>图</category>
      </categories>
  </entry>
  <entry>
    <title>1012 The Best Rank</title>
    <url>/2020/02/01/1012-The-Best-Rank/</url>
    <content><![CDATA[<p>To evaluate the performance of our first year CS majored students, we consider their grades of three courses only: <code>C</code> - C Programming Language, <code>M</code> - Mathematics (Calculus or Linear Algrbra), and <code>E</code> - English. At the mean time, we encourage students by emphasizing on their best ranks – that is, among the four ranks with respect to the three courses and the average grade, we print the best rank for each student.</p>
<p>For example, The grades of <code>C</code>, <code>M</code>, <code>E</code> and <code>A</code> - Average of 4 students are given as the following:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">StudentID  C  M  E  A</span><br><span class="line">310101     98 85 88 90</span><br><span class="line">310102     70 95 88 84</span><br><span class="line">310103     82 87 94 88</span><br><span class="line">310104     91 91 91 91</span><br></pre></td></tr></table></figure>

<p>Then the best ranks for all the students are No.1 since the 1st one has done the best in C Programming Language, while the 2nd one in Mathematics, the 3rd one in English, and the last one in average.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case starts with a line containing 2 numbers <em>N</em> and <em>M</em> (≤2000), which are the total number of students, and the number of students who would check their ranks, respectively. Then <em>N</em> lines follow, each contains a student ID which is a string of 6 digits, followed by the three integer grades (in the range of [0, 100]) of that student in the order of <code>C</code>, <code>M</code> and <code>E</code>. Then there are <em>M</em> lines, each containing a student ID.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each of the <em>M</em> students, print in one line the best rank for him/her, and the symbol of the corresponding rank, separated by a space.</p>
<p>The priorities of the ranking methods are ordered as <code>A</code> &gt; <code>C</code> &gt; <code>M</code> &gt; <code>E</code>. Hence if there are two or more ways for a student to obtain the same best rank, output the one with the highest priority.</p>
<p>If a student is not on the grading list, simply output <code>N/A</code>.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 6</span><br><span class="line">310101 98 85 88</span><br><span class="line">310102 70 95 88</span><br><span class="line">310103 82 87 94</span><br><span class="line">310104 91 91 91</span><br><span class="line">310105 85 90 90</span><br><span class="line">310101</span><br><span class="line">310102</span><br><span class="line">310103</span><br><span class="line">310104</span><br><span class="line">310105</span><br><span class="line">999999</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 C</span><br><span class="line">1 M</span><br><span class="line">1 E</span><br><span class="line">1 A</span><br><span class="line">3 A</span><br><span class="line">N&#x2F;A</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> id;</span><br><span class="line">	<span class="keyword">int</span> grade[<span class="number">4</span>];</span><br><span class="line">&#125;stu[<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">char</span> course[<span class="number">4</span>] = &#123;<span class="string">'A'</span>, <span class="string">'C'</span>, <span class="string">'M'</span>, <span class="string">'E'</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> Rank[<span class="number">1000000</span>][<span class="number">4</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> px;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Student a, Student b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.grade[px] &gt; b.grade[px];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;stu[i].id, &amp;stu[i].grade[<span class="number">1</span>], &amp;stu[i].grade[<span class="number">2</span>], &amp;stu[i].grade[<span class="number">3</span>]);</span><br><span class="line">		stu[i].grade[<span class="number">0</span>] = (stu[i].grade[<span class="number">1</span>] + stu[i].grade[<span class="number">2</span>] + stu[i].grade[<span class="number">3</span>]) / <span class="number">3</span>+<span class="number">0.5</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(px = <span class="number">0</span>; px &lt; <span class="number">4</span>; px++)&#123;</span><br><span class="line">		sort(stu, stu + n, cmp);</span><br><span class="line">		Rank[stu[<span class="number">0</span>].id][px] = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(stu[i].grade[px] == stu[i - <span class="number">1</span>].grade[px])&#123;</span><br><span class="line">				Rank[stu[i].id][px] = Rank[stu[i - <span class="number">1</span>].id][px];</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				Rank[stu[i].id][px] = i + <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> findid;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;findid);</span><br><span class="line">		<span class="keyword">if</span>(Rank[findid][<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"N/A\n"</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(Rank[findid][j] &lt; Rank[findid][k])&#123;</span><br><span class="line">					k = j;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d %c\n"</span>, Rank[findid][k], course[k]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此题需要注意的是当考生的得分相同时需要将排名置为相同并且将后面的排名设置正确，当一个考生含有多个相同最优排名时要注意按照ACME的顺序输出，此项操作在开始时的赋值中确定。</p>
]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1010 Radix</title>
    <url>/2020/01/31/1010-Radix/</url>
    <content><![CDATA[<p>Given a pair of positive integers, for example, 6 and 110, can this equation 6 = 110 be true? The answer is <code>yes</code>, if 6 is a decimal number and 110 is a binary number.</p>
<p>Now for any pair of positive integers <em>N</em>1 and <em>N</em>2, your task is to find the radix of one number while that of the other is given.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies a line which contains 4 positive integers:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N1 N2 tag radix</span><br></pre></td></tr></table></figure>

<p>Here <code>N1</code> and <code>N2</code> each has no more than 10 digits. A digit is less than its radix and is chosen from the set { 0-9, <code>a</code>-<code>z</code> } where 0-9 represent the decimal numbers 0-9, and <code>a</code>-<code>z</code> represent the decimal numbers 10-35. The last number <code>radix</code> is the radix of <code>N1</code> if <code>tag</code> is 1, or of <code>N2</code> if <code>tag</code> is 2.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in one line the radix of the other number so that the equation <code>N1</code> = <code>N2</code> is true. If the equation is impossible, print <code>Impossible</code>. If the solution is not unique, output the smallest possible radix.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1:"></a>Sample Input 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 110 1 10</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1:"></a>Sample Output 1:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2:"></a>Sample Input 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 ab 1 2</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2:"></a>Sample Output 2:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Impossible</span><br></pre></td></tr></table></figure>

<p>本题主要的思路是采用二分查找将已经确定的数值化成十进制以此为媒介来逐一排除需求的数，当实际解题时要注意确定进制的上下界。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">LL <span class="built_in">map</span>[<span class="number">255</span>];</span><br><span class="line">LL inf=(<span class="number">1L</span>L&lt;&lt;<span class="number">63</span>)<span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">char</span> c=<span class="string">'0'</span>;c&lt;=<span class="string">'9'</span>;c++) &#123;</span><br><span class="line">		<span class="built_in">map</span>[c]=c-<span class="string">'0'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">char</span> c=<span class="string">'a'</span>;c&lt;=<span class="string">'z'</span>;c++) &#123;</span><br><span class="line">		<span class="built_in">map</span>[c]=c-<span class="string">'a'</span>+<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">change10</span><span class="params">(<span class="keyword">char</span> a[],LL radix,LL t)</span></span>&#123;</span><br><span class="line">	LL ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(a);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) &#123;</span><br><span class="line">		ans=ans*radix+<span class="built_in">map</span>[a[i]];</span><br><span class="line">		<span class="keyword">if</span>(ans&lt;<span class="number">0</span>||ans&gt;t)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> n2[],LL radix,LL t)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(n2);</span><br><span class="line">	LL num=change10(n2, radix, t);</span><br><span class="line">	<span class="keyword">if</span> (num&lt;<span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t&gt;num) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (t==num) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">binarysearch</span><span class="params">(<span class="keyword">char</span> n2[],LL left,LL right,LL t)</span></span>&#123;</span><br><span class="line">	LL mid;</span><br><span class="line">	<span class="keyword">while</span> (left&lt;=right) &#123;</span><br><span class="line">		mid=(left+right)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">int</span> flag=cmp(n2, mid, t);</span><br><span class="line">		<span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span> (flag==<span class="number">-1</span>) &#123;</span><br><span class="line">			left=mid+<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			right=mid<span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findmost</span><span class="params">(<span class="keyword">char</span> n2[])</span></span>&#123;<span class="comment">//求最大的数位</span></span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">-1</span>,len=<span class="built_in">strlen</span>(n2);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">map</span>[n2[i]]&gt;ans) &#123;</span><br><span class="line">			ans=<span class="built_in">map</span>[n2[i]];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> n1[<span class="number">20</span>],n2[<span class="number">20</span>],temp[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> tag,radix;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	init();</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s%s%d%d"</span>,n1,n2,&amp;tag,&amp;radix);</span><br><span class="line">	<span class="keyword">if</span> (tag==<span class="number">2</span>) &#123;</span><br><span class="line">		<span class="built_in">strcpy</span>(temp, n1);</span><br><span class="line">		<span class="built_in">strcpy</span>(n1, n2);</span><br><span class="line">		<span class="built_in">strcpy</span>(n2, temp);</span><br><span class="line">	&#125;</span><br><span class="line">	LL t=change10(n1, radix, inf);</span><br><span class="line">	LL low=findmost(n2);</span><br><span class="line">	LL high=<span class="built_in">max</span>(low,t)+<span class="number">1</span>;</span><br><span class="line">	LL ans=binarysearch(n2, low, high, t);</span><br><span class="line">	<span class="keyword">if</span> (ans==<span class="number">-1</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1009 Product of Polynomials</title>
    <url>/2020/01/31/1009-Product-of-Polynomials/</url>
    <content><![CDATA[<p>This time, you are supposed to find <em>A</em>×<em>B</em> where <em>A</em> and <em>B</em> are two polynomials.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p>
<p><em>K</em> <em>N</em>1 <em>a<strong>N<em>1 *N</em>2 *a</strong>N<em>2 … <em>N</em></em>K</em> <em>a<strong>N</strong>K</em></p>
<p>where <em>K</em> is the number of nonzero terms in the polynomial, <em>N**i</em> and <em>a<strong>N</strong>i</em> (<em>i</em>=1,2,⋯,<em>K</em>) are the exponents and coefficients, respectively. It is given that 1≤<em>K</em>≤10, 0≤<em>N**K</em>&lt;⋯&lt;<em>N</em>2&lt;<em>N</em>1≤1000. </p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case you should output the product of <em>A</em> and <em>B</em> in one line, with the same format as the input. Notice that there must be <strong>NO</strong> extra space at the end of each line. Please be accurate up to 1 decimal place. </p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 1 2.4 0 3.2</span><br><span class="line">2 2 1.5 1 0.5</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3 3.6 2 6.0 1 1.6</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">poly</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> bn;</span><br><span class="line">	<span class="keyword">double</span> an;</span><br><span class="line">&#125;poly[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">double</span> result[<span class="number">2010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n,sum_an=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>,&amp;poly[i].bn,&amp;poly[i].an);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> bn;</span><br><span class="line">		<span class="keyword">double</span> an;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>,&amp;bn,&amp;an);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">			result[bn+poly[j].bn]+=(an*poly[j].an);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">2000</span>;i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (result[i]!=<span class="number">0.0</span>) &#123;</span><br><span class="line">			sum_an++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,sum_an);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2000</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">		<span class="keyword">if</span> (result[i]!=<span class="number">0.0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">" %d %.1f"</span>,i,result[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1007 Maximum Subsequence Sum</title>
    <url>/2020/01/30/1007-Maximum-Subsequence-Sum/</url>
    <content><![CDATA[<p>Given a sequence of <em>K</em> integers { <em>N</em>1, <em>N</em>2, …, <em>N**K</em> }. A continuous subsequence is defined to be { <em>N**i</em>, <em>N**i</em>+1, …, <em>N**j</em> } where 1≤<em>i</em>≤<em>j</em>≤<em>K</em>. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.</p>
<p>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence. </p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integer <em>K</em> (≤10000). The second line contains <em>K</em> numbers, separated by a space. </p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices <em>i</em> and <em>j</em> (as shown by the sample case). If all the <em>K</em> numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence. </p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">-10 1 2 3 4 -5 -23 3 7 -21</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 1 4</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],dp[maxn],s[maxn]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//a存放序列，dp存放以a[i]结尾的序列和，s[i]存放dp[i]的开始元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">		<span class="keyword">if</span> (a[i]&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">			flag=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (flag==<span class="literal">false</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"0 %d %d\n"</span>,a[<span class="number">0</span>],a[n<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	dp[<span class="number">0</span>]=a[<span class="number">0</span>];<span class="comment">//设置边界</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (dp[i<span class="number">-1</span>]+a[i]&gt;a[i]) &#123;</span><br><span class="line">			dp[i]=dp[i<span class="number">-1</span>]+a[i];</span><br><span class="line">			s[i]=s[i<span class="number">-1</span>];</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			dp[i]=a[i];</span><br><span class="line">			s[i]=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (dp[i]&gt;dp[k]) &#123;</span><br><span class="line">			k=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,dp[k],a[s[k]],a[k]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1006 Sign In and Sign Out</title>
    <url>/2020/01/30/1006-Sign-In-and-Sign-Out/</url>
    <content><![CDATA[<p>At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door. Given the records of signing in’s and out’s, you are supposed to find the ones who have unlocked and locked the door on that day.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains the records for one day. The case starts with a positive integer <em>M</em>, which is the total number of records, followed by <em>M</em> lines, each in the format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID_number Sign_in_time Sign_out_time</span><br></pre></td></tr></table></figure>

<p>where times are given in the format <code>HH:MM:SS</code>, and <code>ID_number</code> is a string with no more than 15 characters.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, output in one line the ID numbers of the persons who have unlocked and locked the door on that day. The two ID numbers must be separated by one space.</p>
<p>Note: It is guaranteed that the records are consistent. That is, the sign in time must be earlier than the sign out time for each person, and there are no two persons sign in or out at the same moment.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">CS301111 15:30:28 17:00:10</span><br><span class="line">SC3021234 08:00:00 11:25:25</span><br><span class="line">CS301133 21:45:00 21:58:40</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SC3021234 CS301133</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">	<span class="keyword">char</span> id[<span class="number">20</span>];</span><br><span class="line">	<span class="keyword">int</span> h,m,s;</span><br><span class="line">&#125;temp,ans1,ans2;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">great</span><span class="params">(Node node1,Node node2)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (node1.h!=node2.h) &#123;</span><br><span class="line">		<span class="keyword">return</span> node1.h&gt;node2.h;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (node1.m!=node2.m) &#123;</span><br><span class="line">		<span class="keyword">return</span> node1.m&gt;node2.m;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> node1.s&gt;node2.s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	ans1.h=<span class="number">24</span>,ans1.m=<span class="number">60</span>,ans1.s=<span class="number">60</span>;</span><br><span class="line">	ans2.h=<span class="number">0</span>,ans2.m=<span class="number">0</span>,ans2.s=<span class="number">0</span>; </span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s%d:%d:%d"</span>,temp.id,&amp;temp.h,&amp;temp.m,&amp;temp.s);</span><br><span class="line">		<span class="keyword">if</span> (great(temp, ans1)==<span class="literal">false</span>) &#123;</span><br><span class="line">			ans1=temp;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d:%d:%d"</span>,&amp;temp.h,&amp;temp.m,&amp;temp.s);</span><br><span class="line">		<span class="keyword">if</span> (great(temp, ans2)==<span class="literal">true</span>) &#123;</span><br><span class="line">			ans2=temp;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s %s"</span>,ans1.id,ans2.id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
  <entry>
    <title>1005 Spell It Right</title>
    <url>/2020/01/30/1005-Spell-It-Right/</url>
    <content><![CDATA[<p>Given a non-negative integer <em>N</em>, your task is to compute the sum of all the digits of <em>N</em>, and output every digit of the sum in English.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies one line which contains an <em>N</em> (≤10100).</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><p><code>12345</code></p>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><p><code>one five</code></p>
<p>需要注意在获取字符串时不能使用gets。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> num[<span class="number">10</span>][<span class="number">10</span>]=&#123;<span class="string">"zero"</span>,<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>,<span class="string">"four"</span>,<span class="string">"five"</span>,<span class="string">"six"</span>,<span class="string">"seven"</span>,<span class="string">"eight"</span>,<span class="string">"nine"</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> digit[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>,s);</span><br><span class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">	<span class="keyword">int</span> sum=<span class="number">0</span>,Len=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) &#123;</span><br><span class="line">		sum+=(s[i]-<span class="string">'0'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (sum==<span class="number">0</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s"</span>,num[<span class="number">0</span>]);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (sum!=<span class="number">0</span>) &#123;</span><br><span class="line">			digit[Len++]=sum%<span class="number">10</span>;</span><br><span class="line">			sum/=<span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=Len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%s"</span>,num[digit[i]]);</span><br><span class="line">			<span class="keyword">if</span> (i!=<span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>pat甲级</category>
      </categories>
  </entry>
</search>
